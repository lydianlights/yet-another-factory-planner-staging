{"version":3,"sources":["assets/satisfactory_logo_full_color_small.png","components/SocialIcon/index.tsx","containers/Main/SiteHeader/index.tsx","data/index.ts","utilities/production-solver/index.ts","contexts/production/state-decoders/v1_U5.ts","contexts/production/state-decoders/v2_U5.ts","contexts/production/reducer.tsx","contexts/production/index.tsx","hooks/usePrevious.ts","contexts/drawer/index.tsx","components/Portal/index.tsx","containers/Drawer/index.tsx","components/Card/index.tsx","components/Section/index.tsx","components/TrashButton/index.tsx","containers/ProductionPlanner/PlannerOptions/ProductionTab/index.tsx","containers/ProductionPlanner/PlannerOptions/InputsTab/index.tsx","containers/ProductionPlanner/PlannerOptions/RecipesTab/index.tsx","containers/ProductionPlanner/PlannerOptions/index.tsx","theme.ts","containers/ProductionPlanner/PlannerResults/ProductionGraphTab/index.tsx","containers/ProductionPlanner/PlannerResults/ReportTab/index.tsx","containers/ProductionPlanner/PlannerResults/index.tsx","containers/ProductionPlanner/Factory.tsx","containers/ProductionPlanner/index.tsx","components/PaypalButton/index.tsx","components/ExternalLink/index.tsx","containers/Main/index.tsx","assets/stripe-bg.png","global-stylesheet.ts","App.tsx","index.tsx"],"names":["SocialIcon","props","href","icon","SAnchor","target","rel","styled","Anchor","SiteHeader","HeaderContainer","fluid","src","logo","height","alt","MainTitle","BetaTag","SocialLinks","faGithub","fontSize","faDiscord","faTwitter","Container","theme","other","pageLeftMargin","Title","div","Group","buildings","buildingsRaw","recipes","recipesRaw","resources","resourcesRaw","items","itemsRaw","handGatheredItems","handGatheredItemsRaw","EPSILON","MAXIMIZE_TARGET_WEIGHTING","RATE_TARGET_KEY","NODE_TYPE","POINTS_ITEM_KEY","ProductionSolver","options","globalWeights","inputs","rateTargets","maximizeTargets","hasPointsTarget","allowedRecipes","this","Number","weightingOptions","power","complexity","validateNumber","maxGlobalWeight","Math","max","inputResources","forEach","item","itemKey","amount","unlimited","Infinity","value","weight","type","maxResourceWeight","Object","values","map","i","inputItems","allowHandGatheredItems","keys","perMinTargets","recipeTargets","productionItems","Error","isPoints","mode","recipe","existingTarget","find","t","key","priority","push","recipeKey","recipeInfo","products","p","itemClass","perMinute","sort","a","b","length","num","isNaN","timestamp","performance","now","loadGLPK","glpk","productionSolverPass","productionSolution","productionGraph","generateProductionGraph","remainingInputs","inputKey","input","inputNode","nodes","n","usedAmount","multiplier","diff","entries","solution","report","generateProductionReport","computeTime","error","message","itemInfo","isFicsmas","sinkPoints","targetKey","model","name","objective","direction","GLP_MIN","vars","subjectTo","doPoints","pointsVars","buildingInfo","producedIn","powerScore","complexityScore","ingredients","resourceScore","ingredient","inputInfo","coef","bnds","GLP_LO","ub","lb","pointCoef","product","getItemPoints","intrinsicPoints","targetInfo","GLP_UP","NaN","v","existingVar","ov","usedInRecipes","producedFromRecipes","outputInfo","solve","msglev","GLP_MSG_OFF","result","status","GLP_OPT","val","itemProductionTotals","graph","edges","producedBy","usedBy","id","nanoid","productionTotals","j","nextDemand","usageInfo","usageNode","productionInfo","productionNode","outputRecipe","recipeAmount","itemNode","from","to","productionRate","nodeType","pointsProduced","powerUsageEstimate","resourceEfficiencyScore","totalBuildArea","estimatedFoundations","buildingsUsed","totalMaterialCost","node","buildingKey","ceil","area","count","materialCost","buildCost","quantity","SEP2","getItemBySlug","slug","itemEntry","getModeBySlug","recipeEntry","ORDERED_RESOURCES","getInitialInputResources","data","String","maxExtraction","relativeValue","aIndex","findIndex","r","bIndex","getInitialAllowedRecipes","recipeMap","isAlternate","getInitialState","version","reducer","state","action","newProductionItems","filter","newItem","nextPriority","newInputItems","newInputResources","active","newWeightingOptions","newAllowedRecipes","alternates","encodedState","URLSearchParams","window","location","search","get","stateStr","substring","newState","fields","split","allowedRecipesBits","BigInt","toString","padStart","parseInt","productionItemsStrings","str","inputItemsStrings","inputResourcesStrings","resourceOptions","weightingOptionsStrings","decodeState_v1_U5","decodeState_v2_U5","decodeState","e","console","getItemSlug","encodeState","join","productionItemsField","getModeSlug","inputItemsField","inputResourcesField","seed","floor","Date","getTime","rng","seedrandom","TIPS","TIP_INDEX","TIP","ID","random","_handleCalculateFactory","_","debounce","setSolverResults","setCalculating","solver","exec","results","prevState","log","leading","trailing","ProductionContext","createContext","useProductionContext","ctx","useContext","displayName","ProductionProvider","children","useReducer","dispatch","useState","loadedFromQuery","setLoadedFromQuery","firstCalculationDone","setFirstCalculationDone","useLocalStorageValue","defaultValue","autoCalculate","setAutoCalculate","calculating","solverResults","engineerId","ref","useRef","useEffect","current","usePrevious","autoCalculateBool","handleCalculateFactory","useCallback","handleSetAutoCalculate","checked","history","replaceState","pathname","ctxValue","useMemo","calculate","ficsitTip","Provider","DrawerContext","DrawerProvider","rootNode","setRootNode","useMantineTheme","DrawerRoot","topOffset","headerHeight","Portal","createPortal","Drawer","open","onToggle","fullyClosed","setFullyClosed","tooltipDismissed","setTooltipDismissed","useDrawerContext","showTooltip","DrawerDimmer","onClick","DrawerContainer","onTransitionEnd","DrawerToggle","ToggleLabel","ToggleLabelText","ToggleLabelIcon","Tooltip","TooltipText","TooltipConfirmContainer","TooltipConfirm","stopPropagation","DrawerContent","className","drawerWidth","colors","background","primary","UnstyledButton","white","span","Paper","info","Text","Card","Section","SectionDescription","TrashButton","Button","color","style","width","padding","flex","size","itemOptions","label","unshift","baseModeOptions","priorityOptions","Array","fill","reverse","ProductionTab","order","modeOptions","replace","ItemContainer","Row","Select","placeholder","clearable","searchable","onChange","position","top","TextInput","min","step","currentTarget","Divider","marginTop","marginBottom","InputsTab","disabled","Checkbox","grow","renderWeightInputs","fontWeight","cleanAltNameRegex","baseRecipes","altRecipes","RecipesTab","searchValue","setSearchValue","renderRecipeList","recipeList","component","List","Item","renderedBaseRecipes","renderedAltRecipes","renderRecipeOptions","rendered","listStyleType","spacing","toLowerCase","includes","Grid","Col","VDivider","PlannerOptions","paddingTop","marginRight","Switch","Tabs","variant","Tab","TabContainer","defaultFont","baseSat","baseLight","selectSat","selectLight","graphColors","resource","base","selected","handGathered","sideProduct","finalProduct","nuclear","edge","line","incoming","outgoing","primaryColor","fontFamily","radius","xs","sm","md","lg","xl","headings","sizes","h1","lineHeight","h2","h3","h4","h5","h6","scrollbarTrackColor","scrollbarThumbColor","styles","AppShell","root","minHeight","anchor","borderRadius","hovered","cursor","borderWidth","borderColor","horizontal","borderTopColor","backgroundColor","opacity","tabLabel","tabIcon","tabActive","borderBottomWidth","body","borderBottomLeftRadius","borderBottomRightRadius","Cytoscape","use","klay","warnings","layout","edgeRouting","nodePlacement","edgeSpacingFactor","inLayerSpacingFactor","thoroughness","stylesheet","selector","NODE_COLOR_CLASS","truncateFloat","toFixed","getNodeLabel","amountText","getNodeClasses","classes","getEdgeLabel","_resizeListener","graphRef","bounds","getBoundingClientRect","innerHeight","ProductionGraphTab","activeGraph","errorMessage","doFirstRender","setDoFirstRender","cyRef","resizeListener","addEventListener","removeEventListener","graphProps","elements","group","source","undefined","GraphContainer","instance","boxSelectionEnabled","wheelSensitivity","maxZoom","minZoom","overflow","cy","on","addClass","outgoers","incomers","removeClass","Center","gap","formatFloat","toLocaleString","maximumFractionDigits","ReportTab","ReportContainer","SDivider","SmallerTitle","abs","paddingBottom","Count","ListWithLine","withPadding","ItemLabel","justifyContent","tabSx","minWidth","PlannerResults","sx","paddingLeft","Factory","drawerOpen","setDrawerOpen","ProductionPlanner","PaypalButton","method","title","ExternalLink","Main","header","SHeader","MainContainer","Footer","FooterContent","Header","GlobalStylesheet","createGlobalStyle","bgImage","btoa","App","MantineProvider","ThemeTransfer","mergedTheme","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54b60f66.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/satisfactory_logo_full_color_small.da5e9783.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Anchor } from '@mantine/core';\r\n\r\ninterface Props {\r\n  href: string;\r\n  icon: React.ReactNode;\r\n}\r\n\r\nconst SocialIcon = (props: Props) => {\r\n  const { href, icon } = props;\r\n  return (\r\n    <SAnchor href={href} target='_blank' rel='noopener noreferrer'>\r\n      {icon || null}\r\n    </SAnchor>\r\n  );\r\n};\r\n\r\nexport default SocialIcon;\r\n\r\nconst SAnchor = styled(Anchor)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #f0f0f0;\r\n\r\n  &:hover {\r\n    color: #ddd;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Title, Container, Group } from '@mantine/core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub, faTwitter, faDiscord } from '@fortawesome/free-brands-svg-icons';\r\nimport logo from '../../../assets/satisfactory_logo_full_color_small.png';\r\nimport SocialIcon from '../../../components/SocialIcon';\r\n\r\nconst SiteHeader = () => {\r\n  return (\r\n    <HeaderContainer fluid>\r\n      <img src={logo} height={42} alt='Satisfactory logo' />\r\n      <MainTitle>[Yet Another Factory Planner]</MainTitle>\r\n      <BetaTag>(BETA)</BetaTag>\r\n      <SocialLinks>\r\n        <SocialIcon href='https://github.com/lydianlights/yet-another-factory-planner' icon={<FontAwesomeIcon icon={faGithub} fontSize={32} />} />\r\n        <SocialIcon href='https://discord.gg/p7e9ZzRHCm' icon={<FontAwesomeIcon icon={faDiscord} fontSize={32} />} />\r\n        <SocialIcon href='https://twitter.com/LydianLights' icon={<FontAwesomeIcon icon={faTwitter} fontSize={32} />} />\r\n      </SocialLinks>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default SiteHeader;\r\n\r\nconst HeaderContainer = styled(Container)`\r\n  display: flex;\r\n  margin-left: ${({ theme }) => theme.other.pageLeftMargin};\r\n  padding: 0px;\r\n`;\r\n\r\nconst MainTitle = styled(Title)`\r\n  position: relative;\r\n  top: 1px;\r\n  font-size: 32px;\r\n  color: #fff;\r\n  margin-left: 25px;\r\n  white-space: nowrap;\r\n  font-family: 'Indie Flower', sans-serif;\r\n`;\r\n\r\nconst BetaTag = styled.div`\r\n  position: relative;\r\n  left: 7px;\r\n  top: 3px;\r\n  font-size: 24px;\r\n  color: #fff;\r\n  font-family: 'Fjalla One', sans-serif;\r\n  transform: rotate(20deg);\r\n`;\r\n\r\nconst SocialLinks = styled(Group)`\r\n  display: flex;\r\n  margin-left: auto;\r\n  margin-right: 30px;\r\n`;\r\n","import buildingsRaw from './json/buildings.json';\r\nimport recipesRaw from './json/recipes.json';\r\nimport resourcesRaw from './json/resources.json';\r\nimport itemsRaw from './json/items.json';\r\nimport handGatheredItemsRaw from './json/handGatheredItems.json';\r\n\r\n\r\nexport type ItemRate = {\r\n  itemClass: string,\r\n  perMinute: number,\r\n};\r\n\r\nexport type ItemQuantity = {\r\n  itemClass: string,\r\n  quantity: number,\r\n};\r\n\r\nexport type BuildingsInfo = {\r\n  slug: string,\r\n  name: string,\r\n  power: number,\r\n  area: number,\r\n  buildCost: ItemQuantity[],\r\n  isFicsmas: boolean,\r\n};\r\n\r\nexport type RecipeInfo = {\r\n  slug: string,\r\n  name: string,\r\n  isAlternate: boolean,\r\n  ingredients: ItemRate[],\r\n  products: ItemRate[],\r\n  producedIn: string,\r\n  isFicsmas: boolean,\r\n};\r\n\r\nexport type ResourceInfo = {\r\n  itemClass: string,\r\n  maxExtraction: number | null,\r\n  relativeValue: number,\r\n};\r\n\r\nexport type ItemInfo = {\r\n  slug: string,\r\n  name: string,\r\n  sinkPoints: number,\r\n  usedInRecipes: string[],\r\n  producedFromRecipes: string[],\r\n  isFicsmas: boolean,\r\n};\r\n\r\nexport type BuildingMap = { [key in keyof typeof buildingsRaw]: BuildingsInfo } & { [key: string]: BuildingsInfo };\r\nexport type RecipeMap = { [key in keyof typeof recipesRaw]: RecipeInfo } & { [key: string]: RecipeInfo };\r\nexport type ResourceMap = { [key in keyof typeof resourcesRaw]: ResourceInfo } & { [key: string]: ResourceInfo };\r\nexport type ItemMap = { [key in keyof typeof itemsRaw]: ItemInfo } & { [key: string]: ItemInfo };\r\nexport type HandGatheredItemMap = { [key in keyof typeof handGatheredItemsRaw]: string } & { [key: string]: string };\r\n\r\nexport const buildings = (buildingsRaw as BuildingMap);\r\nexport const recipes = (recipesRaw as RecipeMap);\r\nexport const resources = (resourcesRaw as ResourceMap);\r\nexport const items = (itemsRaw as ItemMap);\r\nexport const handGatheredItems = (handGatheredItemsRaw as HandGatheredItemMap);\r\n","import loadGLPK, { GLPK, LP, Var } from 'glpk.js';\r\nimport { nanoid } from 'nanoid';\r\nimport { FactoryOptions, RecipeMap } from '../../contexts/production/reducer';\r\nimport { buildings, items, recipes, resources, handGatheredItems } from '../../data';\r\n\r\nconst EPSILON = 1e-8;\r\nconst MAXIMIZE_TARGET_WEIGHTING = 1e6;\r\nconst RATE_TARGET_KEY = 'RATE_TARGET_PASS';\r\n\r\nexport const NODE_TYPE = {\r\n  FINAL_PRODUCT: 'FINAL_PRODUCT',\r\n  SIDE_PRODUCT: 'SIDE_PRODUCT',\r\n  INPUT_ITEM: 'INPUT_ITEM',\r\n  HAND_GATHERED_RESOURCE: 'HAND_GATHERED_RESOURCE',\r\n  RESOURCE: 'RESOURCE',\r\n  RECIPE: 'RECIPE',\r\n};\r\n\r\nexport const POINTS_ITEM_KEY = 'POINTS_ITEM_KEY';\r\n\r\ntype Inputs = {\r\n  [key: string]: {\r\n    amount: number,\r\n    weight: number,\r\n    type: string,\r\n  }\r\n};\r\n\r\ntype RateTargets = {\r\n  [key: string]: {\r\n    value: number,\r\n    recipe: string | null,\r\n    isPoints: boolean,\r\n  }\r\n};\r\n\r\ntype MaximizeTargets = { key: string, priority: number };\r\n\r\ntype GlobalWeights = {\r\n  resources: number,\r\n  power: number,\r\n  complexity: number,\r\n};\r\n\r\ntype ProductionSolution = { [key: string]: number };\r\ntype ProductionAmount = { recipeKey: string, amount: number };\r\ntype ItemProductionTotals = {\r\n  [key: string]: {\r\n    producedBy: ProductionAmount[],\r\n    usedBy: ProductionAmount[],\r\n  }\r\n};\r\n\r\nexport type SolverResults = {\r\n  productionGraph: ProductionGraph | null,\r\n  report: Report | null,\r\n  timestamp: number,\r\n  computeTime: number,\r\n  error: string,\r\n};\r\n\r\nexport type Report = {\r\n  pointsProduced: number,\r\n  powerUsageEstimate: number,\r\n  resourceEfficiencyScore: number,\r\n  totalBuildArea: number,\r\n  estimatedFoundations: number,\r\n  buildingsUsed: {\r\n    [key: string]: {\r\n      count: number,\r\n      materialCost: {\r\n        [key: string]: number,\r\n      }\r\n    },\r\n  },\r\n  totalMaterialCost: {\r\n    [key: string]: number,\r\n  },\r\n}\r\n\r\nexport type ProductionGraph = {\r\n  nodes: { [key: string]: GraphNode },\r\n  edges: GraphEdge[],\r\n};\r\n\r\nexport type GraphNode = {\r\n  id: string,\r\n  key: string,\r\n  type: string,\r\n  multiplier: number,\r\n};\r\n\r\nexport type GraphEdge = {\r\n  key: string,\r\n  from: string,\r\n  to: string,\r\n  productionRate: number,\r\n};\r\n\r\nexport class ProductionSolver {\r\n  private globalWeights: GlobalWeights;\r\n  private inputs: Inputs;\r\n  private rateTargets: RateTargets;\r\n  private maximizeTargets: MaximizeTargets[];\r\n  private hasPointsTarget: boolean;\r\n  private allowedRecipes: RecipeMap;\r\n\r\n  public constructor(options: FactoryOptions) {\r\n    this.allowedRecipes = options.allowedRecipes;\r\n    \r\n    this.globalWeights = {\r\n      resources: Number(options.weightingOptions.resources),\r\n      power: Number(options.weightingOptions.power),\r\n      complexity: Number(options.weightingOptions.complexity),\r\n    };\r\n\r\n    this.validateNumber(this.globalWeights.resources);\r\n    this.validateNumber(this.globalWeights.power);\r\n    this.validateNumber(this.globalWeights.complexity);\r\n\r\n    const maxGlobalWeight = Math.max(this.globalWeights.resources, this.globalWeights.power, this.globalWeights.complexity);\r\n    this.globalWeights.resources /= maxGlobalWeight;\r\n    this.globalWeights.power /= maxGlobalWeight;\r\n    this.globalWeights.complexity /= (maxGlobalWeight / 10);\r\n\r\n    this.inputs = {};\r\n\r\n    options.inputResources.forEach((item) => {\r\n      const resourceData = resources[item.itemKey];\r\n      if (!resourceData) return;\r\n      const amount = item.unlimited ? Infinity : Number(item.value);\r\n      this.validateNumber(amount);\r\n      if (!amount) return;\r\n      const weight = Number(item.weight);\r\n      this.validateNumber(weight);\r\n      this.inputs[item.itemKey] = {\r\n        amount,\r\n        weight,\r\n        type: NODE_TYPE.RESOURCE,\r\n      }\r\n    });\r\n\r\n    const maxResourceWeight = Math.max(...Object.values(this.inputs).map((i) => i.weight));\r\n    Object.values(this.inputs).forEach((i) => { i.weight /= maxResourceWeight });\r\n\r\n    options.inputItems.forEach((item) => {\r\n      if (!item.itemKey) return;\r\n      const amount = item.unlimited ? Infinity : Number(item.value);\r\n      this.validateNumber(amount);\r\n      if (!amount) return;\r\n      if (!this.inputs[item.itemKey]) {\r\n        this.inputs[item.itemKey] = {\r\n          amount,\r\n          weight: 0,\r\n          type: NODE_TYPE.INPUT_ITEM,\r\n        }\r\n      } else {\r\n        this.inputs[item.itemKey].amount += amount;\r\n      }\r\n    });\r\n\r\n    if (options.allowHandGatheredItems) {\r\n      Object.keys(handGatheredItems).forEach((item) => {\r\n        this.inputs[item] = {\r\n          amount: Infinity,\r\n          weight: 1000,\r\n          type: NODE_TYPE.HAND_GATHERED_RESOURCE,\r\n        };\r\n      });\r\n    }\r\n\r\n    this.inputs['Desc_Gift_C'] = {\r\n      amount: Infinity,\r\n      weight: 1000,\r\n      type: NODE_TYPE.HAND_GATHERED_RESOURCE,\r\n    };\r\n\r\n    this.rateTargets = {};\r\n    this.maximizeTargets = [];\r\n    this.hasPointsTarget = false;\r\n\r\n    const perMinTargets: RateTargets = {};\r\n    const recipeTargets: RateTargets = {};\r\n    options.productionItems.forEach((item) => {\r\n      if (!item.itemKey) return;\r\n      const amount = Number(item.value);\r\n      this.validateNumber(amount);\r\n      if (!amount) return;\r\n      if (this.inputs[item.itemKey]) throw new Error('CANNOT HAVE ITEM AS BOTH INPUT AND OUTPUT');\r\n      const isPoints = item.itemKey === POINTS_ITEM_KEY;\r\n      if (isPoints) {\r\n        this.hasPointsTarget = true;\r\n      }\r\n      switch (item.mode) {\r\n        case 'per-minute':\r\n          if (perMinTargets[item.itemKey]) {\r\n            perMinTargets[item.itemKey].value += amount;\r\n          } else {\r\n            perMinTargets[item.itemKey] = {\r\n              value: amount,\r\n              recipe: null,\r\n              isPoints,\r\n            };\r\n          }\r\n          break;\r\n        case 'maximize':\r\n          const existingTarget = this.maximizeTargets.find((t) => t.key === item.itemKey);\r\n          if (existingTarget) {\r\n            if (existingTarget.priority < amount) {\r\n              existingTarget.priority = amount;\r\n            }\r\n          } else {\r\n            this.maximizeTargets.push({\r\n              key: item.itemKey,\r\n              priority: amount,\r\n            });\r\n          }\r\n          break;\r\n        default:\r\n          const recipeKey = item.mode;\r\n          const recipeInfo = recipes[recipeKey];\r\n          if (recipeInfo) {\r\n            if (!this.allowedRecipes[recipeKey]) {\r\n              throw new Error('CANNOT TARGET A DISABLED RECIPE');\r\n            }\r\n            const target = recipeInfo.products.find((p) => p.itemClass === item.itemKey)!;\r\n            if (perMinTargets[item.itemKey]) {\r\n              perMinTargets[item.itemKey].value += target.perMinute * amount;\r\n            } else {\r\n              perMinTargets[item.itemKey] = {\r\n                value: target.perMinute * amount,\r\n                recipe: null,\r\n                isPoints: false,\r\n              };\r\n            }\r\n            if (recipeTargets[recipeKey]) {\r\n              recipeTargets[recipeKey].value += amount;\r\n            } else {\r\n              recipeTargets[recipeKey] = {\r\n                value: amount,\r\n                recipe: recipeKey,\r\n                isPoints: false,\r\n              };\r\n            }\r\n          } else {\r\n            throw new Error('INVALID OUTPUT MODE SELECTION');\r\n          }\r\n      }\r\n    });\r\n\r\n    this.maximizeTargets\r\n      .sort((a, b) => {\r\n        if (a.priority > b.priority) return -1;\r\n        if (a.priority < b.priority) return 1;\r\n        throw new Error('TWO TARGET ITEMS HAVE THE SAME MAXIMIZATION PRIORITY');\r\n      });\r\n\r\n    this.rateTargets = {\r\n      ...perMinTargets,\r\n      ...recipeTargets,\r\n    };\r\n    if (Object.keys(this.rateTargets).length === 0 && this.maximizeTargets.length === 0) {\r\n      throw new Error('NO OUTPUTS SET');\r\n    }\r\n  }\r\n\r\n  private validateNumber(num: Number) {\r\n    if (Number.isNaN(num)) {\r\n      throw new Error('INVALID VALUE: NOT A NUMBER');\r\n    } else if (num < 0) {\r\n      throw new Error('INVALID VALUE: NEGATIVE NUMBER');\r\n    }\r\n  }\r\n\r\n  public async exec(): Promise<SolverResults> {\r\n    const timestamp = performance.now();\r\n    try {\r\n      const glpk = await loadGLPK();\r\n      const productionSolution = await this.productionSolverPass(RATE_TARGET_KEY, this.inputs, glpk);\r\n      let productionGraph = this.generateProductionGraph(productionSolution);\r\n\r\n      for (const target of this.maximizeTargets) {\r\n        const remainingInputs: Inputs = {};\r\n        for (const [inputKey, input] of Object.entries(this.inputs)) {\r\n          const inputNode = Object.values(productionGraph.nodes).find((n) => n.key === inputKey);\r\n          let usedAmount = 0;\r\n          if (inputNode) {\r\n            usedAmount = inputNode.multiplier;\r\n          }\r\n          const diff = input.amount - usedAmount;\r\n          if (diff > EPSILON) {\r\n            remainingInputs[inputKey] = {\r\n              ...input,\r\n              amount: diff,\r\n            };\r\n          }\r\n        }\r\n        const solution = await this.productionSolverPass(target.key, remainingInputs, glpk);\r\n        for (const [key, multiplier] of Object.entries(solution)) {\r\n          if (productionSolution[key]) {\r\n            productionSolution[key] += multiplier;\r\n          } else {\r\n            productionSolution[key] = multiplier;\r\n          }\r\n        }\r\n        productionGraph = this.generateProductionGraph(productionSolution);\r\n      }\r\n\r\n      if (Object.keys(productionGraph.nodes).length === 0) {\r\n        throw new Error('SOLUTION IS EMPTY');\r\n      }\r\n      const report = this.generateProductionReport(productionGraph);\r\n\r\n      return {\r\n        productionGraph,\r\n        report,\r\n        timestamp,\r\n        computeTime: performance.now() - timestamp,\r\n        error: '',\r\n      };\r\n    } catch (e: any) {\r\n      return {\r\n        productionGraph: null,\r\n        report: null,\r\n        timestamp,\r\n        computeTime: performance.now() - timestamp,\r\n        error: e.message,\r\n      };\r\n    }\r\n  }\r\n\r\n  private getItemPoints(itemKey: string) {\r\n    const itemInfo = items[itemKey];\r\n    return itemInfo.isFicsmas ? 0 : itemInfo.sinkPoints;\r\n  }\r\n\r\n  private async productionSolverPass(targetKey: string, remainingInputs: Inputs, glpk: GLPK): Promise<ProductionSolution> {\r\n    const model: LP = {\r\n      name: 'production',\r\n      objective: {\r\n        name: 'score',\r\n        direction: glpk.GLP_MIN,\r\n        vars: [],\r\n      },\r\n      subjectTo: [],\r\n    };\r\n\r\n    const doPoints = (targetKey === RATE_TARGET_KEY && this.rateTargets[POINTS_ITEM_KEY]) || targetKey === POINTS_ITEM_KEY;\r\n    const pointsVars: Var[] = [];\r\n\r\n    for (const [recipeKey, recipeInfo] of Object.entries(recipes)) {\r\n      if (!this.allowedRecipes[recipeKey]) continue;\r\n      const buildingInfo = buildings[recipeInfo.producedIn];\r\n      const powerScore = buildingInfo.power > 0 ? buildingInfo.power * this.globalWeights.power : 0;\r\n      const complexityScore = recipeInfo.ingredients.length * this.globalWeights.complexity;\r\n      let resourceScore = 0;\r\n\r\n      for (const ingredient of recipeInfo.ingredients) {\r\n        const inputInfo = this.inputs[ingredient.itemClass];\r\n        if (inputInfo) {\r\n          resourceScore += inputInfo.weight * ingredient.perMinute * this.globalWeights.resources;\r\n        }\r\n      }\r\n\r\n      model.objective.vars.push({\r\n        name: recipeKey,\r\n        coef: powerScore + complexityScore + resourceScore,\r\n      });\r\n\r\n      if (targetKey === RATE_TARGET_KEY) {\r\n        if (this.rateTargets[recipeKey]) {\r\n          model.subjectTo.push({\r\n            name: `${recipeKey} recipe constraint`,\r\n            vars: [{ name: recipeKey, coef: 1 }],\r\n            bnds: { type: glpk.GLP_LO, ub: 0, lb: this.rateTargets[recipeKey].value },\r\n          });\r\n        }\r\n      }\r\n\r\n      if (doPoints) {\r\n        let pointCoef = 0;\r\n        for (const product of recipeInfo.products) {\r\n          if (!this.inputs[product.itemClass] || this.inputs[product.itemClass].type === NODE_TYPE.INPUT_ITEM) {\r\n            pointCoef -= product.perMinute * this.getItemPoints(product.itemClass) / 1000;\r\n          }\r\n        }\r\n        for (const ingredient of recipeInfo.ingredients) {\r\n          if (!this.inputs[ingredient.itemClass] || this.inputs[ingredient.itemClass].type === NODE_TYPE.INPUT_ITEM) {\r\n            pointCoef += ingredient.perMinute * this.getItemPoints(ingredient.itemClass) / 1000;\r\n          }\r\n        }\r\n        pointsVars.push({ name: recipeKey, coef: pointCoef });\r\n      }\r\n    }\r\n\r\n  \r\n    if (doPoints) {\r\n      let intrinsicPoints = 0;\r\n      for (const [itemKey, inputInfo] of Object.entries(remainingInputs)) {\r\n        if (inputInfo.type === NODE_TYPE.INPUT_ITEM) {\r\n          intrinsicPoints += this.getItemPoints(itemKey) * inputInfo.amount;\r\n        }\r\n      }\r\n      if (targetKey === RATE_TARGET_KEY) {\r\n        for (const [itemKey, targetInfo] of Object.entries(this.rateTargets)) {\r\n          if (itemKey !== POINTS_ITEM_KEY) {\r\n            intrinsicPoints -= this.getItemPoints(itemKey) * targetInfo.value;\r\n          }\r\n        }\r\n        model.subjectTo.push({\r\n          name: 'AWESOME Sink Points constraint',\r\n          vars: pointsVars,\r\n          bnds: { type: glpk.GLP_UP, ub: -this.rateTargets[POINTS_ITEM_KEY].value - intrinsicPoints, lb: NaN },\r\n        });\r\n      } else if (targetKey === POINTS_ITEM_KEY) {\r\n        pointsVars.forEach((v) => {\r\n          const existingVar = model.objective.vars.find((ov) => ov.name === v.name);\r\n          if (existingVar) {\r\n            existingVar.coef += v.coef * MAXIMIZE_TARGET_WEIGHTING;\r\n          } else {\r\n            model.objective.vars.push({\r\n              name: v.name,\r\n              coef: v.coef * MAXIMIZE_TARGET_WEIGHTING,\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n\r\n    for (const [itemKey, itemInfo] of Object.entries(items)) {\r\n      const vars: Var[] = [];\r\n\r\n      for (const recipeKey of itemInfo.usedInRecipes) {\r\n        if (!this.allowedRecipes[recipeKey]) continue;\r\n        const recipeInfo = recipes[recipeKey];\r\n        const target = recipeInfo.ingredients.find((i) => i.itemClass === itemKey)!;\r\n        vars.push({ name: recipeKey, coef: target.perMinute });\r\n      }\r\n\r\n      for (const recipeKey of itemInfo.producedFromRecipes) {\r\n        if (!this.allowedRecipes[recipeKey]) continue;\r\n        const recipeInfo = recipes[recipeKey];\r\n        const target = recipeInfo.products.find((p) => p.itemClass === itemKey)!;\r\n\r\n        const existingVar = vars.find((v) => v.name === recipeKey);\r\n        if (existingVar) {\r\n          existingVar.coef -= target.perMinute;\r\n        } else {\r\n          vars.push({ name: recipeKey, coef: -target.perMinute });\r\n        }\r\n      }\r\n\r\n      if (vars.length === 0) continue;\r\n\r\n      if (remainingInputs[itemKey]) {\r\n        const inputInfo = remainingInputs[itemKey];\r\n        if (inputInfo.amount !== Infinity) {\r\n          model.subjectTo.push({\r\n            name: `${itemKey} resource constraint`,\r\n            vars,\r\n            bnds: { type: glpk.GLP_UP, ub: inputInfo.amount, lb: NaN },\r\n          });\r\n        }\r\n      }\r\n\r\n      else if (targetKey === RATE_TARGET_KEY && this.rateTargets[itemKey]) {\r\n        const outputInfo = this.rateTargets[itemKey];\r\n        model.subjectTo.push({\r\n          name: `${itemKey} final product constraint`,\r\n          vars,\r\n          bnds: { type: glpk.GLP_UP, ub: -outputInfo.value, lb: NaN },\r\n        });\r\n      }\r\n\r\n      else if (targetKey === itemKey) {\r\n        model.subjectTo.push({\r\n          name: `${itemKey} final product constraint`,\r\n          vars,\r\n          bnds: { type: glpk.GLP_UP, ub: 0, lb: NaN },\r\n        });\r\n\r\n        vars.forEach((v) => {\r\n          const existingVar = model.objective.vars.find((ov) => ov.name === v.name);\r\n          if (existingVar) {\r\n            existingVar.coef += v.coef * MAXIMIZE_TARGET_WEIGHTING;\r\n          } else {\r\n            model.objective.vars.push({\r\n              name: v.name,\r\n              coef: v.coef * MAXIMIZE_TARGET_WEIGHTING,\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      else {\r\n        model.subjectTo.push({\r\n          name: `${itemKey} intermediates constraint`,\r\n          vars,\r\n          bnds: { type: glpk.GLP_UP, ub: 0, lb: NaN },\r\n        });\r\n      }\r\n    }\r\n\r\n    const solution = await glpk.solve(model, { msglev: glpk.GLP_MSG_OFF });\r\n    if (solution.result.status !== glpk.GLP_OPT) {\r\n      if (targetKey === RATE_TARGET_KEY) {\r\n        throw new Error(\"NO POSSIBLE SOLUTION\");\r\n      } else {\r\n        throw new Error(\"SOLUTION IS UNBOUNDED\");\r\n      }\r\n    }\r\n\r\n    const result: ProductionSolution = {};\r\n    Object.entries(solution.result.vars).forEach(([key, val]) => {\r\n      if (val > EPSILON) {\r\n        result[key] = val;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  private generateProductionGraph(productionSolution: ProductionSolution): ProductionGraph {\r\n    const itemProductionTotals: ItemProductionTotals = {};\r\n    const graph: ProductionGraph = {\r\n      nodes: {},\r\n      edges: [],\r\n    };\r\n\r\n    for (const [recipeKey, multiplier] of Object.entries(productionSolution)) {\r\n      const recipeInfo = recipes[recipeKey];\r\n\r\n      for (const product of recipeInfo.products) {\r\n        const amount = multiplier * product.perMinute;\r\n        if (!itemProductionTotals[product.itemClass]) {\r\n          itemProductionTotals[product.itemClass] = {\r\n            producedBy: [],\r\n            usedBy: [],\r\n          };\r\n        }\r\n        itemProductionTotals[product.itemClass].producedBy.push({ recipeKey, amount });\r\n      }\r\n\r\n      for (const ingredient of recipeInfo.ingredients) {\r\n        const amount = multiplier * ingredient.perMinute;\r\n        if (!itemProductionTotals[ingredient.itemClass]) {\r\n          itemProductionTotals[ingredient.itemClass] = {\r\n            producedBy: [],\r\n            usedBy: [],\r\n          };\r\n        }\r\n        itemProductionTotals[ingredient.itemClass].usedBy.push({ recipeKey, amount });\r\n      }\r\n\r\n      graph.nodes[recipeKey] = {\r\n        id: nanoid(),\r\n        key: recipeKey,\r\n        type: NODE_TYPE.RECIPE,\r\n        multiplier,\r\n      };\r\n    }\r\n\r\n    for (const [itemKey, productionTotals] of Object.entries(itemProductionTotals)) {\r\n      const { producedBy, usedBy } = productionTotals;\r\n      let i = 0, j = 0;\r\n      nextDemand:\r\n      while (i < usedBy.length) {\r\n        const usageInfo = usedBy[i];\r\n        const usageNode = graph.nodes[usageInfo.recipeKey];\r\n        \r\n        while (j < producedBy.length) {\r\n          const productionInfo = producedBy[j];\r\n          const productionNode = graph.nodes[productionInfo.recipeKey];\r\n\r\n          const outputRecipe = this.rateTargets[itemKey]?.recipe;\r\n          if (outputRecipe && outputRecipe === productionInfo.recipeKey) {\r\n            const outputInfo = this.rateTargets[itemKey];\r\n            const recipeInfo = recipes[outputRecipe];\r\n            const target = recipeInfo.products.find((p) => p.itemClass === itemKey)!;\r\n            const recipeAmount = outputInfo.value * target.perMinute;\r\n            productionInfo.amount -= recipeAmount;\r\n\r\n            let itemNode = graph.nodes[itemKey];\r\n            if (!itemNode) {\r\n              itemNode = {\r\n                id: nanoid(),\r\n                key: itemKey,\r\n                type: NODE_TYPE.FINAL_PRODUCT,\r\n                multiplier: recipeAmount,\r\n              }\r\n              graph.nodes[itemKey] = itemNode;\r\n            } else {\r\n              graph.nodes[itemKey].multiplier += recipeAmount;\r\n            }\r\n            graph.edges.push({\r\n              key: itemKey,\r\n              from: productionNode.id,\r\n              to: itemNode.id,\r\n              productionRate: recipeAmount,\r\n            });\r\n          } \r\n\r\n          if (productionInfo.amount < EPSILON) {\r\n            j++\r\n            continue;\r\n          }\r\n\r\n          if (usageInfo.amount <= productionInfo.amount) {\r\n            graph.edges.push({\r\n              key: itemKey,\r\n              from: productionNode.id,\r\n              to: usageNode.id,\r\n              productionRate: usageInfo.amount,\r\n            });\r\n            productionInfo.amount -= usageInfo.amount;\r\n            usageInfo.amount = 0;\r\n          } else {\r\n            graph.edges.push({\r\n              key: itemKey,\r\n              from: productionNode.id,\r\n              to: usageNode.id,\r\n              productionRate: productionInfo.amount,\r\n            });\r\n            usageInfo.amount -= productionInfo.amount;\r\n            productionInfo.amount = 0;\r\n          }\r\n          \r\n          if (usageInfo.amount < EPSILON) {\r\n            i++;\r\n            continue nextDemand;\r\n          }\r\n          j++;\r\n        }\r\n        break;\r\n      }\r\n\r\n      while (i < usedBy.length) {\r\n        const usageInfo = usedBy[i];\r\n        const usageNode = graph.nodes[usageInfo.recipeKey];\r\n        if (usageInfo.amount > EPSILON && this.inputs[itemKey]) {\r\n          let itemNode = graph.nodes[itemKey];\r\n          if (!itemNode) {\r\n            const inputInfo = this.inputs[itemKey];\r\n            itemNode = {\r\n              id: nanoid(),\r\n              key: itemKey,\r\n              type: inputInfo.type,\r\n              multiplier: usageInfo.amount,\r\n            };\r\n            graph.nodes[itemKey] = itemNode;\r\n          } else {\r\n            itemNode.multiplier += usageInfo.amount;\r\n          }\r\n          graph.edges.push({\r\n            key: itemKey,\r\n            from: itemNode.id,\r\n            to: usageNode.id,\r\n            productionRate: usageInfo.amount,\r\n          });\r\n          usageInfo.amount = 0;\r\n        }\r\n        i++;\r\n      }\r\n\r\n      while (j < producedBy.length) {\r\n        const productionInfo = producedBy[j];\r\n        const productionNode = graph.nodes[productionInfo.recipeKey];\r\n        if (productionInfo.amount > EPSILON) {\r\n          let itemNode = graph.nodes[itemKey];\r\n          if (!itemNode) {\r\n            let nodeType = NODE_TYPE.SIDE_PRODUCT;\r\n            if (this.rateTargets[itemKey] || this.maximizeTargets.find((t) => t.key === itemKey)) {\r\n              nodeType = NODE_TYPE.FINAL_PRODUCT;\r\n            } else if (this.hasPointsTarget && this.getItemPoints(itemKey) > 0) {\r\n              nodeType = NODE_TYPE.FINAL_PRODUCT;\r\n            }\r\n            itemNode = {\r\n              id: nanoid(),\r\n              key: itemKey,\r\n              type: nodeType,\r\n              multiplier: productionInfo.amount\r\n            };\r\n            graph.nodes[itemKey] = itemNode;\r\n          } else {\r\n            itemNode.multiplier += productionInfo.amount;\r\n          }\r\n          graph.edges.push({\r\n            key: itemKey,\r\n            from: productionNode.id,\r\n            to: itemNode.id,\r\n            productionRate: productionInfo.amount,\r\n          });\r\n          productionInfo.amount = 0;\r\n        }\r\n        j++;\r\n      }\r\n    }\r\n\r\n    return graph;\r\n  }\r\n\r\n  private generateProductionReport(productionGraph: ProductionGraph): Report {\r\n    const report: Report = {\r\n      pointsProduced: 0,\r\n      powerUsageEstimate: 0,\r\n      resourceEfficiencyScore: 0,\r\n      totalBuildArea: 0,\r\n      estimatedFoundations: 0,\r\n      buildingsUsed: {},\r\n      totalMaterialCost: {},\r\n    };\r\n\r\n    for (const [key, node] of Object.entries(productionGraph.nodes)) {\r\n      if (node.type === NODE_TYPE.RECIPE) {\r\n        const recipeInfo = recipes[key];\r\n        const buildingKey = recipeInfo.producedIn;\r\n        const buildingInfo = buildings[buildingKey];\r\n\r\n        report.powerUsageEstimate += node.multiplier * buildingInfo.power;\r\n        report.totalBuildArea += Math.ceil(node.multiplier) * buildingInfo.area;\r\n        if (!report.buildingsUsed[buildingKey]) {\r\n          report.buildingsUsed[buildingKey] = {\r\n            count: Math.ceil(node.multiplier),\r\n            materialCost: {},\r\n          };\r\n        } else {\r\n          report.buildingsUsed[buildingKey].count += Math.ceil(node.multiplier);\r\n        }\r\n\r\n        for (const ingredient of buildingInfo.buildCost) {\r\n          const amount = Math.ceil(node.multiplier) * ingredient.quantity;\r\n          if (!report.buildingsUsed[buildingKey].materialCost[ingredient.itemClass]) {\r\n            report.buildingsUsed[buildingKey].materialCost[ingredient.itemClass] = amount;\r\n          } else {\r\n            report.buildingsUsed[buildingKey].materialCost[ingredient.itemClass] += amount;\r\n          }\r\n          if (!report.totalMaterialCost[ingredient.itemClass]) {\r\n            report.totalMaterialCost[ingredient.itemClass] = amount;\r\n          } else {\r\n            report.totalMaterialCost[ingredient.itemClass] += amount;\r\n          }\r\n        }\r\n        continue;\r\n      }\r\n\r\n      if (node.type === NODE_TYPE.FINAL_PRODUCT) {\r\n        report.pointsProduced += node.multiplier * this.getItemPoints(key);\r\n      } else if (node.type === NODE_TYPE.RESOURCE) {\r\n        report.resourceEfficiencyScore += node.multiplier * this.inputs[key].weight;\r\n      }\r\n    }\r\n\r\n    report.estimatedFoundations = Math.ceil(2 * (report.totalBuildArea / 64));\r\n\r\n    return report;\r\n  }\r\n}\r\n","import { nanoid } from 'nanoid';\r\nimport { recipes, items } from '../../../data'\r\nimport { POINTS_ITEM_KEY } from '../../../utilities/production-solver';\r\nimport { FactoryOptions, getInitialState } from '../reducer';\r\n\r\nconst FACTORY_SETTINGS_VERSION = 'v1_U5';\r\n\r\nconst SEP0 = ',';\r\nconst SEP1 = '|';\r\nconst SEP2 = ':';\r\n\r\nfunction getItemBySlug(slug: string) {\r\n  if (slug === 'points') {\r\n    return POINTS_ITEM_KEY;\r\n  }\r\n  const itemEntry = Object.entries(items).find(([key, item]) => item.slug === slug);\r\n  if (itemEntry) {\r\n    return itemEntry[0];\r\n  }\r\n  throw new Error('INVALID ITEM SLUG');\r\n}\r\n\r\nfunction getModeBySlug(slug: string) {\r\n  if (slug === 'per_minute') return 'per-minute';\r\n  if (slug === 'maximize') return 'maximize';\r\n  const recipeEntry = Object.entries(recipes).find(([key, recipe]) => recipe.slug === slug);\r\n  if (recipeEntry) {\r\n    return recipeEntry[0];\r\n  }\r\n  throw new Error('INVALID RECIPE SLUG');\r\n}\r\n\r\nexport function decodeState_v1_U5(stateStr: string): FactoryOptions {\r\n  const newState: FactoryOptions = getInitialState();\r\n\r\n  const fields = stateStr.split(SEP0);\r\n  if (fields[0] !== FACTORY_SETTINGS_VERSION) throw new Error('VERSION MISMATCH');\r\n  if (fields.length !== 7) throw new Error('INVALID DATA [BAD FIELDS]');\r\n\r\n  const allowedRecipes = Object.keys(newState.allowedRecipes)\r\n    .filter((recipeKey) => {\r\n      const recipeInfo = recipes[recipeKey];\r\n      if (recipeInfo.isFicsmas) {\r\n        newState.allowedRecipes[recipeKey] = false;\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n  const allowedRecipesBits = BigInt(`0x${fields[1]}`)\r\n    .toString(2)\r\n    .padStart(allowedRecipes.length, '0')\r\n    .split('')\r\n    .map((b) => !!parseInt(b));\r\n  allowedRecipes\r\n    .sort((a, b) => {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    })\r\n    .forEach((key, i) => {\r\n      newState.allowedRecipes[key] = !!allowedRecipesBits[i];\r\n    });\r\n\r\n  const productionItemsStrings = fields[2].split(SEP1);\r\n  if (productionItemsStrings[0]) {\r\n    productionItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 3) throw new Error('INVALID DATA [productionItems]');\r\n      newState.productionItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        mode: getModeBySlug(values[1]),\r\n        value: values[2],\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputItemsStrings = fields[3].split(SEP1);\r\n  if (inputItemsStrings[0]) {\r\n    inputItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 4) throw new Error('INVALID DATA [inputItems]');\r\n      newState.inputItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        value: values[1],\r\n        weight: values[2],\r\n        unlimited: !!parseInt(values[3]),\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputResourcesStrings = fields[4].split(SEP1);\r\n  newState.inputResources.forEach((resourceOptions, i) => {\r\n    const values = inputResourcesStrings[i].split(SEP2);\r\n    if (values.length !== 3) throw new Error('INVALID DATA [inputResources]');\r\n    resourceOptions.value = values[0];\r\n    resourceOptions.weight = values[1];\r\n    resourceOptions.unlimited = !!parseInt(values[2]);\r\n  });\r\n\r\n  newState.allowHandGatheredItems = !!parseInt(fields[5]);\r\n\r\n  const weightingOptionsStrings = fields[6].split(SEP2);\r\n  if (weightingOptionsStrings.length !== 3) throw new Error('INVALID DATA [weightingOptions]');\r\n  newState.weightingOptions.resources = weightingOptionsStrings[0];\r\n  newState.weightingOptions.power = weightingOptionsStrings[1];\r\n  newState.weightingOptions.complexity = weightingOptionsStrings[2];\r\n\r\n  return newState;\r\n}\r\n","import { nanoid } from 'nanoid';\r\nimport { recipes, items } from '../../../data'\r\nimport { POINTS_ITEM_KEY } from '../../../utilities/production-solver';\r\nimport { FactoryOptions, getInitialState } from '../reducer';\r\n\r\nconst FACTORY_SETTINGS_VERSION = 'v2_U5';\r\n\r\nconst SEP0 = ',';\r\nconst SEP1 = '|';\r\nconst SEP2 = ':';\r\n\r\nfunction getItemBySlug(slug: string) {\r\n  if (slug === 'points') {\r\n    return POINTS_ITEM_KEY;\r\n  }\r\n  const itemEntry = Object.entries(items).find(([key, item]) => item.slug === slug);\r\n  if (itemEntry) {\r\n    return itemEntry[0];\r\n  }\r\n  throw new Error('INVALID ITEM SLUG');\r\n}\r\n\r\nfunction getModeBySlug(slug: string) {\r\n  if (slug === 'per_minute') return 'per-minute';\r\n  if (slug === 'maximize') return 'maximize';\r\n  const recipeEntry = Object.entries(recipes).find(([key, recipe]) => recipe.slug === slug);\r\n  if (recipeEntry) {\r\n    return recipeEntry[0];\r\n  }\r\n  throw new Error('INVALID RECIPE SLUG');\r\n}\r\n\r\nexport function decodeState_v2_U5(stateStr: string): FactoryOptions {\r\n  const newState: FactoryOptions = getInitialState();\r\n\r\n  const fields = stateStr.split(SEP0);\r\n  if (fields[0] !== FACTORY_SETTINGS_VERSION) throw new Error('VERSION MISMATCH');\r\n  if (fields.length !== 7) throw new Error('INVALID DATA [BAD FIELDS]');\r\n\r\n  const allowedRecipesBits = BigInt(`0x${fields[1]}`)\r\n    .toString(2)\r\n    .padStart(Object.keys(newState.allowedRecipes).length, '0')\r\n    .split('')\r\n    .map((b) => !!parseInt(b));\r\n  Object.keys(newState.allowedRecipes)\r\n    .sort((a, b) => {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    })\r\n    .forEach((key, i) => {\r\n      newState.allowedRecipes[key] = !!allowedRecipesBits[i];\r\n    });\r\n\r\n  const productionItemsStrings = fields[2].split(SEP1);\r\n  if (productionItemsStrings[0]) {\r\n    productionItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 3) throw new Error('INVALID DATA [productionItems]');\r\n      newState.productionItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        mode: getModeBySlug(values[1]),\r\n        value: values[2],\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputItemsStrings = fields[3].split(SEP1);\r\n  if (inputItemsStrings[0]) {\r\n    inputItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 4) throw new Error('INVALID DATA [inputItems]');\r\n      newState.inputItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        value: values[1],\r\n        weight: values[2],\r\n        unlimited: !!parseInt(values[3]),\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputResourcesStrings = fields[4].split(SEP1);\r\n  newState.inputResources.forEach((resourceOptions, i) => {\r\n    const values = inputResourcesStrings[i].split(SEP2);\r\n    if (values.length !== 3) throw new Error('INVALID DATA [inputResources]');\r\n    resourceOptions.value = values[0];\r\n    resourceOptions.weight = values[1];\r\n    resourceOptions.unlimited = !!parseInt(values[2]);\r\n  });\r\n\r\n  newState.allowHandGatheredItems = !!parseInt(fields[5]);\r\n\r\n  const weightingOptionsStrings = fields[6].split(SEP2);\r\n  if (weightingOptionsStrings.length !== 3) throw new Error('INVALID DATA [weightingOptions]');\r\n  newState.weightingOptions.resources = weightingOptionsStrings[0];\r\n  newState.weightingOptions.power = weightingOptionsStrings[1];\r\n  newState.weightingOptions.complexity = weightingOptionsStrings[2];\r\n\r\n  return newState;\r\n}\r\n","import { nanoid } from 'nanoid';\r\nimport { resources, recipes, items } from '../../data'\r\nimport { POINTS_ITEM_KEY } from '../../utilities/production-solver';\r\nimport { decodeState_v1_U5 } from './state-decoders/v1_U5';\r\nimport { decodeState_v2_U5 } from './state-decoders/v2_U5';\r\n\r\nexport const FACTORY_SETTINGS_VERSION = 'v2_U5';\r\nexport const MAX_PRIORITY = 20;\r\n\r\n// TYPES\r\nexport type ProductionItemOptions = {\r\n  key: string,\r\n  itemKey: string,\r\n  mode: 'per-minute' | 'maximize' | string,\r\n  value: string,\r\n};\r\n\r\nexport type WeightingOptions = {\r\n  resources: string,\r\n  power: string,\r\n  complexity: string,\r\n};\r\n\r\nexport type InputItemOptions = {\r\n  key: string,\r\n  itemKey: string,\r\n  value: string,\r\n  weight: string,\r\n  unlimited: boolean,\r\n};\r\n\r\nexport type RecipeMap = {\r\n  [key: string]: boolean,\r\n};\r\n\r\nexport type FactoryOptions = {\r\n  version: string,\r\n  key: string,\r\n  productionItems: ProductionItemOptions[],\r\n  inputItems: InputItemOptions[],\r\n  inputResources: InputItemOptions[],\r\n  allowHandGatheredItems: boolean,\r\n  weightingOptions: WeightingOptions,\r\n  allowedRecipes: RecipeMap,\r\n};\r\n\r\n\r\n// DEFAULTS\r\nfunction getDefaultProductionItem(): ProductionItemOptions {\r\n  return ({\r\n    key: nanoid(),\r\n    itemKey: '',\r\n    mode: 'per-minute',\r\n    value: '10',\r\n  });\r\n}\r\n\r\nfunction getDefaultInputItem(): InputItemOptions {\r\n  return ({\r\n    key: nanoid(),\r\n    itemKey: '',\r\n    value: '10',\r\n    weight: '0',\r\n    unlimited: false,\r\n  });\r\n}\r\n\r\nconst ORDERED_RESOURCES = [\r\n  'Desc_OreIron_C',\r\n  'Desc_OreCopper_C',\r\n  'Desc_Stone_C',\r\n  'Desc_Coal_C',\r\n  'Desc_OreGold_C',\r\n  'Desc_RawQuartz_C',\r\n  'Desc_Sulfur_C',\r\n  'Desc_LiquidOil_C',\r\n  'Desc_OreBauxite_C',\r\n  'Desc_OreUranium_C',\r\n  'Desc_NitrogenGas_C',\r\n  'Desc_Water_C',\r\n];\r\n\r\nfunction getInitialInputResources(): InputItemOptions[] {\r\n  return Object.entries(resources)\r\n    .map(([key, data]) => {\r\n      let value = '0';\r\n      let unlimited = false;\r\n      if (key === 'Desc_Water_C') {\r\n        unlimited = true;\r\n      } else {\r\n        value = String(data.maxExtraction);\r\n      }\r\n      return {\r\n        key: key,\r\n        itemKey: key,\r\n        value,\r\n        weight: String(data.relativeValue),\r\n        unlimited,\r\n      };\r\n    })\r\n    .sort((a, b) => {\r\n      let aIndex = ORDERED_RESOURCES.findIndex((r) => r === a.itemKey);\r\n      if (aIndex === -1) aIndex = Infinity;\r\n      let bIndex = ORDERED_RESOURCES.findIndex((r) => r === b.itemKey);\r\n      if (bIndex === -1) bIndex = Infinity;\r\n      return aIndex < bIndex ? -1 : 1;\r\n    });\r\n}\r\n\r\nfunction getInitialWeightingOptions(): WeightingOptions {\r\n  return {\r\n    resources: '1000',\r\n    power: '5',\r\n    complexity: '3',\r\n  };\r\n}\r\n\r\nfunction getInitialAllowedRecipes(): RecipeMap {\r\n  const recipeMap: RecipeMap = {};\r\n  Object.entries(recipes).forEach(([key, data]) => {\r\n    recipeMap[key] = !data.isAlternate;\r\n  });\r\n  return recipeMap;\r\n}\r\n\r\nexport function getInitialState(): FactoryOptions {\r\n  return {\r\n    version: FACTORY_SETTINGS_VERSION,\r\n    key: nanoid(),\r\n    productionItems: [],\r\n    inputItems: [],\r\n    inputResources: getInitialInputResources(),\r\n    allowHandGatheredItems: false,\r\n    weightingOptions: getInitialWeightingOptions(),\r\n    allowedRecipes: getInitialAllowedRecipes(),\r\n  };\r\n}\r\n\r\n\r\n// REDUCER\r\nexport type FactoryAction =\r\n  | { type: 'RESET_FACTORY' }\r\n  | { type: 'ADD_PRODUCTION_ITEM' }\r\n  | { type: 'DELETE_PRODUCTION_ITEM', key: string }\r\n  | { type: 'SET_PRODUCTION_ITEM', data: { key: string, itemKey: string } }\r\n  | { type: 'SET_PRODUCTION_ITEM_AMOUNT', data: { key: string, amount: string } }\r\n  | { type: 'SET_PRODUCTION_ITEM_MODE', data: { key: string, mode: string } }\r\n  | { type: 'ADD_INPUT_ITEM' }\r\n  | { type: 'DELETE_INPUT_ITEM', key: string }\r\n  | { type: 'UPDATE_INPUT_ITEM', data: InputItemOptions }\r\n  | { type: 'UPDATE_INPUT_RESOURCE', data: InputItemOptions }\r\n  | { type: 'SET_RESOURCES_TO_MAP_LIMITS' }\r\n  | { type: 'SET_RESOURCES_TO_0' }\r\n  | { type: 'SET_ALLOW_HAND_GATHERED_ITEMS', active: boolean }\r\n  | { type: 'UPDATE_WEIGHTING_OPTIONS', data: WeightingOptions }\r\n  | { type: 'SET_ALL_WEIGHTS_DEFAULT' }\r\n  | { type: 'SET_RECIPE_ACTIVE', key: string, active: boolean }\r\n  | { type: 'MASS_SET_RECIPES_ACTIVE', alternates: boolean, active: boolean }\r\n  | { type: 'LOAD_FROM_QUERY_PARAM' };\r\n\r\nexport function reducer(state: FactoryOptions, action: FactoryAction): FactoryOptions {\r\n  switch (action.type) {\r\n    case 'RESET_FACTORY': {\r\n      return getInitialState();\r\n    }\r\n    case 'ADD_PRODUCTION_ITEM': {\r\n      const newProductionItems = [\r\n        ...state.productionItems,\r\n        getDefaultProductionItem(),\r\n      ];\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'DELETE_PRODUCTION_ITEM': {\r\n      const newProductionItems = state.productionItems\r\n        .filter((i) => i.key !== action.key);\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'SET_PRODUCTION_ITEM': {\r\n      const newProductionItems = state.productionItems\r\n        .map((item) => {\r\n          if (item.key === action.data.key) {\r\n            const newItem = { ...item };\r\n            newItem.itemKey = action.data.itemKey;\r\n            return newItem;\r\n          }\r\n          return item;\r\n        });\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'SET_PRODUCTION_ITEM_AMOUNT': {\r\n      const newProductionItems = state.productionItems\r\n        .map((item) => {\r\n          if (item.key === action.data.key) {\r\n            const newItem = { ...item };\r\n            newItem.value = action.data.amount;\r\n            return newItem;\r\n          }\r\n          return item;\r\n        });\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'SET_PRODUCTION_ITEM_MODE': {\r\n      const newProductionItems = state.productionItems\r\n        .map((item) => {\r\n          if (item.key === action.data.key) {\r\n            const newItem = { ...item };\r\n            newItem.mode = action.data.mode;\r\n            if (newItem.mode !== item.mode) {\r\n              if (newItem.mode === 'per-minute') {\r\n                newItem.value = '10';\r\n              } else if (newItem.mode === 'maximize') {\r\n                let nextPriority = MAX_PRIORITY;\r\n                while (nextPriority && nextPriority > 0) {\r\n                  // eslint-disable-next-line no-loop-func\r\n                  const priorityTaken = !!state.productionItems.find((i) => i.mode === 'maximize' && i.value === String(nextPriority));\r\n                  if (!priorityTaken) {\r\n                    break;\r\n                  }\r\n                  nextPriority--;\r\n                }\r\n                if (nextPriority > 0) {\r\n                  newItem.value = String(nextPriority);\r\n                } else {\r\n                  newItem.value = `${MAX_PRIORITY}`;\r\n                }\r\n              } else if (item.mode === 'per-minute' || item.mode === 'maximize') {\r\n                newItem.value = '1';\r\n              }\r\n            }\r\n            return newItem;\r\n          }\r\n          return item;\r\n        });\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'ADD_INPUT_ITEM': {\r\n      const newInputItems = [\r\n        ...state.inputItems,\r\n        getDefaultInputItem(),\r\n      ];\r\n      return { ...state, inputItems: newInputItems };\r\n    }\r\n    case 'DELETE_INPUT_ITEM': {\r\n      const newInputItems = state.inputItems\r\n        .filter((i) => i.key !== action.key);\r\n      return { ...state, inputItems: newInputItems };\r\n    }\r\n    case 'UPDATE_INPUT_ITEM': {\r\n      const newInputItems = state.inputItems\r\n        .map((i) => i.key === action.data.key ? action.data : i);\r\n      return { ...state, inputItems: newInputItems };\r\n    }\r\n    case 'UPDATE_INPUT_RESOURCE': {\r\n      const newInputResources = state.inputResources\r\n        .map((i) => i.key === action.data.key ? action.data : i);\r\n      return { ...state, inputResources: newInputResources };\r\n    }\r\n    case 'SET_RESOURCES_TO_MAP_LIMITS': {\r\n      const newInputResources = getInitialInputResources();\r\n      return { ...state, inputResources: newInputResources };\r\n    }\r\n    case 'SET_RESOURCES_TO_0': {\r\n      const newInputResources = state.inputResources\r\n        .map((data) => ({ ...data, value: '0', unlimited: false }));\r\n      return { ...state, inputResources: newInputResources };\r\n    }\r\n    case 'SET_ALLOW_HAND_GATHERED_ITEMS': {\r\n      return { ...state, allowHandGatheredItems: action.active };\r\n    }\r\n    case 'UPDATE_WEIGHTING_OPTIONS': {\r\n      const newWeightingOptions = { ...action.data };\r\n      return { ...state, weightingOptions: newWeightingOptions };\r\n    }\r\n    case 'SET_ALL_WEIGHTS_DEFAULT': {\r\n      const newWeightingOptions = getInitialWeightingOptions();\r\n      const newInputResources = state.inputResources\r\n        .map((i) => ({ ...i, weight: String(resources[i.itemKey].relativeValue) }));\r\n      return { ...state, weightingOptions: newWeightingOptions, inputResources: newInputResources };\r\n    }\r\n    case 'SET_RECIPE_ACTIVE': {\r\n      const newAllowedRecipes = { ...state.allowedRecipes };\r\n      newAllowedRecipes[action.key] = action.active;\r\n      return { ...state, allowedRecipes: newAllowedRecipes };\r\n    }\r\n    case 'MASS_SET_RECIPES_ACTIVE': {\r\n      const newAllowedRecipes = { ...state.allowedRecipes };\r\n      Object.keys(newAllowedRecipes).forEach((key) => {\r\n        if (action.alternates && recipes[key].isAlternate) {\r\n          newAllowedRecipes[key] = action.active;\r\n        } else if (!action.alternates && !recipes[key].isAlternate) {\r\n          newAllowedRecipes[key] = action.active;\r\n        }\r\n      })\r\n      return { ...state, allowedRecipes: newAllowedRecipes };\r\n    }\r\n    case 'LOAD_FROM_QUERY_PARAM': {\r\n      const params = new URLSearchParams(window.location.search);\r\n      const encodedState = params.get('f');\r\n      if (encodedState) {\r\n        try {\r\n          return decodeState(encodedState);\r\n        } catch (e) {\r\n          console.error(e);\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n// ENCODE/DECODE STATE\r\nfunction decodeState(stateStr: string): FactoryOptions {\r\n  const version = stateStr.substring(0, 5);\r\n  if (version === 'v1_U5') {\r\n    return decodeState_v1_U5(stateStr);\r\n  } else if (version === 'v2_U5') {\r\n    return decodeState_v2_U5(stateStr);\r\n  } else {\r\n    throw new Error('INVALID VERSION');\r\n  }\r\n}\r\n\r\nfunction getItemSlug(itemKey: string) {\r\n  if (itemKey === POINTS_ITEM_KEY) {\r\n    return 'points';\r\n  }\r\n  return items[itemKey].slug;\r\n}\r\n\r\nfunction getModeSlug(mode: string) {\r\n  if (mode === 'per-minute') return 'per_minute';\r\n  if (mode === 'maximize') return 'maximize';\r\n  const recipeKey = mode;\r\n  const recipeInfo = recipes[recipeKey];\r\n  if (recipeInfo) {\r\n    return recipeInfo.slug;\r\n  } else {\r\n    return 'null';\r\n  }\r\n}\r\n\r\nconst SEP0 = ',';\r\nconst SEP1 = '|';\r\nconst SEP2 = ':';\r\n\r\nexport function encodeState(state: FactoryOptions): string {\r\n  const fields: string[] = [];\r\n\r\n  fields.push(state.version);\r\n\r\n  const allowedRecipesBits = Object.keys((state.allowedRecipes))\r\n    .sort((a, b) => {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    })\r\n    .map((key) => state.allowedRecipes[key] ? '1' : '0')\r\n    .join('');\r\n  fields.push(BigInt(`0b${allowedRecipesBits}`).toString(16));\r\n\r\n  const productionItemsField: string[] = [];\r\n  state.productionItems.forEach((item) => {\r\n    if (!item.itemKey) return;\r\n    productionItemsField.push(`${getItemSlug(item.itemKey)}${SEP2}${getModeSlug(item.mode)}${SEP2}${item.value}`);\r\n  });\r\n  fields.push(productionItemsField.join(SEP1));\r\n\r\n  const inputItemsField: string[] = [];\r\n  state.inputItems.forEach((item) => {\r\n    if (!item.itemKey) return;\r\n    inputItemsField.push(`${getItemSlug(item.itemKey)}${SEP2}${item.value}${SEP2}${item.weight}${SEP2}${item.unlimited ? '1' : '0'}`);\r\n  });\r\n  fields.push(inputItemsField.join(SEP1));\r\n\r\n  const inputResourcesField: string[] = [];\r\n  state.inputResources.forEach((item) => {\r\n    inputResourcesField.push(`${item.value}${SEP2}${item.weight}${SEP2}${item.unlimited ? '1' : '0'}`);\r\n  });\r\n  fields.push(inputResourcesField.join(SEP1));\r\n\r\n  fields.push(`${state.allowHandGatheredItems ? '1' : '0'}`);\r\n\r\n  fields.push(`${state.weightingOptions.resources}${SEP2}${state.weightingOptions.power}${SEP2}${state.weightingOptions.complexity}`);\r\n\r\n  return fields.join(SEP0);\r\n}\r\n","import React, { createContext, useContext, useReducer, useState, useEffect, useMemo, useCallback } from 'react';\r\nimport _ from 'lodash';\r\nimport seedrandom from 'seedrandom';\r\nimport { usePrevious } from '../../hooks/usePrevious';\r\nimport { ProductionSolver, SolverResults } from '../../utilities/production-solver';\r\nimport { reducer, encodeState, FactoryOptions, FactoryAction, getInitialState } from './reducer';\r\nimport { useLocalStorageValue } from '@mantine/hooks';\r\n\r\nexport type ProductionContextType = {\r\n  state: FactoryOptions,\r\n  dispatch: React.Dispatch<FactoryAction>,\r\n  calculating: boolean,\r\n  solverResults: SolverResults | null,\r\n  calculate: () => void,\r\n  autoCalculate: boolean,\r\n  setAutoCalculate: (value: boolean) => void,\r\n  ficsitTip: string,\r\n  engineerId: string,\r\n};\r\n\r\nconst ONE_HOUR = 1000 * 60 * 60;\r\nconst seed = Math.floor(new Date().getTime() / (0.5 * ONE_HOUR));\r\nconst rng = seedrandom(String(seed));\r\n\r\nconst TIPS = [\r\n  'Pet the lizard doggo!',\r\n  'Get back to work!',\r\n  'Update 5 now available!',\r\n  'Arachnophobia mode enabled.',\r\n  'FICSIT does not waste.',\r\n  'Linear algebra!',\r\n  'Do not pet the spiders.',\r\n  'BEAMS.',\r\n  'Just 5 more minutes...',\r\n  'Thanks, Jace. Helps a lot!',\r\n];\r\n\r\nconst TIP_INDEX = Math.floor(rng() * TIPS.length);\r\nconst TIP = `FICSIT Tip #${TIP_INDEX}: ${TIPS[TIP_INDEX]}`;\r\n\r\nconst ID = Math.floor(Math.random() * 1e7).toString().padStart(7, '0');\r\n\r\nconst _handleCalculateFactory = _.debounce(async (\r\n    state: FactoryOptions,\r\n    setSolverResults: React.Dispatch<React.SetStateAction<SolverResults | null>>,\r\n    setCalculating: React.Dispatch<React.SetStateAction<boolean>>,\r\n  ) => {\r\n    setCalculating(true);\r\n    try {\r\n      const solver = new ProductionSolver(state);\r\n      const results = await solver.exec();\r\n      setSolverResults((prevState) => {\r\n        if (!prevState || prevState.timestamp < results.timestamp) {\r\n          console.log(`Computed in: ${results.computeTime}ms`);\r\n          return results;\r\n        }\r\n        return prevState;\r\n      });\r\n    } catch (e: any) {\r\n      setSolverResults({\r\n        productionGraph: null,\r\n        report: null,\r\n        timestamp: performance.now(),\r\n        computeTime: 0,\r\n        error: e.message,\r\n      });\r\n    } finally {\r\n      setCalculating(false);\r\n    }\r\n  }, 300, { leading: true, trailing: true });\r\n\r\n\r\n\r\n// CONTEXT\r\nexport const ProductionContext = createContext<ProductionContextType | null>(null);\r\nProductionContext.displayName = 'ProductionContext';\r\n\r\n\r\n// HELPER HOOK\r\nexport function useProductionContext() {\r\n  const ctx = useContext(ProductionContext);\r\n  if (!ctx) {\r\n    throw new Error('ProductionContext is null');\r\n  }\r\n  return ctx;\r\n}\r\n\r\n\r\n// PROVIDER\r\ntype PropTypes = { children: React.ReactNode };\r\nexport const ProductionProvider = ({ children }: PropTypes) => {\r\n  const [state, dispatch] = useReducer(reducer, getInitialState());\r\n  const [loadedFromQuery, setLoadedFromQuery] = useState(false);\r\n  const [firstCalculationDone, setFirstCalculationDone] = useState(false);\r\n  const [autoCalculate, setAutoCalculate] = useLocalStorageValue<'false' | 'true'>({ key: 'auto-calculate', defaultValue: 'true' });\r\n  const [calculating, setCalculating] = useState(false);\r\n  const [solverResults, setSolverResults] = useState<SolverResults | null>(null);\r\n  const [engineerId] = useLocalStorageValue<string>({ key: 'engineer-id', defaultValue: ID });\r\n  const prevState = usePrevious(state);\r\n\r\n  const autoCalculateBool = autoCalculate === 'true' ? true : false;\r\n\r\n  const handleCalculateFactory = useCallback(() => {\r\n    _handleCalculateFactory(state, setSolverResults, setCalculating)\r\n  }, [state]);\r\n\r\n  const handleSetAutoCalculate = (checked: boolean) => {\r\n    setAutoCalculate(checked ? 'true' : 'false');\r\n    if (checked) {\r\n      handleCalculateFactory();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loadedFromQuery) {\r\n      if (!firstCalculationDone) {\r\n        handleCalculateFactory();\r\n        setFirstCalculationDone(true);\r\n      } else if (autoCalculateBool && prevState !== state) {\r\n        handleCalculateFactory();\r\n      }\r\n    }\r\n  }, [autoCalculateBool, firstCalculationDone, handleCalculateFactory, loadedFromQuery, prevState, state]);\r\n\r\n  useEffect(() => {\r\n    if (!loadedFromQuery) {\r\n      dispatch({ type: 'LOAD_FROM_QUERY_PARAM' });\r\n      setLoadedFromQuery(true);\r\n    }\r\n  }, [loadedFromQuery]);\r\n\r\n  useEffect(() => {\r\n    if (prevState !== state) {\r\n      const encodedState = encodeState(state);\r\n      window.history.replaceState(null, '', window.location.pathname + '?f=' + encodedState);\r\n    }\r\n  }, [prevState, state]);\r\n\r\n  const ctxValue = useMemo(() => {\r\n    return {\r\n      state,\r\n      dispatch,\r\n      calculating,\r\n      solverResults,\r\n      calculate: handleCalculateFactory,\r\n      autoCalculate: autoCalculateBool,\r\n      setAutoCalculate: handleSetAutoCalculate,\r\n      ficsitTip: TIP,\r\n      engineerId,\r\n    };\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [autoCalculateBool, calculating, handleCalculateFactory, solverResults, state]);\r\n\r\n  return (\r\n    <ProductionContext.Provider value={ctxValue}>\r\n      {children}\r\n    </ProductionContext.Provider>\r\n  );\r\n}\r\n","import { useRef, useEffect } from 'react';\r\n\r\nexport function usePrevious<T>(value: T) {\r\n  const ref = useRef<T>();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n  return ref.current;\r\n}\r\n","import React, { createContext, useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useMantineTheme } from '@mantine/core';\r\n\r\nexport type DrawerContextType = {\r\n  rootNode: HTMLDivElement | null,\r\n};\r\n\r\n\r\n// CONTEXT\r\nexport const DrawerContext = createContext<DrawerContextType | null>(null);\r\nDrawerContext.displayName = 'DrawerContext';\r\n\r\n\r\n// HELPER HOOK\r\nexport function useDrawerContext() {\r\n  const ctx = useContext(DrawerContext);\r\n  if (!ctx) {\r\n    throw new Error('DrawerContext is null');\r\n  }\r\n  return ctx;\r\n}\r\n\r\n\r\n// PROVIDER\r\ntype Props = {\r\n  children: React.ReactNode,\r\n};\r\nexport const DrawerProvider = (props: Props) => {\r\n  const { children } = props;\r\n  const [rootNode, setRootNode] = useState<HTMLDivElement | null>(null);\r\n  const theme = useMantineTheme();\r\n\r\n  function setRef(ref: HTMLDivElement | null) {\r\n    setRootNode((prevState) => {\r\n      if (prevState !== ref) return ref;\r\n      return prevState;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <DrawerContext.Provider value={{ rootNode }}>\r\n      <DrawerRoot ref={setRef} topOffset={theme.other.headerHeight} />\r\n      {children}\r\n    </DrawerContext.Provider>\r\n  );\r\n}\r\n\r\nconst DrawerRoot = styled.div<{ topOffset: string }>`\r\n  position: fixed;\r\n  top: ${({ topOffset }) => topOffset};\r\n  left: 0px;\r\n  bottom: 0px;\r\n  right: 0px;\r\n  z-index: 1000;\r\n  margin: 0;\r\n  padding: 0;\r\n  pointer-events: none;\r\n`;\r\n","import React from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\ninterface Props {\r\n  children: React.ReactNode,\r\n  rootNode: Element | null,\r\n  key?: string,\r\n}\r\n\r\nconst Portal = (props: Props) => {\r\n  const { children, rootNode, key } = props;\r\n  if (rootNode) {\r\n    return (\r\n      createPortal(children, rootNode, key)\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default Portal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { UnstyledButton, Paper, Text, Container } from '@mantine/core';\r\nimport { useLocalStorageValue } from '@mantine/hooks';\r\nimport { ChevronsLeft, ChevronsRight } from 'react-feather';\r\nimport { useDrawerContext } from '../../contexts/drawer';\r\nimport Portal from '../../components/Portal';\r\n\r\ninterface Props {\r\n  open?: boolean,\r\n  onToggle?: (newState: boolean) => void,\r\n  children: React.ReactNode,\r\n}\r\n\r\nconst Drawer = (props: Props) => {\r\n  const { open, onToggle, children } = props;\r\n  const [fullyClosed, setFullyClosed] = useState(!open);\r\n  const [tooltipDismissed, setTooltipDismissed] = useLocalStorageValue<'false' | 'true'>({ key: 'tooltip-dismissed', defaultValue: 'false' });\r\n  const ctx = useDrawerContext();\r\n\r\n  const showTooltip = tooltipDismissed === 'false';\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      setTooltipDismissed('true');\r\n    }\r\n  }, [open, setTooltipDismissed]);\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      setFullyClosed(false);\r\n    }\r\n  }, [open]);\r\n\r\n  function handleTransitionEnd() {\r\n    if (!open) {\r\n      setFullyClosed(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Portal rootNode={ctx.rootNode}>\r\n      <DrawerDimmer open={!!open || showTooltip} onClick={() => { !!open && onToggle?.(!open); }} />\r\n      <DrawerContainer open={!!open} onTransitionEnd={handleTransitionEnd}>\r\n        <DrawerToggle onClick={() => { onToggle?.(!open); }}>\r\n          <ToggleLabel>\r\n            <ToggleLabelText>{open ? 'Close' : 'Open'} Control Panel</ToggleLabelText>\r\n            <ToggleLabelIcon>\r\n              {\r\n                open\r\n                  ? <ChevronsLeft />\r\n                  : <ChevronsRight />\r\n              }\r\n            </ToggleLabelIcon>\r\n          </ToggleLabel>\r\n          {\r\n            showTooltip && (\r\n              <Tooltip>\r\n                <TooltipText>\r\n                  Click here to get started!\r\n                </TooltipText>\r\n                <TooltipConfirmContainer>\r\n                  <TooltipConfirm onClick={(e) => { setTooltipDismissed('true'); e.stopPropagation(); }}>\r\n                    Dismiss\r\n                  </TooltipConfirm>\r\n                </TooltipConfirmContainer>\r\n              </Tooltip>\r\n            )\r\n          }\r\n        </DrawerToggle>\r\n        <DrawerContent className='custom-scrollbar' aria-hidden={!open} fullyClosed={fullyClosed} fluid>\r\n          {children}\r\n        </DrawerContent>\r\n      </DrawerContainer>\r\n    </Portal>\r\n  )\r\n};\r\n\r\nexport default Drawer;\r\n\r\nconst DrawerDimmer = styled.div<{ open: boolean }>`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  bottom: 0px;\r\n  right: 0px;\r\n  margin: 0;\r\n  padding: 0;\r\n  background: #000;\r\n  opacity: ${({ open }) => open ? 0.7 : 0.0 };\r\n  transition: opacity 550ms;\r\n  pointer-events: ${({ open }) => open ? 'auto' : 'none' };\r\n`;\r\n\r\nconst DrawerContainer = styled.div<{ open: boolean }>`\r\n  position: relative;\r\n  top: 0px;\r\n  left: ${({ open, theme }) => (open ? '0px' : `-${theme.other.drawerWidth}`)};\r\n  width: ${({ theme }) => theme.other.drawerWidth};\r\n  height: 100%;\r\n  background: ${({ theme }) => theme.colors.background[0]};\r\n  transition: left 550ms;\r\n  transition-timing-function: cubic-bezier(.68, -0.21, .38, 1.26);\r\n  pointer-events: auto;\r\n`;\r\n\r\nconst DrawerToggle = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  top: 0px;\r\n  bottom: 0px;\r\n  right: -25px;\r\n  width: 25px;\r\n  background: ${({ theme }) => theme.colors.primary[6]};\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.primary[7]};\r\n  }\r\n`;\r\n\r\nconst ToggleLabel = styled(UnstyledButton)`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 0 0 auto;\r\n  right: -25px;\r\n  width: 30px;\r\n  height: 160px;\r\n  border-radius: 2px;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  background: ${({ theme }) => theme.colors.primary[6]};\r\n  color: ${({ theme }) => theme.white};\r\n  overflow: visible;\r\n  white-space: nowrap;\r\n\r\n  ${DrawerToggle}:hover & {\r\n    background: ${({ theme }) => theme.colors.primary[7]};\r\n  }\r\n\r\n  ::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: -24px;\r\n    right: 2px;\r\n    width: 50px;\r\n    height: 26px;\r\n    background: ${({ theme }) => theme.colors.primary[6]};\r\n    transform: rotate(50deg);\r\n    z-index: 1;\r\n\r\n    ${DrawerToggle}:hover & {\r\n      background: ${({ theme }) => theme.colors.primary[7]};\r\n    }\r\n  }\r\n\r\n  ::after {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: -24px;\r\n    right: 2px;\r\n    width: 50px;\r\n    height: 26px;\r\n    background: ${({ theme }) => theme.colors.primary[6]};\r\n    transform: rotate(-50deg);\r\n    z-index: 1;\r\n\r\n    ${DrawerToggle}:hover & {\r\n      background: ${({ theme }) => theme.colors.primary[7]};\r\n    }\r\n  }\r\n`;\r\n\r\nconst ToggleLabelText = styled.span`\r\n  position: absolute;\r\n  left: -16px;\r\n  z-index: 2;\r\n  writing-mode: vertical-rl;\r\n  text-orientation: mixed;\r\n`;\r\n\r\nconst ToggleLabelIcon = styled.span`\r\n  position: absolute;\r\n  left: 5px;\r\n  z-index: 2;\r\n`;\r\n\r\nconst Tooltip = styled(Paper)`\r\n  @keyframes lookAtMe {\r\n    from {\r\n      left: 84px;\r\n    }\r\n\r\n    to {\r\n      left: 80px;\r\n    }\r\n  }\r\n\r\n  animation: 300ms infinite alternate lookAtMe;\r\n\r\n  position: absolute;\r\n  left: 80px;\r\n  padding: 20px;\r\n  z-index: 3;\r\n  background: ${({ theme }) => theme.colors.info[6]};\r\n  border-radius: 2px;\r\n  pointer-events: none;\r\n\r\n  ::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: calc(50% - 10px);\r\n    left: -10px;\r\n    width: 20px;\r\n    height: 20px;\r\n    background: ${({ theme }) => theme.colors.info[6]};\r\n\r\n    transform: rotate(45deg);\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nconst TooltipText = styled(Text)`\r\n  width: 180px;\r\n  height: 40px;\r\n`;\r\n\r\nconst TooltipConfirmContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst TooltipConfirm = styled(UnstyledButton)`\r\n  pointer-events: auto;\r\n  color: ${({ theme }) => theme.white};\r\n  text-decoration: underline;\r\n`;\r\n\r\nconst DrawerContent = styled(Container)<{ fullyClosed: boolean }>`\r\n  visibility: ${({ fullyClosed }) => fullyClosed ? 'hidden' : 'visible'};\r\n  position: absolute;\r\n  top: 0px;\r\n  bottom: 0px;\r\n  left: 0px;\r\n  right: 0px;\r\n  padding: 10px;\r\n  padding-bottom: 30px;\r\n  overflow: auto;\r\n  overscroll-behavior: contain;\r\n`;\r\n","// import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Paper } from '@mantine/core';\r\n\r\nconst Card = styled(Paper)`\r\n  margin-bottom: 20px;\r\n  border-left: 5px solid ${({ theme }) => theme.colors.primary[6]};\r\n`;\r\n\r\nexport default Card;\r\n","// import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Text } from '@mantine/core';\r\nimport Card from '../Card';\r\n\r\nexport const Section = styled(Card)`\r\n  background: ${({ theme }) => theme.colors.background[1]};\r\n  box-shadow: 0px 0px 24px -6px #0F1011;\r\n  border: 3px solid ${({ theme }) => theme.colors.background[3]};\r\n  padding: 20px;\r\n`;\r\n\r\nexport const SectionDescription = styled(Text)`\r\n  margin-bottom: 20px;\r\n`;\r\n","import React from 'react';\r\nimport { Button, ButtonProps } from '@mantine/core';\r\nimport { Trash2 } from 'react-feather';\r\n\r\nconst TrashButton = (props: ButtonProps<React.ElementType<any>>) => {\r\n  return (\r\n    <Button { ...props} color='danger' style={{ ...(props?.style || {}), width: '36px', height: '36px', padding: '0px', flex: '0 0 auto' }}>\r\n      <Trash2 size={20} />\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default TrashButton;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button, Select, TextInput, Group, Divider, Title } from '@mantine/core';\r\nimport { items, recipes, resources } from '../../../../data';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\nimport { MAX_PRIORITY } from '../../../../contexts/production/reducer';\r\nimport { POINTS_ITEM_KEY } from '../../../../utilities/production-solver';\r\nimport { Section, SectionDescription } from '../../../../components/Section';\r\nimport TrashButton from '../../../../components/TrashButton';\r\n\r\nconst itemOptions = Object.keys(items)\r\n  .filter((key) => items[key].producedFromRecipes.length !== 0 && !resources[key])\r\n  .map((key) => ({\r\n    value: key,\r\n    label: items[key].name,\r\n  }))\r\n  .sort((a, b) => {\r\n    return a.label > b.label ? 1 : -1;\r\n  });\r\n\r\nitemOptions.unshift({\r\n  value: POINTS_ITEM_KEY,\r\n  label: 'AWESOME Sink Points (x1000)'\r\n});\r\n\r\nconst baseModeOptions = [\r\n  { value: 'per-minute', label: 'Items Per Min' },\r\n  { value: 'maximize', label: 'Maximize Output' },\r\n];\r\n\r\nconst priorityOptions = Array(MAX_PRIORITY)\r\n  .fill('')\r\n  .map((_, i) => ({ value: `${i + 1}`, label: `Priority: ${i + 1}` }))\r\n  .reverse();\r\n\r\nconst ProductionTab = () => {\r\n  const ctx = useProductionContext();\r\n\r\n  function renderItemInputs() {\r\n    return ctx.state.productionItems.map((data) => {\r\n      const modeOptions = [...baseModeOptions];\r\n      if (data.itemKey) {\r\n        const itemInfo = items[data.itemKey];\r\n        const recipeList = itemInfo?.producedFromRecipes || [];\r\n        recipeList.forEach((recipeKey) => {\r\n          const recipeInfo = recipes[recipeKey];\r\n          const target = recipeInfo?.products.find((p) => p.itemClass === data.itemKey);\r\n          if (target) {\r\n            const name = itemInfo.name === recipeInfo.name ? 'Base Recipe' : recipeInfo.name.replace('Alternate: ', '');\r\n            modeOptions.push({ value: recipeKey, label: `${name} [${target.perMinute}/min]` });\r\n          }\r\n        });\r\n      }\r\n      return (\r\n        <ItemContainer key={data.key}>\r\n          <Row>\r\n            <Select\r\n              placeholder='Select an item'\r\n              label='Item'\r\n              clearable\r\n              searchable\r\n              data={itemOptions}\r\n              value={data.itemKey ? data.itemKey : ''}\r\n              onChange={(value) => {\r\n                ctx.dispatch({\r\n                  type: 'SET_PRODUCTION_ITEM',\r\n                  data: { key: data.key, itemKey: (value as any) },\r\n                });\r\n              }}\r\n              style={{ flex: '1 1 auto' }}\r\n            />\r\n            <TrashButton onClick={() => { ctx.dispatch({ type: 'DELETE_PRODUCTION_ITEM', key: data.key }); }} style={{ position: 'relative', top: '13px' }} />\r\n          </Row>\r\n          <Row>\r\n            {\r\n              data.mode === 'maximize'\r\n                ? (\r\n                  <Select\r\n                    label='Priority'\r\n                    data={priorityOptions}\r\n                    value={data.value}\r\n                    onChange={(value) => {\r\n                      ctx.dispatch({\r\n                        type: 'SET_PRODUCTION_ITEM_AMOUNT',\r\n                        data: { key: data.key, amount: (value as any) },\r\n                      });\r\n                    }}\r\n                    style={{ width: '160px' }}\r\n                  />\r\n                )\r\n                : (\r\n                  <TextInput\r\n                    label='Amount'\r\n                    className='no-spinner'\r\n                    type='number'\r\n                    min='0'\r\n                    step='1'\r\n                    value={data.value}\r\n                    onChange={(e) => {\r\n                      ctx.dispatch({\r\n                        type: 'SET_PRODUCTION_ITEM_AMOUNT',\r\n                        data: { key: data.key, amount: e.currentTarget.value },\r\n                      });\r\n                    }}\r\n                    style={{ width: '160px' }}\r\n                  />\r\n                )\r\n            }\r\n            <Select\r\n              label='Mode'\r\n              data={modeOptions}\r\n              value={data.mode}\r\n              onChange={(value) => {\r\n                ctx.dispatch({\r\n                  type: 'SET_PRODUCTION_ITEM_MODE',\r\n                  data: { key: data.key, mode: (value as any) },\r\n                });\r\n              }}\r\n              style={{ width: '280px' }}\r\n            />\r\n          </Row>\r\n          <Divider style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n        </ItemContainer>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Title order={3}>Production Goals</Title>\r\n        <SectionDescription>\r\n          Select the items you want to produce. When maximizing multiple outputs, higher priority items will be maximized first. When selecting a recipe as a target, the factory will be forced to use that recipe for the final output.\r\n        </SectionDescription>\r\n        {renderItemInputs()}\r\n        <Button onClick={() => { ctx.dispatch({ type: 'ADD_PRODUCTION_ITEM' }) }}>\r\n          + Add Product\r\n        </Button>\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductionTab;\r\n\r\nconst Row = styled(Group)`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button, Select, TextInput, Checkbox, Group, Title, Divider, Text } from '@mantine/core';\r\nimport { items, resources } from '../../../../data';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\nimport TrashButton from '../../../../components/TrashButton';\r\nimport { Section, SectionDescription } from '../../../../components/Section';\r\n\r\nconst itemOptions = Object.keys(items)\r\n  .filter((key) => items[key].producedFromRecipes.length !== 0 && items[key].usedInRecipes.length !== 0 && !resources[key])\r\n  .map((key) => ({\r\n    value: key,\r\n    label: items[key].name,\r\n  }))\r\n  .sort((a, b) => {\r\n    return a.label > b.label ? 1 : -1;\r\n  });\r\n\r\n\r\nconst InputsTab = () => {\r\n  const ctx = useProductionContext();\r\n\r\n  function renderItemInputs() {\r\n    return ctx.state.inputItems.map((data) => (\r\n      <ItemContainer key={data.key}>\r\n        <Row>\r\n          <Select\r\n            placeholder=\"Select an item\"\r\n            label='Item'\r\n            clearable\r\n            searchable\r\n            data={itemOptions}\r\n            value={data.itemKey ? data.itemKey : ''}\r\n            onChange={(value) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_ITEM',\r\n                data: { ...data, itemKey: (value as string) },\r\n              });\r\n            }}\r\n            style={{ flex: '1 1 auto' }}\r\n          />\r\n          <TrashButton onClick={() => { ctx.dispatch({ type: 'DELETE_INPUT_ITEM', key: data.key }); }} style={{ position: 'relative', top: '13px' }} />\r\n        </Row>\r\n        <Row>\r\n          <TextInput\r\n            label='Amount'\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            disabled={data.unlimited}\r\n            value={data.value}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_ITEM',\r\n                data: { ...data, value: e.currentTarget.value },\r\n              });\r\n            }}\r\n          />\r\n          <Checkbox\r\n            className='label'\r\n            label='Unlimited'\r\n            checked={data.unlimited}\r\n            onChange={() => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_ITEM',\r\n                data: { ...data, unlimited: !data.unlimited },\r\n              });\r\n            }}\r\n            style={{ position: 'relative', top: '13px' }}\r\n          />\r\n        </Row>\r\n        <Divider style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n      </ItemContainer>\r\n    ));\r\n  }\r\n\r\n  function renderWeightInputs() {\r\n    const weightingOptions = ctx.state.weightingOptions;\r\n    return (\r\n      <Group grow>\r\n        <TextInput\r\n          label='Resource Efficiency'\r\n          className='no-spinner'\r\n          type='number'\r\n          min='0'\r\n          step='1'\r\n          value={weightingOptions.resources}\r\n          onChange={(e) => {\r\n            ctx.dispatch({\r\n              type: 'UPDATE_WEIGHTING_OPTIONS',\r\n              data: { ...weightingOptions, resources: e.currentTarget.value },\r\n            });\r\n          }}\r\n        />\r\n        <TextInput\r\n          label='Power Efficiency'\r\n          className='no-spinner'\r\n          type='number'\r\n          min='0'\r\n          step='1'\r\n          value={weightingOptions.power}\r\n          onChange={(e) => {\r\n            ctx.dispatch({\r\n              type: 'UPDATE_WEIGHTING_OPTIONS',\r\n              data: { ...weightingOptions, power: e.currentTarget.value },\r\n            });\r\n          }}\r\n        />\r\n        <TextInput\r\n          label='Complexity'\r\n          className='no-spinner'\r\n          type='number'\r\n          min='0'\r\n          step='1'\r\n          value={weightingOptions.complexity}\r\n          onChange={(e) => {\r\n            ctx.dispatch({\r\n              type: 'UPDATE_WEIGHTING_OPTIONS',\r\n              data: { ...weightingOptions, complexity: e.currentTarget.value },\r\n            });\r\n          }}\r\n        />\r\n      </Group>\r\n    )\r\n  }\r\n\r\n  function renderResourceInputs() {\r\n    return ctx.state.inputResources.map((data) => (\r\n      <ItemContainer key={data.key}>\r\n        <Row>\r\n          <Text style={{ fontWeight: 'bold' }}>{items[data.itemKey].name}</Text>\r\n        </Row>\r\n        <Row>\r\n          <TextInput\r\n            label='Amount'\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={data.value}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_RESOURCE',\r\n                data: { ...data, value: e.currentTarget.value },\r\n              });\r\n            }}\r\n            disabled={data.unlimited}\r\n            style={{ flex: '1 1 auto' }}\r\n          />\r\n          <Checkbox\r\n            label='Unlimited'\r\n            checked={data.unlimited}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_RESOURCE',\r\n                data: { ...data, unlimited: e.currentTarget.checked },\r\n              });\r\n            }}\r\n            style={{ position: 'relative', top: '13px', flex: '1 1 auto' }}\r\n          />\r\n          <TextInput\r\n            label='Weight'\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={data.weight}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_RESOURCE',\r\n                data: { ...data, weight: e.currentTarget.value },\r\n              });\r\n            }}\r\n            style={{ flex: '0 0 100px' }}\r\n          />\r\n        </Row>\r\n        <Divider style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n      </ItemContainer>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Title order={3}>Input Items</Title>\r\n        <SectionDescription>\r\n          Select the items that you already have available and don't need to produce in this factory.\r\n        </SectionDescription>\r\n        {renderItemInputs()}\r\n        <Button onClick={() => { ctx.dispatch({ type: 'ADD_INPUT_ITEM' }) }}>\r\n          + Add Input\r\n        </Button>\r\n      </Section>\r\n      <Section>\r\n        <Title order={3}>Weighting Options</Title>\r\n        <SectionDescription>\r\n          Adjust the weights affecting the importance of various properties of the factory. A value of 0 indicates that that property is not considered during factory layout.\r\n        </SectionDescription>\r\n        {renderWeightInputs()}\r\n        <Button color='danger' onClick={() => { ctx.dispatch({ type: 'SET_ALL_WEIGHTS_DEFAULT' }) }} style={{ marginTop: '15px' }}>\r\n          Reset All Weights\r\n        </Button>\r\n      </Section>\r\n      <Section>\r\n        <Title order={3}>Raw Resources</Title>\r\n        <SectionDescription>\r\n          Select the raw resources that are available to your factory. The default values are set to the map limits. The weight value is a number representing how valuable that resource is when comparing recipes. The defaults are calculated automatically according to node rarity.\r\n        </SectionDescription>\r\n        <Group style={{ marginBottom: '15px' }}>\r\n          <Button color='danger' onClick={() => { ctx.dispatch({ type: 'SET_RESOURCES_TO_MAP_LIMITS' }) }}>\r\n            Set All To Maximum\r\n          </Button>\r\n          <Button color='danger' onClick={() => { ctx.dispatch({ type: 'SET_RESOURCES_TO_0' }) }}>\r\n            Set All To 0\r\n          </Button>\r\n        </Group>\r\n        <Checkbox\r\n          label='Allow hand-gathered resources (mycelia, flower petals, etc)'\r\n          checked={ctx.state.allowHandGatheredItems}\r\n          onChange={(e) => { ctx.dispatch({ type: 'SET_ALLOW_HAND_GATHERED_ITEMS', active: e.currentTarget.checked }) }}\r\n          style={{ marginBottom: '25px' }}\r\n          />\r\n        {renderResourceInputs()}\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsTab;\r\n\r\nconst Row = styled(Group)`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n","import React, { useState, useMemo, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { List, Checkbox, TextInput, Button, Group, Title, Grid, Col } from '@mantine/core';\r\nimport { Search } from 'react-feather';\r\nimport { recipes } from '../../../../data';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\nimport { Section, SectionDescription } from '../../../../components/Section';\r\n\r\nconst cleanAltNameRegex = /^Alternate: /;\r\nconst baseRecipes: { key: string, label: string }[] = [];\r\nconst altRecipes: { key: string, label: string }[] = [];\r\nObject.entries(recipes)\r\n  .forEach(([key, data]) => {\r\n    if (data.isAlternate) {\r\n      altRecipes.push({\r\n        key,\r\n        label: data.name.replace(cleanAltNameRegex, ''),\r\n      });\r\n    } else {\r\n      baseRecipes.push({\r\n        key,\r\n        label: data.name,\r\n      });\r\n    }\r\n  });\r\nbaseRecipes.sort((a, b) => (a.label > b.label ? 1 : -1));\r\naltRecipes.sort((a, b) => (a.label > b.label ? 1 : -1));\r\n\r\nconst RecipesTab = () => {\r\n  const ctx = useProductionContext();\r\n  const [searchValue, setSearchValue] = useState('');\r\n\r\n  const renderRecipeList = useCallback((recipeList: { key: string, label: string }[]) => {\r\n    return recipeList.map(({ key, label }) => ({\r\n      label,\r\n      component: (\r\n        <List.Item key={key}>\r\n          <Checkbox\r\n            label={label}\r\n            checked={ctx.state.allowedRecipes[key]}\r\n            onChange={() => {\r\n              ctx.dispatch({\r\n                type: 'SET_RECIPE_ACTIVE',\r\n                key,\r\n                active: !ctx.state.allowedRecipes[key],\r\n              });\r\n            }}\r\n          />\r\n        </List.Item>\r\n      )\r\n    }));\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ctx.state, ctx.dispatch]);\r\n\r\n  const renderedBaseRecipes = useMemo(() => renderRecipeList(baseRecipes), [renderRecipeList]);\r\n  const renderedAltRecipes = useMemo(() => renderRecipeList(altRecipes), [renderRecipeList]);\r\n\r\n  function renderRecipeOptions(alternates: boolean) {\r\n    const rendered = alternates ? renderedAltRecipes : renderedBaseRecipes\r\n    return (\r\n      <>\r\n        <Group style={{ marginTop: '5px', marginBottom: '10px' }}>\r\n          <Button onClick={() => { ctx.dispatch({ type: 'MASS_SET_RECIPES_ACTIVE', alternates, active: true }) }}>\r\n            Select All\r\n          </Button>\r\n          <Button onClick={() => { ctx.dispatch({ type: 'MASS_SET_RECIPES_ACTIVE', alternates, active: false }) }}>\r\n            Select None\r\n          </Button>\r\n        </Group>\r\n        <List listStyleType='none' spacing={6}>\r\n          {rendered.filter(({ label }) => label.toLowerCase().includes(searchValue)).map(({ component }) => component)}\r\n        </List>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Title order={3}>Recipes</Title>\r\n        <SectionDescription>\r\n          Select the recipes that you want to be considered in this factory.\r\n        </SectionDescription>\r\n        <TextInput\r\n          placeholder='Search...'\r\n          aria-label='search recipes'\r\n          icon={<Search size={16} />}\r\n          value={searchValue}\r\n          onChange={(e) => { setSearchValue(e.currentTarget.value); }}\r\n          style={{ marginBottom: '10px' }}\r\n        />\r\n        <Grid grow style={{ position: 'relative' }}>\r\n          <Col span={6}>\r\n            <Title order={3}>Alternate Recipes</Title>\r\n            {renderRecipeOptions(true)}\r\n          </Col>\r\n          <Col span={6}>\r\n            <Title order={3}>Base Recipes</Title>\r\n            {renderRecipeOptions(false)}\r\n          </Col>\r\n          <VDivider />\r\n        </Grid>\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipesTab;\r\n\r\nconst VDivider = styled.div`\r\n  position: absolute;\r\n  top: 20px;\r\n  bottom: 20px;\r\n  left: 255px;\r\n  width: 1px;\r\n  background: ${({ theme }) => theme.colors.background[3]};\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container, Tabs, Paper, Title, Divider, Group, Button, Switch } from '@mantine/core';\r\nimport { TrendingUp, Shuffle, Box } from 'react-feather';\r\nimport { useProductionContext } from '../../../contexts/production';\r\nimport ProductionTab from './ProductionTab';\r\nimport InputsTab from './InputsTab';\r\nimport RecipesTab from './RecipesTab';\r\n\r\nconst PlannerOptions = () => {\r\n  const ctx = useProductionContext();\r\n  \r\n  return (\r\n    <>\r\n      <Paper style={{ marginBottom: '20px', paddingTop: '10px' }}>\r\n        <Title order={2}>Control Panel</Title>\r\n        <Divider style={{ marginTop: '5px', marginBottom: '15px' }} />\r\n        <Group style={{ marginBottom: '15px' }}>\r\n          <Button\r\n            onClick={() => { ctx.calculate(); }}\r\n            disabled={ctx.autoCalculate}\r\n            style={{ marginRight: '15px' }}\r\n          >\r\n            Calculate\r\n          </Button>\r\n          <Button\r\n            color='danger'\r\n            onClick={() => { ctx.dispatch({ type: 'RESET_FACTORY' }) }}\r\n          >\r\n            Reset ALL Factory Options\r\n          </Button>\r\n        </Group>\r\n        <Switch\r\n          size='md'\r\n          label='Auto-calculate (turn this off if changing options is too slow)'\r\n          checked={ctx.autoCalculate}\r\n          onChange={(e) => { ctx.setAutoCalculate(e.currentTarget.checked); }}\r\n        />\r\n      </Paper>\r\n      <Tabs grow variant='outline'>\r\n        <Tabs.Tab label='Production' icon={<TrendingUp size={18} />}>\r\n          <TabContainer fluid>\r\n            <ProductionTab />\r\n          </TabContainer>\r\n        </Tabs.Tab>\r\n        <Tabs.Tab label='Inputs' icon={<Shuffle size={18} />}>\r\n          <TabContainer fluid>\r\n            <InputsTab />\r\n          </TabContainer>\r\n        </Tabs.Tab>\r\n        <Tabs.Tab label='Recipes' icon={<Box size={18} />}>\r\n          <TabContainer fluid>\r\n            <RecipesTab />\r\n          </TabContainer>\r\n        </Tabs.Tab>\r\n      </Tabs>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlannerOptions;\r\n\r\nconst TabContainer = styled(Container)`\r\n  padding: 15px 15px;\r\n  background: ${({ theme }) => theme.colors.background[1]}\r\n`;\r\n","import { MantineThemeOverride } from '@mantine/core';\r\n// import { gradientFromColor } from './utilities/color';\r\n\r\nconst defaultFont = \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\";\r\n\r\nconst baseSat = '77%';\r\nconst baseLight = '63%';\r\nconst selectSat = '58%';\r\nconst selectLight = '58%';\r\n\r\n\r\nexport const graphColors = {\r\n  // nodes\r\n  resource: { base: `hsl(31, ${baseSat}, ${baseLight})`, selected: `hsl(31, ${selectSat}, ${selectLight})` },\r\n  input: { base: `hsl(0, ${baseSat}, ${baseLight})`, selected: `hsl(0, ${selectSat}, ${selectLight})` },\r\n  handGathered: { base: `hsl(261, ${baseSat}, ${baseLight})`, selected: `hsl(261, ${selectSat}, ${selectLight})` },\r\n  sideProduct: { base: `hsl(311, ${baseSat}, ${baseLight})`, selected: `hsl(311, ${selectSat}, ${selectLight})` },\r\n  finalProduct: { base: `hsl(128, ${baseSat}, ${baseLight})`, selected: `hsl(128, ${selectSat}, ${selectLight})` },\r\n  recipe: { base: `hsl(197, ${baseSat}, ${baseLight})`, selected: `hsl(197, ${selectSat}, ${selectLight})` },\r\n  nuclear: { base: `hsl(50, ${baseSat}, ${baseLight})`, selected: `hsl(50, ${selectSat}, ${selectLight})` },\r\n\r\n  // edges\r\n  edge: { line: '#999999', label: '#eeeeee' },\r\n  incoming: { line: `hsl(31, ${baseSat}, ${baseLight})`, label: `hsl(31, ${baseSat}, ${baseLight})` },\r\n  outgoing: { line: `hsl(128, ${baseSat}, ${baseLight})`, label: `hsl(128, ${baseSat}, ${baseLight})` },\r\n}\r\n\r\nexport const theme: MantineThemeOverride = {\r\n  primaryColor: 'primary',\r\n  colors: {\r\n    'primary': [\"#fcebde\", \"#f9d8be\", \"#f7c59f\", \"#f4b17f\", \"#f19e60\", \"#ef8b40\", \"#ec7821\", \"#c4631c\", \"#94501e\", \"#673c1c\"],\r\n    'danger': [\"#fdb5b5\", \"#fda3a3\", \"#fc9191\", \"#fc7e7e\", \"#fb6c6c\", \"#fa5959\", \"#fa4747\", \"#f12929\", \"#dc1818\", \"#b21b1b\"],\r\n    'background': [\"#26282b\", \"#373b40\", \"#3f434a\", \"#50565e\", \"#ffffff\", \"#ffffff\", \"#ffffff\", \"#ffffff\", \"#b3b6ba\", \"#ffffff\"],\r\n    'info': Array(10).fill('#3065c7') as any,\r\n  },\r\n  white: '#eee',\r\n  fontFamily: defaultFont,\r\n  radius: { xs: 0, sm: 2, md: 4, lg: 8, xl: 16 },\r\n  headings: {\r\n    fontFamily: defaultFont,\r\n    fontWeight: 700,\r\n    sizes: {\r\n      h1: { fontSize: 36, lineHeight: 1.3 },\r\n      h2: { fontSize: 30, lineHeight: 1.35 },\r\n      h3: { fontSize: 22, lineHeight: 1.4 },\r\n      h4: { fontSize: 18, lineHeight: 1.45 },\r\n      h5: { fontSize: 16, lineHeight: 1.5 },\r\n      h6: { fontSize: 14, lineHeight: 1.5 },\r\n    }\r\n  },\r\n  other: {\r\n    headerHeight: '64px',\r\n    pageLeftMargin: '55px',\r\n    drawerWidth: '620px',\r\n    scrollbarTrackColor: '#212226',\r\n    scrollbarThumbColor: '#6c6c73',\r\n  },\r\n};\r\n\r\n\r\nexport const styles: any = {\r\n  AppShell: (theme: any) => ({\r\n    root: {\r\n      minHeight: '100vh',\r\n    }\r\n  }),\r\n  Paper: (theme: any) => ({\r\n    root: {\r\n      background: theme.colors.background[1],\r\n      padding: '15px',\r\n    }\r\n  }),\r\n  Text: (theme: any) => ({\r\n    root: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  Title: (theme: any) => ({\r\n    root: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  List: (theme: any) => ({\r\n    item: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  Anchor: (theme: any) => ({\r\n    anchor: {\r\n      color: theme.colors.primary[6],\r\n    }\r\n  }),\r\n  Select: (theme: any) => ({\r\n    label: {\r\n      color: theme.white,\r\n    },\r\n    item: {\r\n      borderRadius: '0px',\r\n    },\r\n    hovered: {\r\n      background: theme.colors.background[8],\r\n    },\r\n    selected: {\r\n      color: theme.white,\r\n      background: theme.colors.primary[5],\r\n    },\r\n  }),\r\n  TextInput: (theme: any) => ({\r\n    label: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  Checkbox: (theme: any) => ({\r\n    label: {\r\n      cursor: 'pointer',\r\n      color: theme.white,\r\n    },\r\n    input: {\r\n      cursor: 'pointer',\r\n    }\r\n  }),\r\n  Switch: (theme: any) => ({\r\n    label: {\r\n      cursor: 'pointer',\r\n      color: theme.white,\r\n    },\r\n    input: {\r\n      cursor: 'pointer',\r\n      background: theme.colors.background[1],\r\n      borderWidth: '2px',\r\n      '&:checked': {\r\n        background: theme.colors.primary[6],\r\n        borderColor: theme.colors.primary[6],\r\n      }\r\n    }\r\n  }),\r\n  Divider: (theme: any) => ({\r\n    horizontal: {\r\n      borderTopColor: theme.colors.background[3],\r\n    }\r\n  }),\r\n  Button: (theme: any) => ({\r\n    root: {\r\n      color: '#fff',\r\n      '&[disabled]': {\r\n        color: `${theme.white} !important`,\r\n        backgroundColor: `${theme.colors.primary[6]} !important`,\r\n        opacity: 0.5,\r\n      }\r\n    }\r\n  }),\r\n  Tabs: (theme: any) => ({\r\n    tabLabel: {\r\n      color: theme.white,\r\n      fontFamily: \"'M PLUS 1 Code', sans-serif\",\r\n      fontSize: '16px',\r\n    },\r\n    tabIcon: {\r\n      color: theme.white,\r\n    },\r\n    tabActive: {\r\n      background: `${theme.colors.background[1]} !important`,\r\n      borderBottomWidth: `0px !important`,\r\n    },\r\n    body: {\r\n      paddingTop: '0px',\r\n      background: theme.colors.background[0],\r\n      borderBottomLeftRadius: '2px',\r\n      borderBottomRightRadius: '2px',\r\n    },\r\n  }),\r\n};\r\n","import React, { useMemo, useRef, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { nanoid } from 'nanoid';\r\nimport Cytoscape, { Stylesheet } from 'cytoscape';\r\nimport klay from 'cytoscape-klay';\r\nimport GraphVisualizer from 'react-cytoscapejs';\r\nimport { Text, Container, Center, Group } from '@mantine/core';\r\nimport { AlertCircle } from 'react-feather';\r\nimport { ProductionGraph, GraphNode, GraphEdge, NODE_TYPE } from '../../../../utilities/production-solver';\r\nimport { items, recipes, buildings } from '../../../../data';\r\nimport { graphColors } from '../../../../theme';\r\n\r\nCytoscape.use(klay);\r\nif (process.env.NODE_ENV !== 'development') {\r\n  Cytoscape.warnings(false);\r\n}\r\n\r\nconst layout = {\r\n  name: 'klay',\r\n  padding: 40,\r\n  klay: {\r\n    direction: 'RIGHT',\r\n    edgeRouting: 'ORTHOGONAL',\r\n    nodePlacement: 'LINEAR_SEGMENTS',\r\n    edgeSpacingFactor: 0.2,\r\n    inLayerSpacingFactor: 0.7,\r\n    spacing: 90,\r\n    thoroughness: 10,\r\n  },\r\n};\r\n\r\nconst stylesheet: Stylesheet[] = [\r\n  {\r\n    // ====== BASE ====== //\r\n    selector: 'core',\r\n    style: {\r\n      'active-bg-color': '#000',\r\n      'active-bg-opacity': 0,\r\n      'active-bg-size': 0,\r\n      'selection-box-color': '#000',\r\n      'selection-box-border-color': '#000',\r\n      'selection-box-border-width': 0,\r\n      'selection-box-opacity': 0,\r\n      'outside-texture-bg-color': '#000',\r\n      'outside-texture-bg-opacity': 0,\r\n    },\r\n  },\r\n  {\r\n    selector: 'node',\r\n    style: {\r\n      'label': 'data(label)',\r\n      'text-valign': 'center',\r\n      'text-halign': 'center',\r\n      'height': '30px',\r\n      'width': '150px',\r\n      'text-max-width': '157px',\r\n      'padding-top': '20px',\r\n      'overlay-padding': 0,\r\n      'overlay-opacity': 0,\r\n      'text-wrap': 'wrap',\r\n      'font-size': '14px',\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge',\r\n    style: {\r\n      'label': 'data(label)',\r\n      'width': 1,\r\n      'curve-style': 'bezier',\r\n      'control-point-step-size': 100,\r\n      'target-arrow-shape': 'triangle-backcurve',\r\n      'arrow-scale': 1.2,\r\n      'overlay-padding': 0,\r\n      'overlay-opacity': 0,\r\n      'text-wrap': 'wrap',\r\n      'font-size': '14px',\r\n      'color': graphColors.edge.label,\r\n      'line-color': graphColors.edge.line,\r\n      'target-arrow-color': graphColors.edge.line,\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge.loop',\r\n    style: {\r\n      'loop-direction': '180deg',\r\n      'loop-sweep': '-40deg',\r\n      'edge-distances': 'node-position',\r\n      'source-endpoint': '-15% 50%',\r\n      'target-endpoint': '15% 50%',\r\n    },\r\n  },\r\n\r\n\r\n  // ====== NODES ====== //\r\n  {\r\n    selector: 'node.item-shape',\r\n    style: {\r\n      'shape': 'ellipse',\r\n      'height': '40px',\r\n      'width': '130px',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.recipe-shape',\r\n    style: {\r\n      'shape': 'round-rectangle',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.selected, node.grabbed',\r\n    style: {\r\n      'z-index': 100,\r\n      'height': '45px',\r\n      'width': '195px',\r\n      'text-max-width': '192px',\r\n      'font-size': '16px',\r\n      'font-weight': 'bold',\r\n      'border-width': 2,\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.item-shape.selected, node.item-shape.grabbed',\r\n    style: {\r\n      'height': '55px',\r\n      'width': '170px',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.resource',\r\n    style: { 'background-color': graphColors.resource.base },\r\n  },\r\n  {\r\n    selector: 'node.resource.selected, node.resource.grabbed',\r\n    style: { 'background-color': graphColors.resource.selected },\r\n  },\r\n  {\r\n    selector: 'node.input',\r\n    style: { 'background-color': graphColors.input.base },\r\n  },\r\n  {\r\n    selector: 'node.input.selected, node.input.grabbed',\r\n    style: { 'background-color': graphColors.input.selected },\r\n  },\r\n  {\r\n    selector: 'node.hand-gathered',\r\n    style: { 'background-color': graphColors.handGathered.base },\r\n  },\r\n  {\r\n    selector: 'node.hand-gathered.selected, node.hand-gathered.grabbed',\r\n    style: { 'background-color': graphColors.handGathered.selected },\r\n  },\r\n  {\r\n    selector: 'node.side-product',\r\n    style: { 'background-color': graphColors.sideProduct.base },\r\n  },\r\n  {\r\n    selector: 'node.side-product.selected, node.side-product.grabbed',\r\n    style: { 'background-color': graphColors.sideProduct.selected },\r\n  },\r\n  {\r\n    selector: 'node.final-product',\r\n    style: { 'background-color': graphColors.finalProduct.base },\r\n  },\r\n  {\r\n    selector: 'node.final-product.selected, node.final-product.grabbed',\r\n    style: { 'background-color': graphColors.finalProduct.selected },\r\n  },\r\n  {\r\n    selector: 'node.recipe',\r\n    style: { 'background-color': graphColors.recipe.base },\r\n  },\r\n  {\r\n    selector: 'node.recipe.selected, node.recipe.grabbed',\r\n    style: { 'background-color': graphColors.recipe.selected },\r\n  },\r\n  {\r\n    selector: 'node.nuclear',\r\n    style: { 'background-color': graphColors.nuclear.base },\r\n  },\r\n  {\r\n    selector: 'node.nuclear.selected, node.nuclear.grabbed',\r\n    style: { 'background-color': graphColors.nuclear.selected },\r\n  },\r\n\r\n  \r\n  // ====== EDGES ====== //\r\n  {\r\n    selector: 'edge.selected, edge.grabbed',\r\n    style: {\r\n      'width': 4,\r\n      'font-size': '14px',\r\n      'font-weight': 'bold',\r\n      'text-outline-width': 2,\r\n      'z-index': 100,\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge.selected-incoming, edge.grabbed-incoming',\r\n    style: {\r\n      'color': graphColors.incoming.label,\r\n      'line-color': graphColors.incoming.line,\r\n      'target-arrow-color': graphColors.incoming.line,\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge.selected-outgoing, edge.grabbed-outgoing',\r\n    style: {\r\n      'color': graphColors.outgoing.label,\r\n      'line-color': graphColors.outgoing.line,\r\n      'target-arrow-color': graphColors.outgoing.line,\r\n    },\r\n  },\r\n];\r\n\r\nconst NODE_COLOR_CLASS = {\r\n  [NODE_TYPE.FINAL_PRODUCT]: 'final-product',\r\n  [NODE_TYPE.SIDE_PRODUCT]: 'side-product',\r\n  [NODE_TYPE.INPUT_ITEM]: 'input',\r\n  [NODE_TYPE.HAND_GATHERED_RESOURCE]: 'hand-gathered',\r\n  [NODE_TYPE.RESOURCE]: 'resource',\r\n  [NODE_TYPE.RECIPE]: 'recipe',\r\n};\r\n\r\nfunction truncateFloat(n: number) {\r\n  return n.toFixed(4).replace(/\\.?0+$/, '');\r\n}\r\n\r\nfunction getNodeLabel(node: GraphNode) {\r\n  let label = '';\r\n  let amountText = '';\r\n  if (node.type === NODE_TYPE.RECIPE) {\r\n    const recipe = recipes[node.key];\r\n    label = recipe.name;\r\n    amountText = `${truncateFloat(node.multiplier)}x ${buildings[recipe.producedIn].name}`;\r\n  } else {\r\n    const item = items[node.key];\r\n    if (node.type === NODE_TYPE.SIDE_PRODUCT) {\r\n      label = `Side Product:\\n${item.name}`;\r\n    } else {\r\n      label = item.name;\r\n    }\r\n    amountText = `${truncateFloat(node.multiplier)} / min`;\r\n  }\r\n  return `${label}\\n${amountText}`;\r\n}\r\n\r\nfunction getNodeClasses(node: GraphNode) {\r\n  const classes = [];\r\n  if (node.type === NODE_TYPE.RECIPE) {\r\n    classes.push('recipe-shape');\r\n    const recipe = recipes[node.key];\r\n    if (recipe.producedIn === 'Desc_GeneratorNuclear_C') {\r\n      classes.push('nuclear');\r\n    } else {\r\n      classes.push(NODE_COLOR_CLASS[node.type]);\r\n    }\r\n  } else {\r\n    classes.push('item-shape');\r\n    classes.push(NODE_COLOR_CLASS[node.type]);\r\n  }\r\n  return classes;\r\n}\r\n\r\nfunction getEdgeLabel(edge: GraphEdge) {\r\n  const item = items[edge.key];\r\n  const label = item.name;\r\n  const amountText = `${truncateFloat(edge.productionRate)} / min`;\r\n  return `${label}\\n${amountText}`;\r\n}\r\n\r\nfunction _resizeListener(graphRef: React.RefObject<HTMLDivElement | null>) {\r\n  if (graphRef?.current) {\r\n    const bounds = graphRef.current.getBoundingClientRect();\r\n    graphRef.current.style.height = `${window.innerHeight - bounds.top - 40}px`;\r\n  }\r\n}\r\n\r\ninterface Props {\r\n  activeGraph: ProductionGraph | null,\r\n  errorMessage: string,\r\n}\r\n\r\nconst ProductionGraphTab = (props: Props) => {\r\n  const { activeGraph, errorMessage } = props;\r\n  const [doFirstRender, setDoFirstRender] = useState(false);\r\n  const graphRef = useRef<HTMLDivElement | null>(null);\r\n  const cyRef = useRef<Cytoscape.Core | null>(null);\r\n\r\n  function setGraphRef(instance: HTMLDivElement | null) {\r\n    if (instance && !graphRef.current) {\r\n      graphRef.current = instance;\r\n      _resizeListener(graphRef);\r\n      setDoFirstRender(true);\r\n    }\r\n  }\r\n\r\n  function setCyRef(instance: Cytoscape.Core | null) {\r\n    if (instance && cyRef.current !== instance) {\r\n      cyRef.current = instance;\r\n      setCyListeners(cyRef.current);\r\n    }\r\n  }\r\n\r\n  function setCyListeners(cy: Cytoscape.Core) {\r\n    cy.on('select', 'node', function (e) {\r\n      e.target.addClass('selected');\r\n      e.target.outgoers('edge').addClass('selected').addClass('selected-outgoing');\r\n      e.target.incomers('edge').addClass('selected').addClass('selected-incoming');\r\n    });\r\n\r\n    cy.on('unselect', 'node', function (e) {\r\n      e.target.removeClass('selected');\r\n      e.target.outgoers('edge').removeClass('selected').removeClass('selected-outgoing');\r\n      e.target.incomers('edge').removeClass('selected').removeClass('selected-incoming');\r\n    });\r\n\r\n    cy.on('grab', 'node', function (e) {\r\n      e.target.addClass('grabbed');\r\n      e.target.outgoers('edge').addClass('grabbed').addClass('grabbed-outgoing');\r\n      e.target.incomers('edge').addClass('grabbed').addClass('grabbed-incoming');\r\n    });\r\n\r\n    cy.on('free', 'node', function (e) {\r\n      e.target.removeClass('grabbed');\r\n      e.target.outgoers('edge').removeClass('grabbed').removeClass('grabbed-outgoing');\r\n      e.target.incomers('edge').removeClass('grabbed').removeClass('grabbed-incoming');\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    function resizeListener() {\r\n      _resizeListener(graphRef);\r\n    }\r\n    window.addEventListener('resize', resizeListener);\r\n    return () => {\r\n      window.removeEventListener('resize', resizeListener);\r\n    }\r\n  }, []);\r\n\r\n  const graphProps = useMemo<any>(() => {\r\n    if (activeGraph == null) {\r\n      return null;\r\n    }\r\n\r\n    const key = nanoid();\r\n    const elements: any[] = [];\r\n\r\n    Object.entries(activeGraph.nodes).forEach(([key, node]) => {\r\n      elements.push({\r\n        group: 'nodes',\r\n        data: {\r\n          id: node.id,\r\n          label: getNodeLabel(node),\r\n        },\r\n        classes: getNodeClasses(node),\r\n      });\r\n    });\r\n    activeGraph.edges.forEach((edge) => {\r\n      elements.push({\r\n        group: 'edges',\r\n        data: {\r\n          source: edge.from,\r\n          target: edge.to,\r\n          label: getEdgeLabel(edge),\r\n        },\r\n        classes: edge.from === edge.to ? ['loop'] : undefined,\r\n      });\r\n    });\r\n    \r\n    return { key, elements };\r\n  }, [activeGraph]);\r\n\r\n  return (\r\n    <GraphContainer fluid ref={setGraphRef}>\r\n      {\r\n        doFirstRender && (\r\n          graphProps != null\r\n          ? (\r\n              <GraphVisualizer\r\n                key={graphProps.key}\r\n                elements={graphProps.elements}\r\n                layout={layout}\r\n                stylesheet={stylesheet}\r\n                boxSelectionEnabled={false}\r\n                wheelSensitivity={0.13}\r\n                maxZoom={3.0}\r\n                minZoom={0.1}\r\n                style={{ position: 'absolute', height: '100%', width: '100%', overflow: 'hidden' }}\r\n                cy={setCyRef}\r\n              />\r\n          )\r\n          : (\r\n            <Center style={{ position: 'absolute', height: '100%', width: '100%' }}>\r\n              <Group>\r\n                <AlertCircle color=\"#eee\" size={75} />\r\n                <Group direction='column' style={{ gap: '0px' }}>\r\n                  <Text size='xl'>\r\n                    Could not build graph\r\n                  </Text>\r\n                  {errorMessage\r\n                    ? (\r\n                      <Text size='sm'>\r\n                        {`ERROR: ${errorMessage}`}\r\n                      </Text>\r\n                    )\r\n                    : null}\r\n                </Group>\r\n              </Group>\r\n            </Center>\r\n          )\r\n        )\r\n      }\r\n    </GraphContainer>\r\n  );\r\n};\r\n\r\nexport default ProductionGraphTab;\r\n\r\nconst GraphContainer = styled(Container)`\r\n  position: relative;\r\n  min-height: 600px;\r\n  min-width: 800px;\r\n  border: 1px solid #fff;\r\n  border-top-width: 0px;\r\n  margin: 0px;\r\n  padding: 0px;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Title, List, Divider, Text, Container, Group } from '@mantine/core';\r\nimport { buildings, items } from '../../../../data';\r\nimport { Report } from '../../../../utilities/production-solver';\r\nimport { AlertCircle } from 'react-feather';\r\n\r\nfunction formatFloat(n: number) {\r\n  return n.toLocaleString(undefined, { maximumFractionDigits: 3 });\r\n}\r\n\r\ninterface Props {\r\n  report: Report | null,\r\n}\r\n\r\nconst ReportTab = (props: Props) => {\r\n  const { report } = props;\r\n\r\n  // TODO: Use stylesheets ya dingus\r\n  function renderReport() {\r\n    return (\r\n      <>\r\n        <Title order={2}>Statistics</Title>\r\n        <SDivider />\r\n        <List listStyleType='none'>\r\n          <List.Item>\r\n            <SmallerTitle order={3}>Points Produced</SmallerTitle>\r\n            <Text>{formatFloat(report!.pointsProduced)} per min</Text>\r\n            <SDivider />\r\n          </List.Item>\r\n          <List.Item>\r\n            <SmallerTitle order={3}>Estimated Power {report!.powerUsageEstimate < 0 ? 'Production' : 'Usage'}</SmallerTitle>\r\n            <Text>{formatFloat(Math.abs(report!.powerUsageEstimate))} MW</Text>\r\n            <SDivider />\r\n          </List.Item>\r\n          <List.Item>\r\n            <SmallerTitle order={3}>Resource Usage Score</SmallerTitle>\r\n            <Text>{formatFloat(report!.resourceEfficiencyScore)}</Text>\r\n            <SDivider />\r\n          </List.Item>\r\n          <List.Item>\r\n            <SmallerTitle order={3}>Total Build Area</SmallerTitle>\r\n            <Text>{formatFloat(report!.totalBuildArea)} m²</Text>\r\n            <SDivider />\r\n          </List.Item>\r\n          <List.Item>\r\n            <SmallerTitle order={3}>Estimated Minimal Foundations</SmallerTitle>\r\n            <Text>{formatFloat(report!.estimatedFoundations)} foundations ({formatFloat(report!.estimatedFoundations * 8)} Concrete)</Text>\r\n            <SDivider />\r\n          </List.Item>\r\n        </List>\r\n        <Title order={2} style={{ marginTop: '30px' }}>Buildings</Title>\r\n        <SDivider />\r\n        <List listStyleType='none'>\r\n          {renderBuildingsUsed()}\r\n          <List.Item>\r\n            <Title order={3} style={{ marginBottom: '8px' }}>Total</Title>\r\n            <ListWithLine withPadding listStyleType='none'>\r\n              {\r\n                Object.entries(report!.totalMaterialCost)\r\n                  .sort((a, b) => {\r\n                    if (a[1] > b[1]) return -1;\r\n                    if (a[1] < b[1]) return 1;\r\n                    return 0;\r\n                  })\r\n                  .map(([itemKey, count]) => (\r\n                    <List.Item key={itemKey}>\r\n                      <ItemLabel>{items[itemKey].name}</ItemLabel> <Count>x{formatFloat(count)}</Count>\r\n                    </List.Item>\r\n                  ))\r\n              }\r\n            </ListWithLine>\r\n          </List.Item>\r\n        </List>\r\n      </>\r\n    );\r\n  }\r\n\r\n  function renderBuildingsUsed() {\r\n    return Object.entries(report!.buildingsUsed)\r\n      .sort((a, b) => {\r\n        if (a[1].count > b[1].count) return -1;\r\n        if (a[1].count < b[1].count) return 1;\r\n        return 0;\r\n      })\r\n      .map(([buildingKey, usageInfo]) => (\r\n      <List.Item key={buildingKey} style={{ paddingBottom: '10px' }}>\r\n        <Title order={3} style={{ marginBottom: '8px' }}>\r\n          {buildings[buildingKey].name} <Count>x{formatFloat(usageInfo.count)}</Count>\r\n        </Title>\r\n        <ListWithLine withPadding listStyleType='none' style={{ marginBottom: '10px' }}>\r\n          {\r\n            Object.entries(usageInfo.materialCost)\r\n              .sort((a, b) => {\r\n                if (a[1] > b[1]) return -1;\r\n                if (a[1] < b[1]) return 1;\r\n                return 0;\r\n              })\r\n              .map(([itemKey, count]) => (\r\n                <List.Item key={itemKey}>\r\n                  <ItemLabel>{items[itemKey].name}</ItemLabel>  <Count>x{formatFloat(count)}</Count>\r\n                </List.Item>\r\n              ))\r\n          }\r\n        </ListWithLine>\r\n      </List.Item>\r\n    ))\r\n  }\r\n  \r\n  return (\r\n    <ReportContainer fluid>\r\n      {\r\n      !report\r\n        ? (\r\n          <Group style={{ height: '150px', justifyContent: 'flex-start' }}>\r\n            <AlertCircle color=\"#eee\" size={50} />\r\n            <Text style={{ fontSize: '32px' }}>\r\n              No data available\r\n            </Text>\r\n          </Group>\r\n        )\r\n        : renderReport()\r\n      }\r\n    </ReportContainer>\r\n  );\r\n};\r\n\r\nexport default ReportTab;\r\n\r\nconst ReportContainer = styled(Container)`\r\n  padding: 10px;\r\n  padding-bottom: 15px;\r\n`;\r\n\r\nconst SDivider = styled(Divider)`\r\n  margin: 10px 0px;\r\n`;\r\n\r\nconst SmallerTitle = styled(Title)`\r\n  font-size: 19px;\r\n`;\r\n\r\nconst ItemLabel = styled.span`\r\n  font-size: 17px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Count = styled.span`\r\n  font-size: 15px;\r\n  margin-left: 3px;\r\n`;\r\n\r\nconst ListWithLine = styled(List)`\r\n  position: relative;\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0px;\r\n    bottom: 0px;\r\n    left: 12px;\r\n    width: 3px;\r\n    background: ${({ theme }) => theme.colors.background[3]};\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Container, MantineTheme, Tabs, useMantineTheme } from '@mantine/core';\r\nimport { Share2, Edit } from 'react-feather';\r\nimport ProductionGraphTab from './ProductionGraphTab';\r\nimport ReportTab from './ReportTab';\r\nimport { SolverResults } from '../../../utilities/production-solver';\r\nimport Card from '../../../components/Card';\r\n\r\ninterface Props {\r\n  solverResults: SolverResults | null;\r\n}\r\n\r\nconst tabSx = (theme: MantineTheme) => ({\r\n  '&.mantine-Tabs-tabControl': {\r\n    minWidth: '200px',\r\n  },\r\n});\r\n\r\nconst PlannerResults = (props: Props) => {\r\n  const { solverResults } = props;\r\n  const theme = useMantineTheme();\r\n  return (\r\n    <Tabs variant='outline'>\r\n      <Tabs.Tab label='Production Graph' icon={<Share2 size={18} />} sx={tabSx}>\r\n        <Container fluid padding={0}>\r\n          <ProductionGraphTab activeGraph={solverResults?.productionGraph || null} errorMessage={solverResults?.error || ''} />\r\n        </Container>\r\n      </Tabs.Tab>\r\n      <Tabs.Tab label='Report' icon={<Edit size={18} />} sx={tabSx}>\r\n        <Card style={{ paddingLeft: '10px', background: theme.colors.background[0] }}>\r\n          <ReportTab report={solverResults?.report || null} />\r\n        </Card>\r\n      </Tabs.Tab>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default PlannerResults;\r\n","import React from 'react';\r\nimport { Divider, Text, Title } from '@mantine/core';\r\nimport { useLocalStorageValue } from '@mantine/hooks';\r\nimport { useProductionContext } from '../../contexts/production';\r\nimport Drawer from '../Drawer';\r\nimport PlannerOptions from './PlannerOptions';\r\nimport PlannerResults from './PlannerResults';\r\nimport Card from '../../components/Card';\r\n\r\nconst Factory = () => {\r\n  const [drawerOpen, setDrawerOpen] = useLocalStorageValue<'false' | 'true'>({ key: 'drawer-open', defaultValue: 'false' });\r\n  const ctx = useProductionContext();\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ marginBottom: '25px' }}>\r\n        <Title order={2}>\r\n          Welcome back &lt;Engineer ID #{ctx.engineerId}&gt;\r\n        </Title>\r\n        <Text>\r\n          This tool has been created to increase the efficiency of your work towards Project Assembly.<br />\r\n          We hope that you will continue to be effective.\r\n        </Text>\r\n        <Divider style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n        <Text style={{ fontSize: '13px' }}>\r\n          {ctx.ficsitTip}\r\n        </Text>\r\n      </Card>\r\n      <PlannerResults solverResults={ctx.solverResults} />\r\n      <Drawer open={drawerOpen === 'true'} onToggle={(value) => { setDrawerOpen(value ? 'true' : 'false'); }}>\r\n        <PlannerOptions />\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Factory;\r\n","import React from 'react';\r\nimport { ProductionProvider } from '../../contexts/production';\r\nimport Factory from './Factory';\r\n\r\nconst ProductionPlanner = () => {\r\n  return (\r\n    <ProductionProvider>\r\n      <Factory />\r\n    </ProductionProvider>\r\n  );\r\n};\r\n\r\nexport default ProductionPlanner;\r\n","import React from 'react';\r\n\r\nconst PaypalButton = () => {\r\n  return (\r\n    <form action=\"https://www.paypal.com/donate\" method=\"post\" target=\"_blank\" style={{ opacity: '0.8' }}>\r\n      <input type=\"hidden\" name=\"business\" value=\"EN9ZT88D25SRS\" />\r\n      <input type=\"hidden\" name=\"no_recurring\" value=\"1\" />\r\n      <input type=\"hidden\" name=\"item_name\" value=\"Wow, I didn't expect anyone to click this button! It honestly means a lot! I will put this money towards a nice coffee :P\" />\r\n      <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\r\n      <input type=\"image\" src=\"https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif\" name=\"submit\" title=\"PayPal - The safer, easier way to pay online!\" alt=\"Donate with PayPal button\" />\r\n      <img alt=\"\" src=\"https://www.paypal.com/en_US/i/scr/pixel.gif\" width=\"1\" height=\"1\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PaypalButton;\r\n","import React from 'react';\r\nimport { Anchor, AnchorProps } from '@mantine/core';\r\n\r\nconst ExternalLink = (props: AnchorProps<React.ElementType<any>>) => {\r\n  return <Anchor target='_blank' rel='noopener noreferrer' {...props} />;\r\n};\r\n\r\nexport default ExternalLink;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppShell, Header, Container, useMantineTheme, Anchor } from '@mantine/core';\r\nimport SiteHeader from './SiteHeader';\r\nimport ProductionPlanner from '../ProductionPlanner';\r\nimport PaypalButton from '../../components/PaypalButton';\r\nimport ExternalLink from '../../components/ExternalLink';\r\n\r\nconst Main = () => {\r\n  const theme = useMantineTheme();\r\n  return (\r\n    <AppShell\r\n      padding='md'\r\n      header={<SHeader height={theme.other.headerHeight} padding='sm'><SiteHeader /></SHeader>}\r\n    >\r\n      <MainContainer fluid>\r\n        <ProductionPlanner />\r\n        <Footer>\r\n          <FooterContent>\r\n            Made with ♥ by <ExternalLink href='https://github.com/lydianlights'>LydianLights</ExternalLink> -\r\n            Questions or bugs? File an <ExternalLink href='https://github.com/lydianlights/yet-another-factory-planner/issues'>issue on github</ExternalLink> or <ExternalLink href='https://discord.gg/p7e9ZzRHCm'>check out the discord</ExternalLink>\r\n          </FooterContent>\r\n          <PaypalButton />\r\n        </Footer>\r\n      </MainContainer>\r\n    </AppShell>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n\r\nconst SHeader = styled(Header)`\r\n  position: fixed;\r\n  margin: 0px;\r\n  padding: 10px;\r\n  background: ${({ theme }) => theme.colors.primary[6]};\r\n  overflow: hidden;\r\n`;\r\n\r\nconst MainContainer = styled(Container)`\r\n  margin-left: ${({ theme }) => theme.other.pageLeftMargin};\r\n  margin-top: ${({ theme }) => theme.other.headerHeight};\r\n  padding-left: 0px;\r\n`;\r\n\r\nconst Footer = styled(Container)`\r\n  margin-top: 40px;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst FooterContent = styled(Container)`\r\n  padding: 10px 20px;\r\n  color: ${({ theme }) => theme.white};\r\n  /* background: rgba(0, 0, 0, 0.3); */\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/stripe-bg.ddc4de7e.png\";","import { createGlobalStyle } from \"styled-components\";\r\nimport bgImage from './assets/stripe-bg.png';\r\n\r\nconst GlobalStylesheet = createGlobalStyle<any>`\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: ${({ theme }) => theme.fontFamily};\r\n    background: url(${bgImage});\r\n  }\r\n\r\n  #root {\r\n    min-height: 100vh;\r\n  }\r\n  \r\n  html,\r\n  .custom-scrollbar {\r\n    scrollbar-color: ${({ theme }) => `${theme.other.scrollbarThumbColor} ${theme.other.scrollbarTrackColor}`};\r\n\r\n    & > * {\r\n      scrollbar-color: initial; // prevent inheritance\r\n    }\r\n\r\n    ::-webkit-scrollbar {\r\n      width: auto;\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n      background-color: ${({ theme }) => theme.other.scrollbarTrackColor};\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n      background-color: ${({ theme }) => theme.other.scrollbarThumbColor};\r\n    }\r\n\r\n    ::-webkit-scrollbar-corner {\r\n      background-color: ${({ theme }) => theme.other.scrollbarTrackColor};\r\n    }\r\n    \r\n    ::-webkit-scrollbar-button:single-button {\r\n      background-color: ${({ theme }) => theme.other.scrollbarTrackColor};\r\n      display: block;\r\n      height: auto;\r\n      width: auto;\r\n      background-size: 10px;\r\n      background-repeat: no-repeat;\r\n      background-position: center center;\r\n    }\r\n\r\n    // Up\r\n    ::-webkit-scrollbar-button:single-button:vertical:decrement {\r\n      background-image: url(\"data:image/svg+xml;base64,${btoa('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill=\"#eee\"><polygon points=\"50,20 100,75 0,75 Z\"/></svg>')}\");\r\n    }\r\n\r\n    // Down\r\n    ::-webkit-scrollbar-button:single-button:vertical:increment {\r\n      background-image: url(\"data:image/svg+xml;base64,${btoa('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill=\"#eee\"><polygon points=\"50,75 100,20 0,20 Z\"/></svg>')}\");\r\n    }\r\n\r\n    // Left\r\n    ::-webkit-scrollbar-button:single-button:horizontal:decrement {\r\n      background-image: url(\"data:image/svg+xml;base64,${btoa('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill=\"#eee\"><polygon points=\"20,50 75,100 75,0 Z\"/></svg>')}\");\r\n    }\r\n\r\n    // Right\r\n    ::-webkit-scrollbar-button:single-button:horizontal:increment {\r\n      background-image: url(\"data:image/svg+xml;base64,${btoa('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill=\"#eee\"><polygon points=\"75,50 20,100 20,0 Z\"/></svg>')}\");\r\n    }\r\n  }\r\n`;\r\n\r\nexport default GlobalStylesheet;\r\n","import React from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { MantineProvider, useMantineTheme } from '@mantine/core';\r\nimport Main from './containers/Main';\r\nimport { DrawerProvider } from './contexts/drawer';\r\nimport { theme, styles } from './theme';\r\nimport GlobalStylesheet from './global-stylesheet';\r\n\r\nfunction App() {\r\n  return (\r\n    <MantineProvider\r\n      theme={theme}\r\n      styles={styles}\r\n    >\r\n      <ThemeTransfer />\r\n    </MantineProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst ThemeTransfer = () => {\r\n  const mergedTheme = useMantineTheme();\r\n  return (\r\n    <ThemeProvider theme={mergedTheme}>\r\n      <GlobalStylesheet />\r\n      <DrawerProvider>\r\n        <Main />\r\n      </DrawerProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}