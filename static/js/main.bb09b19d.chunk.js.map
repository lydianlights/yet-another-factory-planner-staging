{"version":3,"sources":["assets/satisfactory_logo_full_color_small.png","components/SocialIcon/index.tsx","containers/Main/SiteHeader/index.tsx","data/index.ts","utilities/error/GraphError/index.ts","utilities/production-solver/index.ts","contexts/production/state-decoders/v1_U5.ts","contexts/production/state-decoders/v2_U5.ts","contexts/production/state-decoders/v3_U5.ts","contexts/production/reducer.tsx","contexts/production/index.tsx","hooks/usePrevious.ts","contexts/drawer/index.tsx","components/Portal/index.tsx","containers/Drawer/index.tsx","components/Card/index.tsx","components/Section/index.tsx","components/TrashButton/index.tsx","containers/ProductionPlanner/PlannerOptions/ProductionTab/index.tsx","components/LabelWithTooltip/index.tsx","containers/ProductionPlanner/PlannerOptions/InputsTab/index.tsx","containers/ProductionPlanner/PlannerOptions/RecipesTab/index.tsx","containers/ProductionPlanner/PlannerOptions/index.tsx","theme.ts","utilities/number/index.ts","components/GraphTooltip/index.tsx","containers/ProductionPlanner/PlannerResults/ProductionGraphTab/index.tsx","containers/ProductionPlanner/PlannerResults/ReportTab/index.tsx","containers/ProductionPlanner/PlannerResults/index.tsx","containers/ProductionPlanner/Factory.tsx","containers/ProductionPlanner/index.tsx","components/PaypalButton/index.tsx","components/ExternalLink/index.tsx","containers/ErrorBoundary/index.tsx","containers/Main/index.tsx","assets/stripe-bg.png","global-stylesheet.ts","App.tsx","index.tsx"],"names":["SocialIcon","props","href","icon","SAnchor","target","rel","styled","Anchor","SiteHeader","HeaderContainer","fluid","src","logo","height","alt","MainTitle","BetaTag","SocialLinks","faGithub","fontSize","faDiscord","faTwitter","Container","theme","other","pageLeftMargin","Title","div","Group","buildings","buildingsRaw","recipes","recipesRaw","resources","resourcesRaw","items","itemsRaw","handGatheredItems","handGatheredItemsRaw","GraphError","msg","helpText","Error","EPSILON","MAXIMIZE_WEIGHT","RATE_TARGET_KEY","NODE_TYPE","POINTS_ITEM_KEY","ProductionSolver","options","globalWeights","inputs","rateTargets","maximizeTargets","hasPointsTarget","allowedRecipes","allowedItems","this","Object","entries","forEach","recipeKey","recipeInfo","ingredients","i","itemClass","products","p","Number","weightingOptions","power","complexity","validateNumber","maxGlobalWeight","Math","max","inputResources","item","itemKey","amount","unlimited","Infinity","value","weight","type","maxResourceWeight","values","map","inputItems","allowHandGatheredItems","keys","perMinTargets","recipeTargets","productionItems","isPoints","mode","recipe","existingTarget","find","t","key","priority","push","perMinute","sort","a","b","length","num","isNaN","timestamp","performance","now","loadGLPK","glpk","productionSolverPass","productionSolution","productionGraph","generateProductionGraph","remainingInputs","inputKey","input","inputNode","nodes","n","usedAmount","multiplier","diff","solution","report","generateProductionReport","computeTime","error","itemInfo","isFicsmas","sinkPoints","targetKey","model","name","objective","direction","GLP_MIN","vars","subjectTo","binaries","doPoints","pointsVars","buildingInfo","producedIn","powerScore","buildingsScore","resourceScore","ingredient","inputInfo","coef","bnds","GLP_LO","ub","lb","pointCoef","product","getItemPoints","intrinsicPoints","targetInfo","GLP_UP","NaN","v","existingVar","ov","binKey","binVars","usedInRecipes","producedFromRecipes","outputInfo","solve","msglev","GLP_MSG_OFF","tmlim","time","result","status","GLP_OPT","GLP_FEAS","val","itemProductionTotals","graph","edges","producedBy","usedBy","id","nanoid","productionTotals","j","nextDemand","usageInfo","usageNode","productionInfo","productionNode","outputRecipe","recipeAmount","itemNode","from","to","productionRate","nodeType","pointsProduced","powerUsageEstimate","production","extraction","generators","total","resourceEfficiencyScore","totalBuildArea","estimatedFoundations","buildingsUsed","totalMaterialCost","node","numExtractors","ceil","count","materialCost","buildCost","quantity","buildingKey","area","SEP2","getItemBySlug","slug","itemEntry","getModeBySlug","recipeEntry","ORDERED_RESOURCES","getInitialInputResources","data","String","maxExtraction","relativeValue","aIndex","findIndex","r","bIndex","getInitialAllowedRecipes","recipeMap","isAlternate","getInitialState","version","reducer","state","action","newProductionItems","filter","newItem","nextPriority","newInputItems","newInputResources","active","newWeightingOptions","newAllowedRecipes","encodedState","URLSearchParams","window","location","search","get","stateStr","substring","newState","fields","split","allowedRecipesBits","BigInt","toString","padStart","parseInt","productionItemsStrings","str","inputItemsStrings","inputResourcesStrings","resourceOptions","weightingOptionsStrings","decodeState_v1_U5","decodeState_v2_U5","decodeState_v3_U5","decodeState","e","console","getItemSlug","encodeState","join","productionItemsField","getModeSlug","inputItemsField","inputResourcesField","seed","floor","Date","getTime","rng","seedrandom","TIPS","TIP_INDEX","TIP","ID","random","_handleCalculateFactory","_","debounce","setSolverResults","setCalculating","solver","exec","results","prevState","log","leading","trailing","ProductionContext","createContext","useProductionContext","ctx","useContext","displayName","ProductionProvider","children","useReducer","dispatch","useState","loadedFromQuery","setLoadedFromQuery","firstCalculationDone","setFirstCalculationDone","useLocalStorageValue","defaultValue","autoCalculate","setAutoCalculate","calculating","solverResults","engineerId","ref","useRef","useEffect","current","usePrevious","autoCalculateBool","handleCalculateFactory","useCallback","handleSetAutoCalculate","checked","history","replaceState","pathname","ctxValue","useMemo","calculate","ficsitTip","Provider","DrawerContext","DrawerProvider","rootNode","setRootNode","useMantineTheme","DrawerRoot","topOffset","headerHeight","drawerZIndex","Portal","forwardRef","createRoot","style","document","createElement","body","append","remove","useLayoutEffect","createPortal","Drawer","open","onToggle","fullyClosed","setFullyClosed","tooltipDismissed","setTooltipDismissed","useDrawerContext","showTooltip","DrawerDimmer","onClick","DrawerContainer","onTransitionEnd","DrawerToggle","ToggleLabel","ToggleLabelText","ToggleLabelIcon","Tooltip","TooltipText","TooltipConfirmContainer","TooltipConfirm","stopPropagation","DrawerContent","className","drawerWidth","colors","background","primary","UnstyledButton","white","span","Paper","info","Text","Card","Section","SectionDescription","TrashButton","Button","color","width","padding","flex","size","itemOptions","label","unshift","baseModeOptions","priorityOptions","Array","fill","reverse","ProductionTab","order","modeOptions","replace","ItemContainer","Row","Select","placeholder","clearable","searchable","onChange","position","top","TextInput","min","step","currentTarget","Divider","marginTop","marginBottom","LabelWithTooltip","tooltip","Label","withArrow","wrapLines","arrowSize","InputsTab","disabled","Checkbox","grow","renderWeightInputs","fontWeight","cleanAltNameRegex","baseRecipes","altRecipes","RecipesTab","searchValue","setSearchValue","renderRecipeList","recipeList","component","List","Item","renderedBaseRecipes","renderedAltRecipes","renderRecipeOptions","alternates","filteredRecipes","toLowerCase","includes","filteredRecipeKeys","listStyleType","spacing","Grid","Col","VDivider","PlannerOptions","paddingTop","marginRight","Switch","Tabs","variant","Tab","TabContainer","defaultFont","baseSat","baseLight","selectSat","selectLight","graphColors","resource","base","selected","handGathered","sideProduct","finalProduct","nuclear","edge","line","incoming","outgoing","primaryColor","fontFamily","radius","xs","sm","md","lg","xl","headings","sizes","h1","lineHeight","h2","h3","h4","h5","h6","tooltipZIndex","scrollbarTrackColor","scrollbarThumbColor","styles","AppShell","root","minHeight","borderRadius","hovered","cursor","borderWidth","borderColor","horizontal","borderTopColor","backgroundColor","opacity","tabLabel","tabIcon","tabActive","borderBottomWidth","borderBottomLeftRadius","borderBottomRightRadius","border","arrow","borderBottom","borderRight","truncateFloat","places","toFixed","GraphTooltip","currentNode","zIndex","pointerEvents","primaryProduct","totalBuildings","clockPercentage","itemsPerMinPerBuilding","TooltipTitle","TooltipDivider","withPadding","renderRecipeInfo","renderWaterExtractorInfo","baseNumExtractors","Table","renderOilExtractorInfo","baseNumMiners","renderMinerInfo","renderInner","table","Cytoscape","use","popper","klay","warnings","layout","edgeRouting","nodePlacement","edgeSpacingFactor","inLayerSpacingFactor","thoroughness","stylesheet","selector","NODE_COLOR_CLASS","getNodeLabel","amountText","getNodeClasses","classes","getEdgeLabel","_resizeListener","graphRef","bounds","getBoundingClientRect","innerHeight","ProductionGraphTab","resultsGraph","graphError","doFirstRender","setDoFirstRender","cyRef","popupRef","popperRef","popupNode","setPopupNode","deactivatePopper","cy","getElementById","nodeId","off","destroy","resizeListener","addEventListener","removeEventListener","graphProps","elements","group","source","undefined","GraphContainer","instance","boxSelectionEnabled","wheelSensitivity","maxZoom","minZoom","overflow","on","addClass","outgoers","incomers","removeClass","content","placement","update","activatePopper","Center","gap","maxWidth","message","formatFloat","toLocaleString","maximumFractionDigits","ReportTab","ReportContainer","SDivider","SmallerTitle","abs","paddingBottom","Count","ListWithLine","ItemLabel","justifyContent","tabSx","minWidth","PlannerResults","sx","paddingLeft","Factory","drawerOpen","setDrawerOpen","ProductionPlanner","PaypalButton","method","title","ExternalLink","ErrorBoundary","hasError","React","Component","Main","header","SHeader","MainContainer","Footer","FooterContent","Header","GlobalStylesheet","createGlobalStyle","bgImage","btoa","App","MantineProvider","ThemeTransfer","mergedTheme","ReactDOM","render"],"mappings":"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","file":"static/js/main.bb09b19d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/satisfactory_logo_full_color_small.da5e9783.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Anchor } from '@mantine/core';\r\n\r\ninterface Props {\r\n  href: string;\r\n  icon: React.ReactNode;\r\n}\r\n\r\nconst SocialIcon = (props: Props) => {\r\n  const { href, icon } = props;\r\n  return (\r\n    <SAnchor href={href} target='_blank' rel='noopener noreferrer'>\r\n      {icon || null}\r\n    </SAnchor>\r\n  );\r\n};\r\n\r\nexport default SocialIcon;\r\n\r\nconst SAnchor = styled(Anchor)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #f0f0f0;\r\n\r\n  &:hover {\r\n    color: #ddd;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Title, Container, Group } from '@mantine/core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub, faTwitter, faDiscord } from '@fortawesome/free-brands-svg-icons';\r\nimport logo from '../../../assets/satisfactory_logo_full_color_small.png';\r\nimport SocialIcon from '../../../components/SocialIcon';\r\n\r\nconst SiteHeader = () => {\r\n  return (\r\n    <HeaderContainer fluid>\r\n      <img src={logo} height={42} alt='Satisfactory logo' />\r\n      <MainTitle>[Yet Another Factory Planner]</MainTitle>\r\n      <BetaTag>(BETA)</BetaTag>\r\n      <SocialLinks>\r\n        <SocialIcon href='https://github.com/lydianlights/yet-another-factory-planner' icon={<FontAwesomeIcon icon={faGithub} fontSize={32} />} />\r\n        <SocialIcon href='https://discord.gg/p7e9ZzRHCm' icon={<FontAwesomeIcon icon={faDiscord} fontSize={32} />} />\r\n        <SocialIcon href='https://twitter.com/LydianLights' icon={<FontAwesomeIcon icon={faTwitter} fontSize={32} />} />\r\n      </SocialLinks>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default SiteHeader;\r\n\r\nconst HeaderContainer = styled(Container)`\r\n  display: flex;\r\n  margin-left: ${({ theme }) => theme.other.pageLeftMargin};\r\n  padding: 0px;\r\n`;\r\n\r\nconst MainTitle = styled(Title)`\r\n  position: relative;\r\n  top: 1px;\r\n  font-size: 32px;\r\n  color: #fff;\r\n  margin-left: 25px;\r\n  white-space: nowrap;\r\n  font-family: 'Indie Flower', sans-serif;\r\n`;\r\n\r\nconst BetaTag = styled.div`\r\n  position: relative;\r\n  left: 7px;\r\n  top: 3px;\r\n  font-size: 24px;\r\n  color: #fff;\r\n  font-family: 'Fjalla One', sans-serif;\r\n  transform: rotate(20deg);\r\n`;\r\n\r\nconst SocialLinks = styled(Group)`\r\n  display: flex;\r\n  margin-left: auto;\r\n  margin-right: 30px;\r\n`;\r\n","import buildingsRaw from './json/buildings.json';\r\nimport recipesRaw from './json/recipes.json';\r\nimport resourcesRaw from './json/resources.json';\r\nimport itemsRaw from './json/items.json';\r\nimport handGatheredItemsRaw from './json/handGatheredItems.json';\r\n\r\n\r\nexport type ItemRate = {\r\n  itemClass: string,\r\n  perMinute: number,\r\n};\r\n\r\nexport type ItemQuantity = {\r\n  itemClass: string,\r\n  quantity: number,\r\n};\r\n\r\nexport type BuildingsInfo = {\r\n  slug: string,\r\n  name: string,\r\n  power: number,\r\n  area: number,\r\n  buildCost: ItemQuantity[],\r\n  isFicsmas: boolean,\r\n};\r\n\r\nexport type RecipeInfo = {\r\n  slug: string,\r\n  name: string,\r\n  isAlternate: boolean,\r\n  ingredients: ItemRate[],\r\n  products: ItemRate[],\r\n  producedIn: string,\r\n  isFicsmas: boolean,\r\n};\r\n\r\nexport type ResourceInfo = {\r\n  itemClass: string,\r\n  maxExtraction: number | null,\r\n  relativeValue: number,\r\n};\r\n\r\nexport type ItemInfo = {\r\n  slug: string,\r\n  name: string,\r\n  sinkPoints: number,\r\n  usedInRecipes: string[],\r\n  producedFromRecipes: string[],\r\n  isFicsmas: boolean,\r\n};\r\n\r\nexport type BuildingMap = { [key in keyof typeof buildingsRaw]: BuildingsInfo } & { [key: string]: BuildingsInfo };\r\nexport type RecipeMap = { [key in keyof typeof recipesRaw]: RecipeInfo } & { [key: string]: RecipeInfo };\r\nexport type ResourceMap = { [key in keyof typeof resourcesRaw]: ResourceInfo } & { [key: string]: ResourceInfo };\r\nexport type ItemMap = { [key in keyof typeof itemsRaw]: ItemInfo } & { [key: string]: ItemInfo };\r\nexport type HandGatheredItemMap = { [key in keyof typeof handGatheredItemsRaw]: string } & { [key: string]: string };\r\n\r\nexport const buildings = (buildingsRaw as BuildingMap);\r\nexport const recipes = (recipesRaw as RecipeMap);\r\nexport const resources = (resourcesRaw as ResourceMap);\r\nexport const items = (itemsRaw as ItemMap);\r\nexport const handGatheredItems = (handGatheredItemsRaw as HandGatheredItemMap);\r\n","export class GraphError extends Error {\r\n  helpText?: string;\r\n  constructor(msg: string, helpText?: string) {\r\n    super(msg);\r\n    this.helpText = helpText;\r\n  }\r\n}\r\n","import loadGLPK, { GLPK, LP, Var } from 'glpk.js';\r\nimport { nanoid } from 'nanoid';\r\nimport { FactoryOptions, RecipeMap } from '../../contexts/production/reducer';\r\nimport { buildings, items, recipes, resources, handGatheredItems } from '../../data';\r\nimport { GraphError } from '../error/GraphError';\r\n\r\nconst EPSILON = 1e-8;\r\nconst MAXIMIZE_WEIGHT = 1e5;\r\nconst TIME_LIMIT = 1.0;\r\nconst RATE_TARGET_KEY = 'RATE_TARGET_PASS';\r\n\r\nexport const NODE_TYPE = {\r\n  FINAL_PRODUCT: 'FINAL_PRODUCT',\r\n  SIDE_PRODUCT: 'SIDE_PRODUCT',\r\n  INPUT_ITEM: 'INPUT_ITEM',\r\n  HAND_GATHERED_RESOURCE: 'HAND_GATHERED_RESOURCE',\r\n  RESOURCE: 'RESOURCE',\r\n  RECIPE: 'RECIPE',\r\n};\r\n\r\nexport const POINTS_ITEM_KEY = 'POINTS_ITEM_KEY';\r\n\r\ntype Inputs = {\r\n  [key: string]: {\r\n    amount: number,\r\n    weight: number,\r\n    type: string,\r\n  }\r\n};\r\n\r\ntype RateTargets = {\r\n  [key: string]: {\r\n    value: number,\r\n    recipe: string | null,\r\n    isPoints: boolean,\r\n  }\r\n};\r\n\r\ntype MaximizeTargets = { key: string, priority: number };\r\n\r\ntype GlobalWeights = {\r\n  resources: number,\r\n  power: number,\r\n  complexity: number,\r\n  buildings: number\r\n};\r\n\r\ntype ProductionSolution = { [key: string]: number };\r\ntype ProductionAmount = { recipeKey: string, amount: number };\r\ntype ItemProductionTotals = {\r\n  [key: string]: {\r\n    producedBy: ProductionAmount[],\r\n    usedBy: ProductionAmount[],\r\n  }\r\n};\r\n\r\nexport type SolverResults = {\r\n  productionGraph: ProductionGraph | null,\r\n  report: Report | null,\r\n  timestamp: number,\r\n  computeTime: number,\r\n  error: GraphError | null,\r\n};\r\n\r\nexport type Report = {\r\n  pointsProduced: number,\r\n  powerUsageEstimate: {\r\n    production: number,\r\n    extraction: number,\r\n    generators: number,\r\n    total: number,\r\n  },\r\n  resourceEfficiencyScore: number,\r\n  totalBuildArea: number,\r\n  estimatedFoundations: number,\r\n  buildingsUsed: {\r\n    [key: string]: {\r\n      count: number,\r\n      materialCost: {\r\n        [key: string]: number,\r\n      }\r\n    },\r\n  },\r\n  totalMaterialCost: {\r\n    [key: string]: number,\r\n  },\r\n}\r\n\r\nexport type ProductionGraph = {\r\n  nodes: { [key: string]: GraphNode },\r\n  edges: GraphEdge[],\r\n};\r\n\r\nexport type GraphNode = {\r\n  id: string,\r\n  key: string,\r\n  type: string,\r\n  multiplier: number,\r\n};\r\n\r\nexport type GraphEdge = {\r\n  key: string,\r\n  from: string,\r\n  to: string,\r\n  productionRate: number,\r\n};\r\n\r\ntype ItemMap = {\r\n  [key: string]: boolean;\r\n}\r\n\r\nexport class ProductionSolver {\r\n  private globalWeights: GlobalWeights;\r\n  private inputs: Inputs;\r\n  private rateTargets: RateTargets;\r\n  private maximizeTargets: MaximizeTargets[];\r\n  private hasPointsTarget: boolean;\r\n  private allowedRecipes: RecipeMap;\r\n  private allowedItems: ItemMap;\r\n\r\n  public constructor(options: FactoryOptions) {\r\n    this.allowedRecipes = options.allowedRecipes;\r\n    this.allowedItems = {};\r\n\r\n    Object.entries(this.allowedRecipes).forEach(([recipeKey, allowed]) => {\r\n      if (!allowed) return;\r\n      const recipeInfo = recipes[recipeKey];\r\n      recipeInfo.ingredients.forEach((i) => {\r\n        this.allowedItems[i.itemClass] = true;\r\n      });\r\n      recipeInfo.products.forEach((p) => {\r\n        this.allowedItems[p.itemClass] = true;\r\n      });\r\n    });\r\n    \r\n    this.globalWeights = {\r\n      resources: Number(options.weightingOptions.resources),\r\n      power: Number(options.weightingOptions.power),\r\n      complexity: Number(options.weightingOptions.complexity),\r\n      buildings: Number(options.weightingOptions.buildings),\r\n    };\r\n\r\n    this.validateNumber(this.globalWeights.resources);\r\n    this.validateNumber(this.globalWeights.power);\r\n    this.validateNumber(this.globalWeights.complexity);\r\n    this.validateNumber(this.globalWeights.buildings);\r\n\r\n    const maxGlobalWeight = Math.max(\r\n      this.globalWeights.resources,\r\n      this.globalWeights.power,\r\n      this.globalWeights.complexity,\r\n      this.globalWeights.buildings\r\n    );\r\n\r\n    this.globalWeights.resources = (this.globalWeights.resources / maxGlobalWeight) + 0.0001;\r\n    this.globalWeights.power = (this.globalWeights.power / maxGlobalWeight);\r\n    this.globalWeights.complexity = 1000 * (this.globalWeights.complexity / maxGlobalWeight);\r\n    this.globalWeights.buildings = (this.globalWeights.buildings / maxGlobalWeight);\r\n\r\n    this.inputs = {};\r\n\r\n    options.inputResources.forEach((item) => {\r\n      const resourceData = resources[item.itemKey];\r\n      if (!resourceData) return;\r\n      const amount = item.unlimited ? Infinity : Number(item.value);\r\n      this.validateNumber(amount);\r\n      if (!amount) return;\r\n      const weight = Number(item.weight);\r\n      this.validateNumber(weight);\r\n      this.inputs[item.itemKey] = {\r\n        amount,\r\n        weight,\r\n        type: NODE_TYPE.RESOURCE,\r\n      }\r\n    });\r\n\r\n    const maxResourceWeight = Math.max(...Object.values(this.inputs).map((i) => i.weight));\r\n    Object.values(this.inputs).forEach((i) => { i.weight /= maxResourceWeight });\r\n\r\n    options.inputItems.forEach((item) => {\r\n      if (!item.itemKey) return;\r\n      const amount = item.unlimited ? Infinity : Number(item.value);\r\n      this.validateNumber(amount);\r\n      if (!amount) return;\r\n      if (!this.inputs[item.itemKey]) {\r\n        this.inputs[item.itemKey] = {\r\n          amount,\r\n          weight: 0,\r\n          type: NODE_TYPE.INPUT_ITEM,\r\n        }\r\n      } else {\r\n        this.inputs[item.itemKey].amount += amount;\r\n      }\r\n    });\r\n\r\n    if (options.allowHandGatheredItems) {\r\n      Object.keys(handGatheredItems).forEach((item) => {\r\n        this.inputs[item] = {\r\n          amount: Infinity,\r\n          weight: 1000,\r\n          type: NODE_TYPE.HAND_GATHERED_RESOURCE,\r\n        };\r\n      });\r\n    }\r\n\r\n    this.inputs['Desc_Gift_C'] = {\r\n      amount: Infinity,\r\n      weight: 1000,\r\n      type: NODE_TYPE.HAND_GATHERED_RESOURCE,\r\n    };\r\n\r\n    this.rateTargets = {};\r\n    this.maximizeTargets = [];\r\n    this.hasPointsTarget = false;\r\n\r\n    const perMinTargets: RateTargets = {};\r\n    const recipeTargets: RateTargets = {};\r\n    options.productionItems.forEach((item) => {\r\n      if (!item.itemKey) return;\r\n      const amount = Number(item.value);\r\n      this.validateNumber(amount);\r\n      if (!amount) return;\r\n      if (this.inputs[item.itemKey]) throw new GraphError('INVALID INPUT', 'You can\\'t set the same item as both an input and an output. Double check your factory settings.');\r\n      const isPoints = item.itemKey === POINTS_ITEM_KEY;\r\n      if (isPoints) {\r\n        this.hasPointsTarget = true;\r\n      }\r\n      switch (item.mode) {\r\n        case 'per-minute':\r\n          if (perMinTargets[item.itemKey]) {\r\n            perMinTargets[item.itemKey].value += amount;\r\n          } else {\r\n            perMinTargets[item.itemKey] = {\r\n              value: amount,\r\n              recipe: null,\r\n              isPoints,\r\n            };\r\n          }\r\n          break;\r\n        case 'maximize':\r\n          const existingTarget = this.maximizeTargets.find((t) => t.key === item.itemKey);\r\n          if (existingTarget) {\r\n            if (existingTarget.priority < amount) {\r\n              existingTarget.priority = amount;\r\n            }\r\n          } else {\r\n            this.maximizeTargets.push({\r\n              key: item.itemKey,\r\n              priority: amount,\r\n            });\r\n          }\r\n          break;\r\n        default:\r\n          const recipeKey = item.mode;\r\n          const recipeInfo = recipes[recipeKey];\r\n          if (recipeInfo) {\r\n            if (!this.allowedRecipes[recipeKey]) {\r\n              throw new GraphError('CANNOT TARGET DISABLED RECIPE', 'Make sure the recipe you are targeting is enabled in the Recipes tab.');\r\n            }\r\n            const target = recipeInfo.products.find((p) => p.itemClass === item.itemKey)!;\r\n            if (perMinTargets[item.itemKey]) {\r\n              perMinTargets[item.itemKey].value += target.perMinute * amount;\r\n            } else {\r\n              perMinTargets[item.itemKey] = {\r\n                value: target.perMinute * amount,\r\n                recipe: null,\r\n                isPoints: false,\r\n              };\r\n            }\r\n            if (recipeTargets[recipeKey]) {\r\n              recipeTargets[recipeKey].value += amount;\r\n            } else {\r\n              recipeTargets[recipeKey] = {\r\n                value: amount,\r\n                recipe: recipeKey,\r\n                isPoints: false,\r\n              };\r\n            }\r\n          } else {\r\n            throw new GraphError('INVALID OUTPUT MODE SELECTION', 'Something really broke... Try refreshing or resetting your factory.');\r\n          }\r\n      }\r\n    });\r\n\r\n    this.maximizeTargets\r\n      .sort((a, b) => {\r\n        if (a.priority > b.priority) return -1;\r\n        if (a.priority < b.priority) return 1;\r\n        throw new GraphError('DUPLICATE MAXIMIZATION PRIORITY', 'Two items have the same maximization priority, which is currently not allowed.');\r\n      });\r\n\r\n    this.rateTargets = {\r\n      ...perMinTargets,\r\n      ...recipeTargets,\r\n    };\r\n    if (Object.keys(this.rateTargets).length === 0 && this.maximizeTargets.length === 0) {\r\n      throw new GraphError('NO OUTPUTS SET', 'Open the control panel to get started.');\r\n    }\r\n  }\r\n\r\n  private validateNumber(num: Number) {\r\n    if (Number.isNaN(num)) {\r\n      throw new GraphError('INVALID VALUE: NOT A NUMBER', 'Double check your factory settings.');\r\n    } else if (num < 0) {\r\n      throw new GraphError('INVALID VALUE: NEGATIVE NUMBER', 'Double check your factory settings.');\r\n    }\r\n  }\r\n\r\n  public async exec(): Promise<SolverResults> {\r\n    const timestamp = performance.now();\r\n    try {\r\n      const glpk = await loadGLPK();\r\n      const productionSolution = await this.productionSolverPass(RATE_TARGET_KEY, this.inputs, glpk);\r\n      let productionGraph = this.generateProductionGraph(productionSolution);\r\n\r\n      for (const target of this.maximizeTargets) {\r\n        const remainingInputs: Inputs = {};\r\n        for (const [inputKey, input] of Object.entries(this.inputs)) {\r\n          const inputNode = Object.values(productionGraph.nodes).find((n) => n.key === inputKey);\r\n          let usedAmount = 0;\r\n          if (inputNode) {\r\n            usedAmount = inputNode.multiplier;\r\n          }\r\n          const diff = input.amount - usedAmount;\r\n          if (diff > EPSILON) {\r\n            remainingInputs[inputKey] = {\r\n              ...input,\r\n              amount: diff,\r\n            };\r\n          }\r\n        }\r\n        const solution = await this.productionSolverPass(target.key, remainingInputs, glpk);\r\n        for (const [key, multiplier] of Object.entries(solution)) {\r\n          if (productionSolution[key]) {\r\n            productionSolution[key] += multiplier;\r\n          } else {\r\n            productionSolution[key] = multiplier;\r\n          }\r\n        }\r\n        productionGraph = this.generateProductionGraph(productionSolution);\r\n      }\r\n\r\n      if (Object.keys(productionGraph.nodes).length === 0) {\r\n        throw new GraphError('SOLUTION IS EMPTY', 'For some reason the solution for your parameters is an empty factory. Double check that your factory settings make sense.');\r\n      }\r\n      const report = this.generateProductionReport(productionGraph);\r\n\r\n      return {\r\n        productionGraph,\r\n        report,\r\n        timestamp,\r\n        computeTime: performance.now() - timestamp,\r\n        error: null,\r\n      };\r\n    } catch (e: unknown) {\r\n      return {\r\n        productionGraph: null,\r\n        report: null,\r\n        timestamp,\r\n        computeTime: performance.now() - timestamp,\r\n        error: e as GraphError,\r\n      };\r\n    }\r\n  }\r\n\r\n  private getItemPoints(itemKey: string) {\r\n    const itemInfo = items[itemKey];\r\n    return itemInfo.isFicsmas ? 0 : itemInfo.sinkPoints;\r\n  }\r\n\r\n  private async productionSolverPass(targetKey: string, remainingInputs: Inputs, glpk: GLPK): Promise<ProductionSolution> {\r\n    const model: LP = {\r\n      name: 'production',\r\n      objective: {\r\n        name: 'score',\r\n        direction: glpk.GLP_MIN,\r\n        vars: [],\r\n      },\r\n      subjectTo: [],\r\n      binaries: [],\r\n    };\r\n\r\n    const doPoints = (targetKey === RATE_TARGET_KEY && this.rateTargets[POINTS_ITEM_KEY]) || targetKey === POINTS_ITEM_KEY;\r\n    const pointsVars: Var[] = [];\r\n\r\n    for (const [recipeKey, recipeInfo] of Object.entries(recipes)) {\r\n      if (!this.allowedRecipes[recipeKey]) continue;\r\n      const buildingInfo = buildings[recipeInfo.producedIn];\r\n      const powerScore = buildingInfo.power > 0 ? buildingInfo.power * this.globalWeights.power : 0;\r\n      const buildingsScore = this.globalWeights.buildings;\r\n      let resourceScore = 0;\r\n\r\n      for (const ingredient of recipeInfo.ingredients) {\r\n        const inputInfo = this.inputs[ingredient.itemClass];\r\n        if (inputInfo) {\r\n          resourceScore += inputInfo.weight * ingredient.perMinute * this.globalWeights.resources;\r\n        }\r\n      }\r\n\r\n      \r\n      model.objective.vars.push({\r\n        name: recipeKey,\r\n        coef: powerScore + resourceScore + buildingsScore,\r\n      });\r\n\r\n\r\n      if (targetKey === RATE_TARGET_KEY) {\r\n        if (this.rateTargets[recipeKey]) {\r\n          model.subjectTo.push({\r\n            name: `${recipeKey} recipe constraint`,\r\n            vars: [{ name: recipeKey, coef: 1 }],\r\n            bnds: { type: glpk.GLP_LO, ub: 0, lb: this.rateTargets[recipeKey].value },\r\n          });\r\n        }\r\n      }\r\n\r\n      if (doPoints) {\r\n        let pointCoef = 0;\r\n        for (const product of recipeInfo.products) {\r\n          if (!this.inputs[product.itemClass] || this.inputs[product.itemClass].type === NODE_TYPE.INPUT_ITEM) {\r\n            pointCoef -= product.perMinute * this.getItemPoints(product.itemClass) / 1000;\r\n          }\r\n        }\r\n        for (const ingredient of recipeInfo.ingredients) {\r\n          if (!this.inputs[ingredient.itemClass] || this.inputs[ingredient.itemClass].type === NODE_TYPE.INPUT_ITEM) {\r\n            pointCoef += ingredient.perMinute * this.getItemPoints(ingredient.itemClass) / 1000;\r\n          }\r\n        }\r\n        pointsVars.push({ name: recipeKey, coef: pointCoef });\r\n      }\r\n    }\r\n\r\n  \r\n    if (doPoints) {\r\n      let intrinsicPoints = 0;\r\n      for (const [itemKey, inputInfo] of Object.entries(remainingInputs)) {\r\n        if (inputInfo.type === NODE_TYPE.INPUT_ITEM) {\r\n          intrinsicPoints += this.getItemPoints(itemKey) * inputInfo.amount;\r\n        }\r\n      }\r\n      if (targetKey === RATE_TARGET_KEY) {\r\n        for (const [itemKey, targetInfo] of Object.entries(this.rateTargets)) {\r\n          if (itemKey !== POINTS_ITEM_KEY) {\r\n            intrinsicPoints -= this.getItemPoints(itemKey) * targetInfo.value;\r\n          }\r\n        }\r\n        model.subjectTo.push({\r\n          name: 'AWESOME Sink Points constraint',\r\n          vars: pointsVars,\r\n          bnds: { type: glpk.GLP_UP, ub: -this.rateTargets[POINTS_ITEM_KEY].value - intrinsicPoints, lb: NaN },\r\n        });\r\n      } else if (targetKey === POINTS_ITEM_KEY) {\r\n        pointsVars.forEach((v) => {\r\n          const existingVar = model.objective.vars.find((ov) => ov.name === v.name);\r\n          if (existingVar) {\r\n            existingVar.coef += v.coef * MAXIMIZE_WEIGHT;\r\n          } else {\r\n            model.objective.vars.push({\r\n              name: v.name,\r\n              coef: v.coef * MAXIMIZE_WEIGHT,\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n\r\n    for (const [itemKey, itemInfo] of Object.entries(items)) {\r\n      if (!this.allowedItems[itemKey]) continue;\r\n      const vars: Var[] = [];\r\n      \r\n      const binKey = `${itemKey}_BIN`;\r\n      const binVars: Var[] = [];\r\n\r\n      for (const recipeKey of itemInfo.usedInRecipes) {\r\n        if (!this.allowedRecipes[recipeKey]) continue;\r\n        const recipeInfo = recipes[recipeKey];\r\n        const target = recipeInfo.ingredients.find((i) => i.itemClass === itemKey)!;\r\n        vars.push({ name: recipeKey, coef: target.perMinute });\r\n\r\n        binVars.push({ name: recipeKey, coef: -1 });\r\n      }\r\n\r\n      for (const recipeKey of itemInfo.producedFromRecipes) {\r\n        if (!this.allowedRecipes[recipeKey]) continue;\r\n        const recipeInfo = recipes[recipeKey];\r\n        const target = recipeInfo.products.find((p) => p.itemClass === itemKey)!;\r\n\r\n        const existingVar = vars.find((v) => v.name === recipeKey);\r\n        if (existingVar) {\r\n          existingVar.coef -= target.perMinute;\r\n        } else {\r\n          vars.push({ name: recipeKey, coef: -target.perMinute });\r\n        }\r\n      }\r\n\r\n\r\n      if (binVars.length > 0) {\r\n        model.binaries!.push(binKey);\r\n        model.objective.vars.push({ name: binKey, coef: this.globalWeights.complexity });\r\n        model.subjectTo.push({\r\n          name: `${binKey} constraint`,\r\n          vars: [\r\n            { name: binKey, coef: MAXIMIZE_WEIGHT },\r\n            ...binVars,\r\n          ],\r\n          bnds: { type: glpk.GLP_LO, ub: NaN, lb: 0 },\r\n        });\r\n      }\r\n\r\n      if (vars.length === 0) continue;\r\n\r\n      if (remainingInputs[itemKey]) {\r\n        const inputInfo = remainingInputs[itemKey];\r\n        if (inputInfo.amount !== Infinity) {\r\n          model.subjectTo.push({\r\n            name: `${itemKey} resource constraint`,\r\n            vars,\r\n            bnds: { type: glpk.GLP_UP, ub: inputInfo.amount, lb: NaN },\r\n          });\r\n        }\r\n      }\r\n\r\n      else if (targetKey === RATE_TARGET_KEY && this.rateTargets[itemKey]) {\r\n        const outputInfo = this.rateTargets[itemKey];\r\n        model.subjectTo.push({\r\n          name: `${itemKey} final product constraint`,\r\n          vars,\r\n          bnds: { type: glpk.GLP_UP, ub: -outputInfo.value, lb: NaN },\r\n        });\r\n      }\r\n\r\n      else if (targetKey === itemKey) {\r\n        model.subjectTo.push({\r\n          name: `${itemKey} final product constraint`,\r\n          vars,\r\n          bnds: { type: glpk.GLP_UP, ub: 0, lb: NaN },\r\n        });\r\n\r\n        vars.forEach((v) => {\r\n          const existingVar = model.objective.vars.find((ov) => ov.name === v.name);\r\n          if (existingVar) {\r\n            existingVar.coef += v.coef * MAXIMIZE_WEIGHT;\r\n          } else {\r\n            model.objective.vars.push({\r\n              name: v.name,\r\n              coef: v.coef * MAXIMIZE_WEIGHT,\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      else {\r\n        model.subjectTo.push({\r\n          name: `${itemKey} intermediates constraint`,\r\n          vars,\r\n          bnds: { type: glpk.GLP_UP, ub: 0, lb: NaN },\r\n        });\r\n      }\r\n    }\r\n\r\n    const solution = await glpk.solve(model, { msglev: glpk.GLP_MSG_OFF, tmlim: TIME_LIMIT });\r\n    if (solution.time > TIME_LIMIT) {\r\n      throw new GraphError('TIMED OUT', 'Try setting the complexity weight to 0. Unfortunately it is currently very slow for large factories. For complex factories, you might try the Buildings optimizer instead.');\r\n    }\r\n    if (solution.result.status !== glpk.GLP_OPT && solution.result.status !== glpk.GLP_FEAS) {\r\n      if (targetKey === RATE_TARGET_KEY) {\r\n        throw new GraphError('NO SOLUTION', 'This could be due to missing recipes, impossible demands, or any number of reasons. Double check your factory settings.');\r\n      } else {\r\n        throw new GraphError('SOLUTION IS UNBOUNDED', 'Somehow an infinite amount of items can be produced. Double check the inputs tab for infinite resources (including the hand gathered resources option).');\r\n      }\r\n    }\r\n\r\n\r\n    const result: ProductionSolution = {};\r\n    Object.entries(solution.result.vars).forEach(([key, val]) => {\r\n      if (val > EPSILON) {\r\n        if (recipes[key]) {\r\n          result[key] = val;\r\n        }\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  private generateProductionGraph(productionSolution: ProductionSolution): ProductionGraph {\r\n    const itemProductionTotals: ItemProductionTotals = {};\r\n    const graph: ProductionGraph = {\r\n      nodes: {},\r\n      edges: [],\r\n    };\r\n\r\n    for (const [recipeKey, multiplier] of Object.entries(productionSolution)) {\r\n      const recipeInfo = recipes[recipeKey];\r\n\r\n      for (const product of recipeInfo.products) {\r\n        const amount = multiplier * product.perMinute;\r\n        if (!itemProductionTotals[product.itemClass]) {\r\n          itemProductionTotals[product.itemClass] = {\r\n            producedBy: [],\r\n            usedBy: [],\r\n          };\r\n        }\r\n        itemProductionTotals[product.itemClass].producedBy.push({ recipeKey, amount });\r\n      }\r\n\r\n      for (const ingredient of recipeInfo.ingredients) {\r\n        const amount = multiplier * ingredient.perMinute;\r\n        if (!itemProductionTotals[ingredient.itemClass]) {\r\n          itemProductionTotals[ingredient.itemClass] = {\r\n            producedBy: [],\r\n            usedBy: [],\r\n          };\r\n        }\r\n        itemProductionTotals[ingredient.itemClass].usedBy.push({ recipeKey, amount });\r\n      }\r\n\r\n      graph.nodes[recipeKey] = {\r\n        id: nanoid(),\r\n        key: recipeKey,\r\n        type: NODE_TYPE.RECIPE,\r\n        multiplier,\r\n      };\r\n    }\r\n\r\n    for (const [itemKey, productionTotals] of Object.entries(itemProductionTotals)) {\r\n      const { producedBy, usedBy } = productionTotals;\r\n      let i = 0, j = 0;\r\n      nextDemand:\r\n      while (i < usedBy.length) {\r\n        const usageInfo = usedBy[i];\r\n        const usageNode = graph.nodes[usageInfo.recipeKey];\r\n        \r\n        while (j < producedBy.length) {\r\n          const productionInfo = producedBy[j];\r\n          const productionNode = graph.nodes[productionInfo.recipeKey];\r\n\r\n          const outputRecipe = this.rateTargets[itemKey]?.recipe;\r\n          if (outputRecipe && outputRecipe === productionInfo.recipeKey) {\r\n            const outputInfo = this.rateTargets[itemKey];\r\n            const recipeInfo = recipes[outputRecipe];\r\n            const target = recipeInfo.products.find((p) => p.itemClass === itemKey)!;\r\n            const recipeAmount = outputInfo.value * target.perMinute;\r\n            productionInfo.amount -= recipeAmount;\r\n\r\n            let itemNode = graph.nodes[itemKey];\r\n            if (!itemNode) {\r\n              itemNode = {\r\n                id: nanoid(),\r\n                key: itemKey,\r\n                type: NODE_TYPE.FINAL_PRODUCT,\r\n                multiplier: recipeAmount,\r\n              }\r\n              graph.nodes[itemKey] = itemNode;\r\n            } else {\r\n              graph.nodes[itemKey].multiplier += recipeAmount;\r\n            }\r\n            graph.edges.push({\r\n              key: itemKey,\r\n              from: productionNode.id,\r\n              to: itemNode.id,\r\n              productionRate: recipeAmount,\r\n            });\r\n          } \r\n\r\n          if (productionInfo.amount < EPSILON) {\r\n            j++\r\n            continue;\r\n          }\r\n\r\n          if (usageInfo.amount <= productionInfo.amount) {\r\n            graph.edges.push({\r\n              key: itemKey,\r\n              from: productionNode.id,\r\n              to: usageNode.id,\r\n              productionRate: usageInfo.amount,\r\n            });\r\n            productionInfo.amount -= usageInfo.amount;\r\n            usageInfo.amount = 0;\r\n          } else {\r\n            graph.edges.push({\r\n              key: itemKey,\r\n              from: productionNode.id,\r\n              to: usageNode.id,\r\n              productionRate: productionInfo.amount,\r\n            });\r\n            usageInfo.amount -= productionInfo.amount;\r\n            productionInfo.amount = 0;\r\n          }\r\n          \r\n          if (usageInfo.amount < EPSILON) {\r\n            i++;\r\n            continue nextDemand;\r\n          }\r\n          j++;\r\n        }\r\n        break;\r\n      }\r\n\r\n      while (i < usedBy.length) {\r\n        const usageInfo = usedBy[i];\r\n        const usageNode = graph.nodes[usageInfo.recipeKey];\r\n        if (usageInfo.amount > EPSILON && this.inputs[itemKey]) {\r\n          let itemNode = graph.nodes[itemKey];\r\n          if (!itemNode) {\r\n            const inputInfo = this.inputs[itemKey];\r\n            itemNode = {\r\n              id: nanoid(),\r\n              key: itemKey,\r\n              type: inputInfo.type,\r\n              multiplier: usageInfo.amount,\r\n            };\r\n            graph.nodes[itemKey] = itemNode;\r\n          } else {\r\n            itemNode.multiplier += usageInfo.amount;\r\n          }\r\n          graph.edges.push({\r\n            key: itemKey,\r\n            from: itemNode.id,\r\n            to: usageNode.id,\r\n            productionRate: usageInfo.amount,\r\n          });\r\n          usageInfo.amount = 0;\r\n        }\r\n        i++;\r\n      }\r\n\r\n      while (j < producedBy.length) {\r\n        const productionInfo = producedBy[j];\r\n        const productionNode = graph.nodes[productionInfo.recipeKey];\r\n        if (productionInfo.amount > EPSILON) {\r\n          let itemNode = graph.nodes[itemKey];\r\n          if (!itemNode) {\r\n            let nodeType = NODE_TYPE.SIDE_PRODUCT;\r\n            if (this.rateTargets[itemKey] || this.maximizeTargets.find((t) => t.key === itemKey)) {\r\n              nodeType = NODE_TYPE.FINAL_PRODUCT;\r\n            } else if (this.hasPointsTarget && this.getItemPoints(itemKey) > 0) {\r\n              nodeType = NODE_TYPE.FINAL_PRODUCT;\r\n            }\r\n            itemNode = {\r\n              id: nanoid(),\r\n              key: itemKey,\r\n              type: nodeType,\r\n              multiplier: productionInfo.amount\r\n            };\r\n            graph.nodes[itemKey] = itemNode;\r\n          } else {\r\n            itemNode.multiplier += productionInfo.amount;\r\n          }\r\n          graph.edges.push({\r\n            key: itemKey,\r\n            from: productionNode.id,\r\n            to: itemNode.id,\r\n            productionRate: productionInfo.amount,\r\n          });\r\n          productionInfo.amount = 0;\r\n        }\r\n        j++;\r\n      }\r\n    }\r\n\r\n    return graph;\r\n  }\r\n\r\n  private generateProductionReport(productionGraph: ProductionGraph): Report {\r\n    const report: Report = {\r\n      pointsProduced: 0,\r\n      powerUsageEstimate: {\r\n        production: 0,\r\n        extraction: 0,\r\n        generators: 0,\r\n        total: 0,\r\n      },\r\n      resourceEfficiencyScore: 0,\r\n      totalBuildArea: 0,\r\n      estimatedFoundations: 0,\r\n      buildingsUsed: {},\r\n      totalMaterialCost: {},\r\n    };\r\n\r\n    for (const [key, node] of Object.entries(productionGraph.nodes)) {\r\n      if (node.type === NODE_TYPE.RECIPE) {\r\n        const recipeInfo = recipes[key];\r\n        const buildingKey = recipeInfo.producedIn;\r\n        const buildingInfo = buildings[buildingKey];\r\n        const power = node.multiplier * buildingInfo.power;\r\n        if (power < 0) {\r\n          report.powerUsageEstimate.generators += -power;\r\n        } else {\r\n          report.powerUsageEstimate.production += power;\r\n        }\r\n        report.powerUsageEstimate.total += power;\r\n        report.totalBuildArea += Math.ceil(node.multiplier) * buildingInfo.area;\r\n        if (!report.buildingsUsed[buildingKey]) {\r\n          report.buildingsUsed[buildingKey] = {\r\n            count: Math.ceil(node.multiplier),\r\n            materialCost: {},\r\n          };\r\n        } else {\r\n          report.buildingsUsed[buildingKey].count += Math.ceil(node.multiplier);\r\n        }\r\n\r\n        for (const ingredient of buildingInfo.buildCost) {\r\n          const amount = Math.ceil(node.multiplier) * ingredient.quantity;\r\n          if (!report.buildingsUsed[buildingKey].materialCost[ingredient.itemClass]) {\r\n            report.buildingsUsed[buildingKey].materialCost[ingredient.itemClass] = amount;\r\n          } else {\r\n            report.buildingsUsed[buildingKey].materialCost[ingredient.itemClass] += amount;\r\n          }\r\n          if (!report.totalMaterialCost[ingredient.itemClass]) {\r\n            report.totalMaterialCost[ingredient.itemClass] = amount;\r\n          } else {\r\n            report.totalMaterialCost[ingredient.itemClass] += amount;\r\n          }\r\n        }\r\n        continue;\r\n      }\r\n\r\n      if (node.type === NODE_TYPE.FINAL_PRODUCT) {\r\n        report.pointsProduced += node.multiplier * this.getItemPoints(key);\r\n      } else if (node.type === NODE_TYPE.RESOURCE) {\r\n        report.resourceEfficiencyScore += node.multiplier * this.inputs[key].weight;\r\n        let power = 0;\r\n        if (key === 'Desc_Water_C') {\r\n          power = node.multiplier / 120 * buildings['Desc_WaterPump_C'].power;\r\n\r\n          const numExtractors = Math.ceil(node.multiplier / 120);\r\n          report.buildingsUsed['Desc_WaterPump_C'] = {\r\n            count: numExtractors,\r\n            materialCost: {},\r\n          };\r\n          for (const ingredient of buildings['Desc_WaterPump_C'].buildCost) {\r\n            const amount = numExtractors * ingredient.quantity;\r\n            report.buildingsUsed['Desc_WaterPump_C'].materialCost[ingredient.itemClass] = amount;\r\n            if (!report.totalMaterialCost[ingredient.itemClass]) {\r\n              report.totalMaterialCost[ingredient.itemClass] = amount;\r\n            } else {\r\n              report.totalMaterialCost[ingredient.itemClass] += amount;\r\n            }\r\n          }\r\n\r\n        } else if (key === 'Desc_LiquidOil_C') {\r\n          power = node.multiplier / 120 * buildings['Desc_OilPump_C'].power;\r\n        } else if (key === 'Desc_NitrogenGas_C') {\r\n          // SKIP\r\n        } else {\r\n          power = node.multiplier / 240 * buildings['Desc_MinerMk3_C'].power;\r\n        }\r\n        report.powerUsageEstimate.extraction += power;\r\n        report.powerUsageEstimate.total += power;\r\n      }\r\n    }\r\n\r\n    report.estimatedFoundations = Math.ceil(2 * (report.totalBuildArea / 64));\r\n\r\n    return report;\r\n  }\r\n}\r\n","import { nanoid } from 'nanoid';\r\nimport { recipes, items } from '../../../data'\r\nimport { POINTS_ITEM_KEY } from '../../../utilities/production-solver';\r\nimport { FactoryOptions, getInitialState } from '../reducer';\r\n\r\nconst FACTORY_SETTINGS_VERSION = 'v1_U5';\r\n\r\nconst SEP0 = ',';\r\nconst SEP1 = '|';\r\nconst SEP2 = ':';\r\n\r\nfunction getItemBySlug(slug: string) {\r\n  if (slug === 'points') {\r\n    return POINTS_ITEM_KEY;\r\n  }\r\n  const itemEntry = Object.entries(items).find(([key, item]) => item.slug === slug);\r\n  if (itemEntry) {\r\n    return itemEntry[0];\r\n  }\r\n  throw new Error('INVALID ITEM SLUG');\r\n}\r\n\r\nfunction getModeBySlug(slug: string) {\r\n  if (slug === 'per_minute') return 'per-minute';\r\n  if (slug === 'maximize') return 'maximize';\r\n  const recipeEntry = Object.entries(recipes).find(([key, recipe]) => recipe.slug === slug);\r\n  if (recipeEntry) {\r\n    return recipeEntry[0];\r\n  }\r\n  throw new Error('INVALID RECIPE SLUG');\r\n}\r\n\r\nexport function decodeState_v1_U5(stateStr: string): FactoryOptions {\r\n  const newState: FactoryOptions = getInitialState();\r\n\r\n  const fields = stateStr.split(SEP0);\r\n  if (fields[0] !== FACTORY_SETTINGS_VERSION) throw new Error('VERSION MISMATCH');\r\n  if (fields.length !== 7) throw new Error('INVALID DATA [BAD FIELDS]');\r\n\r\n  const allowedRecipes = Object.keys(newState.allowedRecipes)\r\n    .filter((recipeKey) => {\r\n      const recipeInfo = recipes[recipeKey];\r\n      if (recipeInfo.isFicsmas) {\r\n        newState.allowedRecipes[recipeKey] = false;\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n  const allowedRecipesBits = BigInt(`0x${fields[1]}`)\r\n    .toString(2)\r\n    .padStart(allowedRecipes.length, '0')\r\n    .split('')\r\n    .map((b) => !!parseInt(b));\r\n  allowedRecipes\r\n    .sort((a, b) => {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    })\r\n    .forEach((key, i) => {\r\n      newState.allowedRecipes[key] = !!allowedRecipesBits[i];\r\n    });\r\n\r\n  const productionItemsStrings = fields[2].split(SEP1);\r\n  if (productionItemsStrings[0]) {\r\n    productionItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 3) throw new Error('INVALID DATA [productionItems]');\r\n      newState.productionItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        mode: getModeBySlug(values[1]),\r\n        value: values[2],\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputItemsStrings = fields[3].split(SEP1);\r\n  if (inputItemsStrings[0]) {\r\n    inputItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 4) throw new Error('INVALID DATA [inputItems]');\r\n      newState.inputItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        value: values[1],\r\n        weight: values[2],\r\n        unlimited: !!parseInt(values[3]),\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputResourcesStrings = fields[4].split(SEP1);\r\n  newState.inputResources.forEach((resourceOptions, i) => {\r\n    const values = inputResourcesStrings[i].split(SEP2);\r\n    if (values.length !== 3) throw new Error('INVALID DATA [inputResources]');\r\n    resourceOptions.value = values[0];\r\n    resourceOptions.weight = values[1];\r\n    resourceOptions.unlimited = !!parseInt(values[2]);\r\n  });\r\n\r\n  newState.allowHandGatheredItems = !!parseInt(fields[5]);\r\n\r\n  const weightingOptionsStrings = fields[6].split(SEP2);\r\n  if (weightingOptionsStrings.length !== 3) throw new Error('INVALID DATA [weightingOptions]');\r\n  newState.weightingOptions.resources = weightingOptionsStrings[0];\r\n  newState.weightingOptions.power = weightingOptionsStrings[1];\r\n  newState.weightingOptions.complexity = weightingOptionsStrings[2];\r\n  newState.weightingOptions.buildings = '0';\r\n\r\n  return newState;\r\n}\r\n","import { nanoid } from 'nanoid';\r\nimport { recipes, items } from '../../../data'\r\nimport { POINTS_ITEM_KEY } from '../../../utilities/production-solver';\r\nimport { FactoryOptions, getInitialState } from '../reducer';\r\n\r\nconst FACTORY_SETTINGS_VERSION = 'v2_U5';\r\n\r\nconst SEP0 = ',';\r\nconst SEP1 = '|';\r\nconst SEP2 = ':';\r\n\r\nfunction getItemBySlug(slug: string) {\r\n  if (slug === 'points') {\r\n    return POINTS_ITEM_KEY;\r\n  }\r\n  const itemEntry = Object.entries(items).find(([key, item]) => item.slug === slug);\r\n  if (itemEntry) {\r\n    return itemEntry[0];\r\n  }\r\n  throw new Error('INVALID ITEM SLUG');\r\n}\r\n\r\nfunction getModeBySlug(slug: string) {\r\n  if (slug === 'per_minute') return 'per-minute';\r\n  if (slug === 'maximize') return 'maximize';\r\n  const recipeEntry = Object.entries(recipes).find(([key, recipe]) => recipe.slug === slug);\r\n  if (recipeEntry) {\r\n    return recipeEntry[0];\r\n  }\r\n  throw new Error('INVALID RECIPE SLUG');\r\n}\r\n\r\nexport function decodeState_v2_U5(stateStr: string): FactoryOptions {\r\n  const newState: FactoryOptions = getInitialState();\r\n\r\n  const fields = stateStr.split(SEP0);\r\n  if (fields[0] !== FACTORY_SETTINGS_VERSION) throw new Error('VERSION MISMATCH');\r\n  if (fields.length !== 7) throw new Error('INVALID DATA [BAD FIELDS]');\r\n\r\n  const allowedRecipesBits = BigInt(`0x${fields[1]}`)\r\n    .toString(2)\r\n    .padStart(Object.keys(newState.allowedRecipes).length, '0')\r\n    .split('')\r\n    .map((b) => !!parseInt(b));\r\n  Object.keys(newState.allowedRecipes)\r\n    .sort((a, b) => {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    })\r\n    .forEach((key, i) => {\r\n      newState.allowedRecipes[key] = !!allowedRecipesBits[i];\r\n    });\r\n\r\n  const productionItemsStrings = fields[2].split(SEP1);\r\n  if (productionItemsStrings[0]) {\r\n    productionItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 3) throw new Error('INVALID DATA [productionItems]');\r\n      newState.productionItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        mode: getModeBySlug(values[1]),\r\n        value: values[2],\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputItemsStrings = fields[3].split(SEP1);\r\n  if (inputItemsStrings[0]) {\r\n    inputItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 4) throw new Error('INVALID DATA [inputItems]');\r\n      newState.inputItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        value: values[1],\r\n        weight: values[2],\r\n        unlimited: !!parseInt(values[3]),\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputResourcesStrings = fields[4].split(SEP1);\r\n  newState.inputResources.forEach((resourceOptions, i) => {\r\n    const values = inputResourcesStrings[i].split(SEP2);\r\n    if (values.length !== 3) throw new Error('INVALID DATA [inputResources]');\r\n    resourceOptions.value = values[0];\r\n    resourceOptions.weight = values[1];\r\n    resourceOptions.unlimited = !!parseInt(values[2]);\r\n  });\r\n\r\n  newState.allowHandGatheredItems = !!parseInt(fields[5]);\r\n\r\n  const weightingOptionsStrings = fields[6].split(SEP2);\r\n  if (weightingOptionsStrings.length !== 3) throw new Error('INVALID DATA [weightingOptions]');\r\n  newState.weightingOptions.resources = weightingOptionsStrings[0];\r\n  newState.weightingOptions.power = weightingOptionsStrings[1];\r\n  newState.weightingOptions.complexity = weightingOptionsStrings[2];\r\n  newState.weightingOptions.buildings = '0';\r\n\r\n  return newState;\r\n}\r\n","import { nanoid } from 'nanoid';\r\nimport { recipes, items } from '../../../data'\r\nimport { POINTS_ITEM_KEY } from '../../../utilities/production-solver';\r\nimport { FactoryOptions, getInitialState } from '../reducer';\r\n\r\nconst FACTORY_SETTINGS_VERSION = 'v3_U5';\r\n\r\nconst SEP0 = ',';\r\nconst SEP1 = '|';\r\nconst SEP2 = ':';\r\n\r\nfunction getItemBySlug(slug: string) {\r\n  if (slug === 'points') {\r\n    return POINTS_ITEM_KEY;\r\n  }\r\n  const itemEntry = Object.entries(items).find(([key, item]) => item.slug === slug);\r\n  if (itemEntry) {\r\n    return itemEntry[0];\r\n  }\r\n  throw new Error('INVALID ITEM SLUG');\r\n}\r\n\r\nfunction getModeBySlug(slug: string) {\r\n  if (slug === 'per_minute') return 'per-minute';\r\n  if (slug === 'maximize') return 'maximize';\r\n  const recipeEntry = Object.entries(recipes).find(([key, recipe]) => recipe.slug === slug);\r\n  if (recipeEntry) {\r\n    return recipeEntry[0];\r\n  }\r\n  throw new Error('INVALID RECIPE SLUG');\r\n}\r\n\r\nexport function decodeState_v3_U5(stateStr: string): FactoryOptions {\r\n  const newState: FactoryOptions = getInitialState();\r\n\r\n  const fields = stateStr.split(SEP0);\r\n  if (fields[0] !== FACTORY_SETTINGS_VERSION) throw new Error('VERSION MISMATCH');\r\n  if (fields.length !== 7) throw new Error('INVALID DATA [BAD FIELDS]');\r\n\r\n  const allowedRecipesBits = BigInt(`0x${fields[1]}`)\r\n    .toString(2)\r\n    .padStart(Object.keys(newState.allowedRecipes).length, '0')\r\n    .split('')\r\n    .map((b) => !!parseInt(b));\r\n  Object.keys(newState.allowedRecipes)\r\n    .sort((a, b) => {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    })\r\n    .forEach((key, i) => {\r\n      newState.allowedRecipes[key] = !!allowedRecipesBits[i];\r\n    });\r\n\r\n  const productionItemsStrings = fields[2].split(SEP1);\r\n  if (productionItemsStrings[0]) {\r\n    productionItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 3) throw new Error('INVALID DATA [productionItems]');\r\n      newState.productionItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        mode: getModeBySlug(values[1]),\r\n        value: values[2],\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputItemsStrings = fields[3].split(SEP1);\r\n  if (inputItemsStrings[0]) {\r\n    inputItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 4) throw new Error('INVALID DATA [inputItems]');\r\n      newState.inputItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        value: values[1],\r\n        weight: values[2],\r\n        unlimited: !!parseInt(values[3]),\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputResourcesStrings = fields[4].split(SEP1);\r\n  newState.inputResources.forEach((resourceOptions, i) => {\r\n    const values = inputResourcesStrings[i].split(SEP2);\r\n    if (values.length !== 3) throw new Error('INVALID DATA [inputResources]');\r\n    resourceOptions.value = values[0];\r\n    resourceOptions.weight = values[1];\r\n    resourceOptions.unlimited = !!parseInt(values[2]);\r\n  });\r\n\r\n  newState.allowHandGatheredItems = !!parseInt(fields[5]);\r\n\r\n  const weightingOptionsStrings = fields[6].split(SEP2);\r\n  if (weightingOptionsStrings.length !== 4) throw new Error('INVALID DATA [weightingOptions]');\r\n  newState.weightingOptions.resources = weightingOptionsStrings[0];\r\n  newState.weightingOptions.power = weightingOptionsStrings[1];\r\n  newState.weightingOptions.complexity = weightingOptionsStrings[2];\r\n  newState.weightingOptions.buildings = weightingOptionsStrings[3];\r\n\r\n  return newState;\r\n}\r\n","import { nanoid } from 'nanoid';\r\nimport { resources, recipes, items } from '../../data'\r\nimport { POINTS_ITEM_KEY } from '../../utilities/production-solver';\r\nimport { decodeState_v1_U5 } from './state-decoders/v1_U5';\r\nimport { decodeState_v2_U5 } from './state-decoders/v2_U5';\r\nimport { decodeState_v3_U5 } from './state-decoders/v3_U5';\r\n\r\nexport const FACTORY_SETTINGS_VERSION = 'v3_U5';\r\nexport const MAX_PRIORITY = 20;\r\n\r\n// TYPES\r\nexport type ProductionItemOptions = {\r\n  key: string,\r\n  itemKey: string,\r\n  mode: 'per-minute' | 'maximize' | string,\r\n  value: string,\r\n};\r\n\r\nexport type WeightingOptions = {\r\n  resources: string,\r\n  power: string,\r\n  complexity: string,\r\n  buildings: string,\r\n};\r\n\r\nexport type InputItemOptions = {\r\n  key: string,\r\n  itemKey: string,\r\n  value: string,\r\n  weight: string,\r\n  unlimited: boolean,\r\n};\r\n\r\nexport type RecipeMap = {\r\n  [key: string]: boolean,\r\n};\r\n\r\nexport type FactoryOptions = {\r\n  version: string,\r\n  key: string,\r\n  productionItems: ProductionItemOptions[],\r\n  inputItems: InputItemOptions[],\r\n  inputResources: InputItemOptions[],\r\n  allowHandGatheredItems: boolean,\r\n  weightingOptions: WeightingOptions,\r\n  allowedRecipes: RecipeMap,\r\n};\r\n\r\n\r\n// DEFAULTS\r\nfunction getDefaultProductionItem(): ProductionItemOptions {\r\n  return ({\r\n    key: nanoid(),\r\n    itemKey: '',\r\n    mode: 'per-minute',\r\n    value: '10',\r\n  });\r\n}\r\n\r\nfunction getDefaultInputItem(): InputItemOptions {\r\n  return ({\r\n    key: nanoid(),\r\n    itemKey: '',\r\n    value: '10',\r\n    weight: '0',\r\n    unlimited: false,\r\n  });\r\n}\r\n\r\nconst ORDERED_RESOURCES = [\r\n  'Desc_OreIron_C',\r\n  'Desc_OreCopper_C',\r\n  'Desc_Stone_C',\r\n  'Desc_Coal_C',\r\n  'Desc_OreGold_C',\r\n  'Desc_RawQuartz_C',\r\n  'Desc_Sulfur_C',\r\n  'Desc_LiquidOil_C',\r\n  'Desc_OreBauxite_C',\r\n  'Desc_OreUranium_C',\r\n  'Desc_NitrogenGas_C',\r\n  'Desc_Water_C',\r\n];\r\n\r\nfunction getInitialInputResources(): InputItemOptions[] {\r\n  return Object.entries(resources)\r\n    .map(([key, data]) => {\r\n      let value = '0';\r\n      let unlimited = false;\r\n      if (key === 'Desc_Water_C') {\r\n        unlimited = true;\r\n      } else {\r\n        value = String(data.maxExtraction);\r\n      }\r\n      return {\r\n        key: key,\r\n        itemKey: key,\r\n        value,\r\n        weight: String(data.relativeValue),\r\n        unlimited,\r\n      };\r\n    })\r\n    .sort((a, b) => {\r\n      let aIndex = ORDERED_RESOURCES.findIndex((r) => r === a.itemKey);\r\n      if (aIndex === -1) aIndex = Infinity;\r\n      let bIndex = ORDERED_RESOURCES.findIndex((r) => r === b.itemKey);\r\n      if (bIndex === -1) bIndex = Infinity;\r\n      return aIndex < bIndex ? -1 : 1;\r\n    });\r\n}\r\n\r\nfunction getInitialWeightingOptions(): WeightingOptions {\r\n  return {\r\n    resources: '1000',\r\n    power: '1',\r\n    complexity: '0',\r\n    buildings: '0',\r\n  };\r\n}\r\n\r\nfunction getInitialAllowedRecipes(): RecipeMap {\r\n  const recipeMap: RecipeMap = {};\r\n  Object.entries(recipes).forEach(([key, data]) => {\r\n    recipeMap[key] = !data.isAlternate;\r\n  });\r\n  return recipeMap;\r\n}\r\n\r\nexport function getInitialState(): FactoryOptions {\r\n  return {\r\n    version: FACTORY_SETTINGS_VERSION,\r\n    key: nanoid(),\r\n    productionItems: [],\r\n    inputItems: [],\r\n    inputResources: getInitialInputResources(),\r\n    allowHandGatheredItems: false,\r\n    weightingOptions: getInitialWeightingOptions(),\r\n    allowedRecipes: getInitialAllowedRecipes(),\r\n  };\r\n}\r\n\r\n\r\n// REDUCER\r\nexport type FactoryAction =\r\n  | { type: 'RESET_FACTORY' }\r\n  | { type: 'ADD_PRODUCTION_ITEM' }\r\n  | { type: 'DELETE_PRODUCTION_ITEM', key: string }\r\n  | { type: 'SET_PRODUCTION_ITEM', data: { key: string, itemKey: string } }\r\n  | { type: 'SET_PRODUCTION_ITEM_AMOUNT', data: { key: string, amount: string } }\r\n  | { type: 'SET_PRODUCTION_ITEM_MODE', data: { key: string, mode: string } }\r\n  | { type: 'ADD_INPUT_ITEM' }\r\n  | { type: 'DELETE_INPUT_ITEM', key: string }\r\n  | { type: 'UPDATE_INPUT_ITEM', data: InputItemOptions }\r\n  | { type: 'UPDATE_INPUT_RESOURCE', data: InputItemOptions }\r\n  | { type: 'SET_RESOURCES_TO_MAP_LIMITS' }\r\n  | { type: 'SET_RESOURCES_TO_0' }\r\n  | { type: 'SET_ALLOW_HAND_GATHERED_ITEMS', active: boolean }\r\n  | { type: 'UPDATE_WEIGHTING_OPTIONS', data: WeightingOptions }\r\n  | { type: 'SET_ALL_WEIGHTS_DEFAULT' }\r\n  | { type: 'SET_RECIPE_ACTIVE', key: string, active: boolean }\r\n  | { type: 'MASS_SET_RECIPES_ACTIVE', recipes: string[], active: boolean }\r\n  | { type: 'LOAD_FROM_QUERY_PARAM' };\r\n\r\nexport function reducer(state: FactoryOptions, action: FactoryAction): FactoryOptions {\r\n  switch (action.type) {\r\n    case 'RESET_FACTORY': {\r\n      return getInitialState();\r\n    }\r\n    case 'ADD_PRODUCTION_ITEM': {\r\n      const newProductionItems = [\r\n        ...state.productionItems,\r\n        getDefaultProductionItem(),\r\n      ];\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'DELETE_PRODUCTION_ITEM': {\r\n      const newProductionItems = state.productionItems\r\n        .filter((i) => i.key !== action.key);\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'SET_PRODUCTION_ITEM': {\r\n      const newProductionItems = state.productionItems\r\n        .map((item) => {\r\n          if (item.key === action.data.key) {\r\n            const newItem = { ...item };\r\n            newItem.itemKey = action.data.itemKey;\r\n            return newItem;\r\n          }\r\n          return item;\r\n        });\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'SET_PRODUCTION_ITEM_AMOUNT': {\r\n      const newProductionItems = state.productionItems\r\n        .map((item) => {\r\n          if (item.key === action.data.key) {\r\n            const newItem = { ...item };\r\n            newItem.value = action.data.amount;\r\n            return newItem;\r\n          }\r\n          return item;\r\n        });\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'SET_PRODUCTION_ITEM_MODE': {\r\n      const newProductionItems = state.productionItems\r\n        .map((item) => {\r\n          if (item.key === action.data.key) {\r\n            const newItem = { ...item };\r\n            newItem.mode = action.data.mode;\r\n            if (newItem.mode !== item.mode) {\r\n              if (newItem.mode === 'per-minute') {\r\n                newItem.value = '10';\r\n              } else if (newItem.mode === 'maximize') {\r\n                let nextPriority = MAX_PRIORITY;\r\n                while (nextPriority && nextPriority > 0) {\r\n                  // eslint-disable-next-line no-loop-func\r\n                  const priorityTaken = !!state.productionItems.find((i) => i.mode === 'maximize' && i.value === String(nextPriority));\r\n                  if (!priorityTaken) {\r\n                    break;\r\n                  }\r\n                  nextPriority--;\r\n                }\r\n                if (nextPriority > 0) {\r\n                  newItem.value = String(nextPriority);\r\n                } else {\r\n                  newItem.value = `${MAX_PRIORITY}`;\r\n                }\r\n              } else if (item.mode === 'per-minute' || item.mode === 'maximize') {\r\n                newItem.value = '1';\r\n              }\r\n            }\r\n            return newItem;\r\n          }\r\n          return item;\r\n        });\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'ADD_INPUT_ITEM': {\r\n      const newInputItems = [\r\n        ...state.inputItems,\r\n        getDefaultInputItem(),\r\n      ];\r\n      return { ...state, inputItems: newInputItems };\r\n    }\r\n    case 'DELETE_INPUT_ITEM': {\r\n      const newInputItems = state.inputItems\r\n        .filter((i) => i.key !== action.key);\r\n      return { ...state, inputItems: newInputItems };\r\n    }\r\n    case 'UPDATE_INPUT_ITEM': {\r\n      const newInputItems = state.inputItems\r\n        .map((i) => i.key === action.data.key ? action.data : i);\r\n      return { ...state, inputItems: newInputItems };\r\n    }\r\n    case 'UPDATE_INPUT_RESOURCE': {\r\n      const newInputResources = state.inputResources\r\n        .map((i) => i.key === action.data.key ? action.data : i);\r\n      return { ...state, inputResources: newInputResources };\r\n    }\r\n    case 'SET_RESOURCES_TO_MAP_LIMITS': {\r\n      const newInputResources = getInitialInputResources();\r\n      return { ...state, inputResources: newInputResources };\r\n    }\r\n    case 'SET_RESOURCES_TO_0': {\r\n      const newInputResources = state.inputResources\r\n        .map((data) => ({ ...data, value: '0', unlimited: false }));\r\n      return { ...state, inputResources: newInputResources };\r\n    }\r\n    case 'SET_ALLOW_HAND_GATHERED_ITEMS': {\r\n      return { ...state, allowHandGatheredItems: action.active };\r\n    }\r\n    case 'UPDATE_WEIGHTING_OPTIONS': {\r\n      const newWeightingOptions = { ...action.data };\r\n      return { ...state, weightingOptions: newWeightingOptions };\r\n    }\r\n    case 'SET_ALL_WEIGHTS_DEFAULT': {\r\n      const newWeightingOptions = getInitialWeightingOptions();\r\n      const newInputResources = state.inputResources\r\n        .map((i) => ({ ...i, weight: String(resources[i.itemKey].relativeValue) }));\r\n      return { ...state, weightingOptions: newWeightingOptions, inputResources: newInputResources };\r\n    }\r\n    case 'SET_RECIPE_ACTIVE': {\r\n      const newAllowedRecipes = { ...state.allowedRecipes };\r\n      newAllowedRecipes[action.key] = action.active;\r\n      return { ...state, allowedRecipes: newAllowedRecipes };\r\n    }\r\n    case 'MASS_SET_RECIPES_ACTIVE': {\r\n      const newAllowedRecipes = { ...state.allowedRecipes };\r\n      action.recipes.forEach((recipeKey) => {\r\n        newAllowedRecipes[recipeKey] = action.active;\r\n      });\r\n      return { ...state, allowedRecipes: newAllowedRecipes };\r\n    }\r\n    case 'LOAD_FROM_QUERY_PARAM': {\r\n      const params = new URLSearchParams(window.location.search);\r\n      const encodedState = params.get('f');\r\n      if (encodedState) {\r\n        try {\r\n          return decodeState(encodedState);\r\n        } catch (e) {\r\n          console.error(e);\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n// ENCODE/DECODE STATE\r\nfunction decodeState(stateStr: string): FactoryOptions {\r\n  const version = stateStr.substring(0, 5);\r\n  if (version === 'v1_U5') {\r\n    return decodeState_v1_U5(stateStr);\r\n  } else if (version === 'v2_U5') {\r\n    return decodeState_v2_U5(stateStr);\r\n  } else if (version === 'v3_U5') {\r\n    return decodeState_v3_U5(stateStr);\r\n  } else {\r\n    throw new Error('INVALID VERSION');\r\n  }\r\n}\r\n\r\nfunction getItemSlug(itemKey: string) {\r\n  if (itemKey === POINTS_ITEM_KEY) {\r\n    return 'points';\r\n  }\r\n  return items[itemKey].slug;\r\n}\r\n\r\nfunction getModeSlug(mode: string) {\r\n  if (mode === 'per-minute') return 'per_minute';\r\n  if (mode === 'maximize') return 'maximize';\r\n  const recipeKey = mode;\r\n  const recipeInfo = recipes[recipeKey];\r\n  if (recipeInfo) {\r\n    return recipeInfo.slug;\r\n  } else {\r\n    return 'null';\r\n  }\r\n}\r\n\r\nconst SEP0 = ',';\r\nconst SEP1 = '|';\r\nconst SEP2 = ':';\r\n\r\nexport function encodeState(state: FactoryOptions): string {\r\n  const fields: string[] = [];\r\n\r\n  fields.push(state.version);\r\n\r\n  const allowedRecipesBits = Object.keys((state.allowedRecipes))\r\n    .sort((a, b) => {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    })\r\n    .map((key) => state.allowedRecipes[key] ? '1' : '0')\r\n    .join('');\r\n  fields.push(BigInt(`0b${allowedRecipesBits}`).toString(16));\r\n\r\n  const productionItemsField: string[] = [];\r\n  state.productionItems.forEach((item) => {\r\n    if (!item.itemKey) return;\r\n    productionItemsField.push(`${getItemSlug(item.itemKey)}${SEP2}${getModeSlug(item.mode)}${SEP2}${item.value}`);\r\n  });\r\n  fields.push(productionItemsField.join(SEP1));\r\n\r\n  const inputItemsField: string[] = [];\r\n  state.inputItems.forEach((item) => {\r\n    if (!item.itemKey) return;\r\n    inputItemsField.push(`${getItemSlug(item.itemKey)}${SEP2}${item.value}${SEP2}${item.weight}${SEP2}${item.unlimited ? '1' : '0'}`);\r\n  });\r\n  fields.push(inputItemsField.join(SEP1));\r\n\r\n  const inputResourcesField: string[] = [];\r\n  state.inputResources.forEach((item) => {\r\n    inputResourcesField.push(`${item.value}${SEP2}${item.weight}${SEP2}${item.unlimited ? '1' : '0'}`);\r\n  });\r\n  fields.push(inputResourcesField.join(SEP1));\r\n\r\n  fields.push(`${state.allowHandGatheredItems ? '1' : '0'}`);\r\n\r\n  fields.push(`${state.weightingOptions.resources}${SEP2}${state.weightingOptions.power}${SEP2}${state.weightingOptions.complexity}${SEP2}${state.weightingOptions.buildings}`);\r\n\r\n  return fields.join(SEP0);\r\n}\r\n","import React, { createContext, useContext, useReducer, useState, useEffect, useMemo, useCallback } from 'react';\r\nimport _ from 'lodash';\r\nimport seedrandom from 'seedrandom';\r\nimport { usePrevious } from '../../hooks/usePrevious';\r\nimport { ProductionSolver, SolverResults } from '../../utilities/production-solver';\r\nimport { reducer, encodeState, FactoryOptions, FactoryAction, getInitialState } from './reducer';\r\nimport { useLocalStorageValue } from '@mantine/hooks';\r\nimport { GraphError } from '../../utilities/error/GraphError';\r\n\r\nexport type ProductionContextType = {\r\n  state: FactoryOptions,\r\n  dispatch: React.Dispatch<FactoryAction>,\r\n  calculating: boolean,\r\n  solverResults: SolverResults | null,\r\n  calculate: () => void,\r\n  autoCalculate: boolean,\r\n  setAutoCalculate: (value: boolean) => void,\r\n  ficsitTip: string,\r\n  engineerId: string,\r\n};\r\n\r\nconst ONE_HOUR = 1000 * 60 * 60;\r\nconst seed = Math.floor(new Date().getTime() / (0.5 * ONE_HOUR));\r\nconst rng = seedrandom(String(seed));\r\n\r\nconst TIPS = [\r\n  'Pet the lizard doggo!',\r\n  'Get back to work!',\r\n  'Update 5 now available!',\r\n  'Arachnophobia mode enabled.',\r\n  'FICSIT does not waste.',\r\n  'Linear algebra!',\r\n  'Do not pet the spiders.',\r\n  'BEAMS.',\r\n  'Just 5 more minutes...',\r\n  'Thanks, Jace. Helps a lot!',\r\n];\r\n\r\nconst TIP_INDEX = Math.floor(rng() * TIPS.length);\r\nconst TIP = `FICSIT Tip #${TIP_INDEX}: ${TIPS[TIP_INDEX]}`;\r\n\r\nconst ID = Math.floor(Math.random() * 1e7).toString().padStart(7, '0');\r\n\r\nconst _handleCalculateFactory = _.debounce(async (\r\n    state: FactoryOptions,\r\n    setSolverResults: React.Dispatch<React.SetStateAction<SolverResults | null>>,\r\n    setCalculating: React.Dispatch<React.SetStateAction<boolean>>,\r\n  ) => {\r\n    setCalculating(true);\r\n    try {\r\n      const solver = new ProductionSolver(state);\r\n      const results = await solver.exec();\r\n      setSolverResults((prevState) => {\r\n        if (!prevState || prevState.timestamp < results.timestamp) {\r\n          console.log(`Computed in: ${results.computeTime}ms`);\r\n          return results;\r\n        }\r\n        return prevState;\r\n      });\r\n    } catch (e: unknown) {\r\n      setSolverResults({\r\n        productionGraph: null,\r\n        report: null,\r\n        timestamp: performance.now(),\r\n        computeTime: 0,\r\n        error: e as GraphError,\r\n      });\r\n    } finally {\r\n      setCalculating(false);\r\n    }\r\n  }, 300, { leading: true, trailing: true });\r\n\r\n\r\n\r\n// CONTEXT\r\nexport const ProductionContext = createContext<ProductionContextType | null>(null);\r\nProductionContext.displayName = 'ProductionContext';\r\n\r\n\r\n// HELPER HOOK\r\nexport function useProductionContext() {\r\n  const ctx = useContext(ProductionContext);\r\n  if (!ctx) {\r\n    throw new Error('ProductionContext is null');\r\n  }\r\n  return ctx;\r\n}\r\n\r\n\r\n// PROVIDER\r\ntype PropTypes = { children: React.ReactNode };\r\nexport const ProductionProvider = ({ children }: PropTypes) => {\r\n  const [state, dispatch] = useReducer(reducer, getInitialState());\r\n  const [loadedFromQuery, setLoadedFromQuery] = useState(false);\r\n  const [firstCalculationDone, setFirstCalculationDone] = useState(false);\r\n  const [autoCalculate, setAutoCalculate] = useLocalStorageValue<'false' | 'true'>({ key: 'auto-calculate', defaultValue: 'true' });\r\n  const [calculating, setCalculating] = useState(false);\r\n  const [solverResults, setSolverResults] = useState<SolverResults | null>(null);\r\n  const [engineerId] = useLocalStorageValue<string>({ key: 'engineer-id', defaultValue: ID });\r\n  const prevState = usePrevious(state);\r\n\r\n  const autoCalculateBool = autoCalculate === 'true' ? true : false;\r\n\r\n  const handleCalculateFactory = useCallback(() => {\r\n    _handleCalculateFactory(state, setSolverResults, setCalculating)\r\n  }, [state]);\r\n\r\n  const handleSetAutoCalculate = (checked: boolean) => {\r\n    setAutoCalculate(checked ? 'true' : 'false');\r\n    if (checked) {\r\n      handleCalculateFactory();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loadedFromQuery) {\r\n      if (!firstCalculationDone) {\r\n        handleCalculateFactory();\r\n        setFirstCalculationDone(true);\r\n      } else if (autoCalculateBool && prevState !== state) {\r\n        handleCalculateFactory();\r\n      }\r\n    }\r\n  }, [autoCalculateBool, firstCalculationDone, handleCalculateFactory, loadedFromQuery, prevState, state]);\r\n\r\n  useEffect(() => {\r\n    if (!loadedFromQuery) {\r\n      dispatch({ type: 'LOAD_FROM_QUERY_PARAM' });\r\n      setLoadedFromQuery(true);\r\n    }\r\n  }, [loadedFromQuery]);\r\n\r\n  useEffect(() => {\r\n    if (prevState !== state) {\r\n      const encodedState = encodeState(state);\r\n      window.history.replaceState(null, '', window.location.pathname + '?f=' + encodedState);\r\n    }\r\n  }, [prevState, state]);\r\n\r\n  const ctxValue = useMemo(() => {\r\n    return {\r\n      state,\r\n      dispatch,\r\n      calculating,\r\n      solverResults,\r\n      calculate: handleCalculateFactory,\r\n      autoCalculate: autoCalculateBool,\r\n      setAutoCalculate: handleSetAutoCalculate,\r\n      ficsitTip: TIP,\r\n      engineerId,\r\n    };\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [autoCalculateBool, calculating, handleCalculateFactory, solverResults, state]);\r\n\r\n  return (\r\n    <ProductionContext.Provider value={ctxValue}>\r\n      {children}\r\n    </ProductionContext.Provider>\r\n  );\r\n}\r\n","import { useRef, useEffect } from 'react';\r\n\r\nexport function usePrevious<T>(value: T) {\r\n  const ref = useRef<T>();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n  return ref.current;\r\n}\r\n","import React, { createContext, useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useMantineTheme } from '@mantine/core';\r\n\r\nexport type DrawerContextType = {\r\n  rootNode: HTMLDivElement | null,\r\n};\r\n\r\n\r\n// CONTEXT\r\nexport const DrawerContext = createContext<DrawerContextType | null>(null);\r\nDrawerContext.displayName = 'DrawerContext';\r\n\r\n\r\n// HELPER HOOK\r\nexport function useDrawerContext() {\r\n  const ctx = useContext(DrawerContext);\r\n  if (!ctx) {\r\n    throw new Error('DrawerContext is null');\r\n  }\r\n  return ctx;\r\n}\r\n\r\n\r\n// PROVIDER\r\ntype Props = {\r\n  children: React.ReactNode,\r\n};\r\nexport const DrawerProvider = (props: Props) => {\r\n  const { children } = props;\r\n  const [rootNode, setRootNode] = useState<HTMLDivElement | null>(null);\r\n  const theme = useMantineTheme();\r\n\r\n  function setRef(ref: HTMLDivElement | null) {\r\n    setRootNode((prevState) => {\r\n      if (prevState !== ref) return ref;\r\n      return prevState;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <DrawerContext.Provider value={{ rootNode }}>\r\n      <DrawerRoot ref={setRef} topOffset={theme.other.headerHeight} />\r\n      {children}\r\n    </DrawerContext.Provider>\r\n  );\r\n}\r\n\r\nconst DrawerRoot = styled.div<{ topOffset: string }>`\r\n  position: fixed;\r\n  top: ${({ topOffset }) => topOffset};\r\n  left: 0px;\r\n  bottom: 0px;\r\n  right: 0px;\r\n  z-index: ${({ theme }) => theme.other.drawerZIndex};\r\n  margin: 0;\r\n  padding: 0;\r\n  pointer-events: none;\r\n`;\r\n","import React, { forwardRef, useEffect, useLayoutEffect, useRef } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\ninterface Props {\r\n  children: React.ReactNode,\r\n  rootNode?: HTMLElement | null,\r\n  createRoot?: boolean,\r\n  key?: string,\r\n  style?: Partial<CSSStyleDeclaration>,\r\n}\r\n\r\nconst Portal = forwardRef<HTMLElement, Props>((props, ref) => {\r\n  const { children, rootNode, createRoot, key, style } = props;\r\n  const target = useRef<HTMLElement | null>(document.createElement('div'));\r\n\r\n  if (!createRoot) {\r\n    target.current = rootNode || null;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (createRoot && target.current) {\r\n      if (style) {\r\n        Object.entries(style).forEach(([key, value]) => {\r\n          target.current!.style[key as any] = value as any;\r\n        });\r\n      }\r\n      document.body.append(target.current);\r\n    }\r\n\r\n    return () => {\r\n      if (createRoot && target.current) {\r\n        target.current.remove();\r\n      }\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    if (ref) {\r\n      if (typeof ref === 'function') {\r\n        ref(target.current);\r\n      } else {\r\n        ref.current = target.current;\r\n      }\r\n    }\r\n  }, [ref, target]);\r\n\r\n  if (!target.current) return null;\r\n  return createPortal(children, target.current, key);\r\n});\r\n\r\nexport default Portal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { UnstyledButton, Paper, Text, Container } from '@mantine/core';\r\nimport { useLocalStorageValue } from '@mantine/hooks';\r\nimport { ChevronsLeft, ChevronsRight } from 'react-feather';\r\nimport { useDrawerContext } from '../../contexts/drawer';\r\nimport Portal from '../../components/Portal';\r\n\r\ninterface Props {\r\n  open?: boolean,\r\n  onToggle?: (newState: boolean) => void,\r\n  children: React.ReactNode,\r\n}\r\n\r\nconst Drawer = (props: Props) => {\r\n  const { open, onToggle, children } = props;\r\n  const [fullyClosed, setFullyClosed] = useState(!open);\r\n  const [tooltipDismissed, setTooltipDismissed] = useLocalStorageValue<'false' | 'true'>({ key: 'tooltip-dismissed', defaultValue: 'false' });\r\n  const ctx = useDrawerContext();\r\n\r\n  const showTooltip = tooltipDismissed === 'false';\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      setTooltipDismissed('true');\r\n    }\r\n  }, [open, setTooltipDismissed]);\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      setFullyClosed(false);\r\n    }\r\n  }, [open]);\r\n\r\n  function handleTransitionEnd() {\r\n    if (!open) {\r\n      setFullyClosed(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Portal rootNode={ctx.rootNode}>\r\n      <DrawerDimmer open={!!open || showTooltip} onClick={() => { !!open && onToggle?.(!open); }} />\r\n      <DrawerContainer open={!!open} onTransitionEnd={handleTransitionEnd}>\r\n        <DrawerToggle onClick={() => { onToggle?.(!open); }}>\r\n          <ToggleLabel>\r\n            <ToggleLabelText>{open ? 'Close' : 'Open'} Control Panel</ToggleLabelText>\r\n            <ToggleLabelIcon>\r\n              {\r\n                open\r\n                  ? <ChevronsLeft />\r\n                  : <ChevronsRight />\r\n              }\r\n            </ToggleLabelIcon>\r\n          </ToggleLabel>\r\n          {\r\n            showTooltip && (\r\n              <Tooltip>\r\n                <TooltipText>\r\n                  Click here to get started!\r\n                </TooltipText>\r\n                <TooltipConfirmContainer>\r\n                  <TooltipConfirm onClick={(e) => { setTooltipDismissed('true'); e.stopPropagation(); }}>\r\n                    Dismiss\r\n                  </TooltipConfirm>\r\n                </TooltipConfirmContainer>\r\n              </Tooltip>\r\n            )\r\n          }\r\n        </DrawerToggle>\r\n        <DrawerContent className='custom-scrollbar' aria-hidden={!open} fullyClosed={fullyClosed} fluid>\r\n          {children}\r\n        </DrawerContent>\r\n      </DrawerContainer>\r\n    </Portal>\r\n  )\r\n};\r\n\r\nexport default Drawer;\r\n\r\nconst DrawerDimmer = styled.div<{ open: boolean }>`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  bottom: 0px;\r\n  right: 0px;\r\n  margin: 0;\r\n  padding: 0;\r\n  background: #000;\r\n  opacity: ${({ open }) => open ? 0.7 : 0.0 };\r\n  transition: opacity 550ms;\r\n  pointer-events: ${({ open }) => open ? 'auto' : 'none' };\r\n`;\r\n\r\nconst DrawerContainer = styled.div<{ open: boolean }>`\r\n  position: relative;\r\n  top: 0px;\r\n  left: ${({ open, theme }) => (open ? '0px' : `-${theme.other.drawerWidth}`)};\r\n  width: ${({ theme }) => theme.other.drawerWidth};\r\n  height: 100%;\r\n  background: ${({ theme }) => theme.colors.background[0]};\r\n  transition: left 550ms;\r\n  transition-timing-function: cubic-bezier(.68, -0.21, .38, 1.26);\r\n  pointer-events: auto;\r\n`;\r\n\r\nconst DrawerToggle = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  top: 0px;\r\n  bottom: 0px;\r\n  right: -25px;\r\n  width: 25px;\r\n  background: ${({ theme }) => theme.colors.primary[6]};\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.primary[7]};\r\n  }\r\n`;\r\n\r\nconst ToggleLabel = styled(UnstyledButton)`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 0 0 auto;\r\n  right: -25px;\r\n  width: 30px;\r\n  height: 160px;\r\n  border-radius: 2px;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  background: ${({ theme }) => theme.colors.primary[6]};\r\n  color: ${({ theme }) => theme.white};\r\n  overflow: visible;\r\n  white-space: nowrap;\r\n\r\n  ${DrawerToggle}:hover & {\r\n    background: ${({ theme }) => theme.colors.primary[7]};\r\n  }\r\n\r\n  ::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: -24px;\r\n    right: 2px;\r\n    width: 50px;\r\n    height: 26px;\r\n    background: ${({ theme }) => theme.colors.primary[6]};\r\n    transform: rotate(50deg);\r\n    z-index: 1;\r\n\r\n    ${DrawerToggle}:hover & {\r\n      background: ${({ theme }) => theme.colors.primary[7]};\r\n    }\r\n  }\r\n\r\n  ::after {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: -24px;\r\n    right: 2px;\r\n    width: 50px;\r\n    height: 26px;\r\n    background: ${({ theme }) => theme.colors.primary[6]};\r\n    transform: rotate(-50deg);\r\n    z-index: 1;\r\n\r\n    ${DrawerToggle}:hover & {\r\n      background: ${({ theme }) => theme.colors.primary[7]};\r\n    }\r\n  }\r\n`;\r\n\r\nconst ToggleLabelText = styled.span`\r\n  position: absolute;\r\n  left: -16px;\r\n  z-index: 2;\r\n  writing-mode: vertical-rl;\r\n  text-orientation: mixed;\r\n`;\r\n\r\nconst ToggleLabelIcon = styled.span`\r\n  position: absolute;\r\n  left: 5px;\r\n  z-index: 2;\r\n`;\r\n\r\nconst Tooltip = styled(Paper)`\r\n  @keyframes lookAtMe {\r\n    from {\r\n      left: 84px;\r\n    }\r\n\r\n    to {\r\n      left: 80px;\r\n    }\r\n  }\r\n\r\n  animation: 300ms infinite alternate lookAtMe;\r\n\r\n  position: absolute;\r\n  left: 80px;\r\n  padding: 20px;\r\n  z-index: 3;\r\n  background: ${({ theme }) => theme.colors.info[6]};\r\n  border-radius: 2px;\r\n  pointer-events: none;\r\n\r\n  ::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: calc(50% - 10px);\r\n    left: -10px;\r\n    width: 20px;\r\n    height: 20px;\r\n    background: ${({ theme }) => theme.colors.info[6]};\r\n\r\n    transform: rotate(45deg);\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nconst TooltipText = styled(Text)`\r\n  width: 180px;\r\n  height: 40px;\r\n`;\r\n\r\nconst TooltipConfirmContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst TooltipConfirm = styled(UnstyledButton)`\r\n  pointer-events: auto;\r\n  color: ${({ theme }) => theme.white};\r\n  text-decoration: underline;\r\n`;\r\n\r\nconst DrawerContent = styled(Container)<{ fullyClosed: boolean }>`\r\n  visibility: ${({ fullyClosed }) => fullyClosed ? 'hidden' : 'visible'};\r\n  position: absolute;\r\n  top: 0px;\r\n  bottom: 0px;\r\n  left: 0px;\r\n  right: 0px;\r\n  padding: 10px;\r\n  padding-bottom: 30px;\r\n  overflow: auto;\r\n  overscroll-behavior: contain;\r\n`;\r\n","// import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Paper } from '@mantine/core';\r\n\r\nconst Card = styled(Paper)`\r\n  margin-bottom: 20px;\r\n  border-left: 5px solid ${({ theme }) => theme.colors.primary[6]};\r\n`;\r\n\r\nexport default Card;\r\n","// import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Text } from '@mantine/core';\r\nimport Card from '../Card';\r\n\r\nexport const Section = styled(Card)`\r\n  background: ${({ theme }) => theme.colors.background[1]};\r\n  box-shadow: 0px 0px 24px -6px #0F1011;\r\n  border: 3px solid ${({ theme }) => theme.colors.background[3]};\r\n  padding: 20px;\r\n`;\r\n\r\nexport const SectionDescription = styled(Text)`\r\n  margin-bottom: 20px;\r\n`;\r\n","import React from 'react';\r\nimport { Button, ButtonProps } from '@mantine/core';\r\nimport { Trash2 } from 'react-feather';\r\n\r\nconst TrashButton = (props: ButtonProps<React.ElementType<any>>) => {\r\n  return (\r\n    <Button { ...props} color='danger' style={{ ...(props?.style || {}), width: '36px', height: '36px', padding: '0px', flex: '0 0 auto' }}>\r\n      <Trash2 size={20} />\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default TrashButton;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button, Select, TextInput, Group, Divider, Title } from '@mantine/core';\r\nimport { items, recipes, resources } from '../../../../data';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\nimport { MAX_PRIORITY } from '../../../../contexts/production/reducer';\r\nimport { POINTS_ITEM_KEY } from '../../../../utilities/production-solver';\r\nimport { Section, SectionDescription } from '../../../../components/Section';\r\nimport TrashButton from '../../../../components/TrashButton';\r\n\r\nconst itemOptions = Object.keys(items)\r\n  .filter((key) => items[key].producedFromRecipes.length !== 0 && !resources[key])\r\n  .map((key) => ({\r\n    value: key,\r\n    label: items[key].name,\r\n  }))\r\n  .sort((a, b) => {\r\n    return a.label > b.label ? 1 : -1;\r\n  });\r\n\r\nitemOptions.unshift({\r\n  value: POINTS_ITEM_KEY,\r\n  label: 'AWESOME Sink Points (x1000)'\r\n});\r\n\r\nconst baseModeOptions = [\r\n  { value: 'per-minute', label: 'Items Per Min' },\r\n  { value: 'maximize', label: 'Maximize Output' },\r\n];\r\n\r\nconst priorityOptions = Array(MAX_PRIORITY)\r\n  .fill('')\r\n  .map((_, i) => ({ value: `${i + 1}`, label: `Priority: ${i + 1}` }))\r\n  .reverse();\r\n\r\nconst ProductionTab = () => {\r\n  const ctx = useProductionContext();\r\n\r\n  function renderItemInputs() {\r\n    return ctx.state.productionItems.map((data) => {\r\n      const modeOptions = [...baseModeOptions];\r\n      if (data.itemKey) {\r\n        const itemInfo = items[data.itemKey];\r\n        const recipeList = itemInfo?.producedFromRecipes || [];\r\n        recipeList.forEach((recipeKey) => {\r\n          const recipeInfo = recipes[recipeKey];\r\n          const target = recipeInfo?.products.find((p) => p.itemClass === data.itemKey);\r\n          if (target) {\r\n            const name = itemInfo.name === recipeInfo.name ? 'Base Recipe' : recipeInfo.name.replace('Alternate: ', '');\r\n            modeOptions.push({ value: recipeKey, label: `${name} [${target.perMinute}/min]` });\r\n          }\r\n        });\r\n      }\r\n      return (\r\n        <ItemContainer key={data.key}>\r\n          <Row>\r\n            <Select\r\n              placeholder='Select an item'\r\n              label='Item'\r\n              clearable\r\n              searchable\r\n              data={itemOptions}\r\n              value={data.itemKey ? data.itemKey : ''}\r\n              onChange={(value) => {\r\n                ctx.dispatch({\r\n                  type: 'SET_PRODUCTION_ITEM',\r\n                  data: { key: data.key, itemKey: (value as any) },\r\n                });\r\n              }}\r\n              style={{ flex: '1 1 auto' }}\r\n            />\r\n            <TrashButton onClick={() => { ctx.dispatch({ type: 'DELETE_PRODUCTION_ITEM', key: data.key }); }} style={{ position: 'relative', top: '13px' }} />\r\n          </Row>\r\n          <Row>\r\n            {\r\n              data.mode === 'maximize'\r\n                ? (\r\n                  <Select\r\n                    label='Priority'\r\n                    data={priorityOptions}\r\n                    value={data.value}\r\n                    onChange={(value) => {\r\n                      ctx.dispatch({\r\n                        type: 'SET_PRODUCTION_ITEM_AMOUNT',\r\n                        data: { key: data.key, amount: (value as any) },\r\n                      });\r\n                    }}\r\n                    style={{ width: '160px' }}\r\n                  />\r\n                )\r\n                : (\r\n                  <TextInput\r\n                    label='Amount'\r\n                    className='no-spinner'\r\n                    type='number'\r\n                    min='0'\r\n                    step='1'\r\n                    value={data.value}\r\n                    onChange={(e) => {\r\n                      ctx.dispatch({\r\n                        type: 'SET_PRODUCTION_ITEM_AMOUNT',\r\n                        data: { key: data.key, amount: e.currentTarget.value },\r\n                      });\r\n                    }}\r\n                    style={{ width: '160px' }}\r\n                  />\r\n                )\r\n            }\r\n            <Select\r\n              label='Mode'\r\n              data={modeOptions}\r\n              value={data.mode}\r\n              onChange={(value) => {\r\n                ctx.dispatch({\r\n                  type: 'SET_PRODUCTION_ITEM_MODE',\r\n                  data: { key: data.key, mode: (value as any) },\r\n                });\r\n              }}\r\n              style={{ width: '280px' }}\r\n            />\r\n          </Row>\r\n          <Divider style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n        </ItemContainer>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Title order={3}>Production Goals</Title>\r\n        <SectionDescription>\r\n          Select the items you want to produce. When maximizing multiple outputs, higher priority items will be maximized first. When selecting a recipe as a target, the factory will be forced to use that recipe for the final output.\r\n        </SectionDescription>\r\n        {renderItemInputs()}\r\n        <Button onClick={() => { ctx.dispatch({ type: 'ADD_PRODUCTION_ITEM' }) }}>\r\n          + Add Product\r\n        </Button>\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductionTab;\r\n\r\nconst Row = styled(Group)`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Info } from 'react-feather';\r\nimport { Tooltip } from '@mantine/core';\r\n\r\ninterface Props {\r\n  label: string,\r\n  tooltip: string,\r\n}\r\n\r\nconst LabelWithTooltip = (props: Props) => {\r\n  const { label, tooltip } = props;\r\n  \r\n  return (\r\n    <Label>\r\n      {label}{' '}\r\n      <Tooltip\r\n        label={tooltip}\r\n        withArrow\r\n        color='dark'\r\n        width={230}\r\n        wrapLines\r\n        arrowSize={8}\r\n      >\r\n        <Info size={12} />\r\n      </Tooltip>\r\n    </Label>\r\n  );\r\n};\r\n\r\nexport default LabelWithTooltip;\r\n\r\nconst Label = styled.div`\r\n  position: relative;\r\n  cursor: pointer;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button, Select, TextInput, Checkbox, Group, Title, Divider, Text } from '@mantine/core';\r\nimport { items, resources } from '../../../../data';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\nimport TrashButton from '../../../../components/TrashButton';\r\nimport { Section, SectionDescription } from '../../../../components/Section';\r\nimport LabelWithTooltip from '../../../../components/LabelWithTooltip';\r\n\r\nconst itemOptions = Object.keys(items)\r\n  .filter((key) => items[key].producedFromRecipes.length !== 0 && items[key].usedInRecipes.length !== 0 && !resources[key])\r\n  .map((key) => ({\r\n    value: key,\r\n    label: items[key].name,\r\n  }))\r\n  .sort((a, b) => {\r\n    return a.label > b.label ? 1 : -1;\r\n  });\r\n\r\n\r\nconst InputsTab = () => {\r\n  const ctx = useProductionContext();\r\n\r\n  function renderItemInputs() {\r\n    return ctx.state.inputItems.map((data) => (\r\n      <ItemContainer key={data.key}>\r\n        <Row>\r\n          <Select\r\n            placeholder=\"Select an item\"\r\n            label='Item'\r\n            clearable\r\n            searchable\r\n            data={itemOptions}\r\n            value={data.itemKey ? data.itemKey : ''}\r\n            onChange={(value) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_ITEM',\r\n                data: { ...data, itemKey: (value as string) },\r\n              });\r\n            }}\r\n            style={{ flex: '1 1 auto' }}\r\n          />\r\n          <TrashButton onClick={() => { ctx.dispatch({ type: 'DELETE_INPUT_ITEM', key: data.key }); }} style={{ position: 'relative', top: '13px' }} />\r\n        </Row>\r\n        <Row>\r\n          <TextInput\r\n            label='Amount'\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            disabled={data.unlimited}\r\n            value={data.value}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_ITEM',\r\n                data: { ...data, value: e.currentTarget.value },\r\n              });\r\n            }}\r\n          />\r\n          <Checkbox\r\n            className='label'\r\n            label='Unlimited'\r\n            checked={data.unlimited}\r\n            onChange={() => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_ITEM',\r\n                data: { ...data, unlimited: !data.unlimited },\r\n              });\r\n            }}\r\n            style={{ position: 'relative', top: '13px' }}\r\n          />\r\n        </Row>\r\n        <Divider style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n      </ItemContainer>\r\n    ));\r\n  }\r\n\r\n  function renderWeightInputs() {\r\n    const weightingOptions = ctx.state.weightingOptions;\r\n    return (\r\n      <>\r\n        <Group grow>\r\n          <TextInput\r\n            label={<LabelWithTooltip label='Resource Efficiency' tooltip='This weighting prioritizes using as few resources as possible.' />}\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={weightingOptions.resources}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_WEIGHTING_OPTIONS',\r\n                data: { ...weightingOptions, resources: e.currentTarget.value },\r\n              });\r\n            }}\r\n          />\r\n          <TextInput\r\n            label={<LabelWithTooltip label='Power Efficiency' tooltip='This weighting prioritizes using as little power as possible.' />}\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={weightingOptions.power}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_WEIGHTING_OPTIONS',\r\n                data: { ...weightingOptions, power: e.currentTarget.value },\r\n              });\r\n            }}\r\n          />\r\n        </Group>\r\n        <Group grow style={{ marginTop: '10px' }}>\r\n          <TextInput\r\n            label={<LabelWithTooltip label='Complexity' tooltip='This weighting prioritizes reducing the number of inputs into each building. May not behave intuitively (WIP).' />}\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={weightingOptions.complexity}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_WEIGHTING_OPTIONS',\r\n                data: { ...weightingOptions, complexity: e.currentTarget.value },\r\n              });\r\n            }}\r\n          />\r\n          <TextInput\r\n            label={<LabelWithTooltip label='Buildings' tooltip='This weighting prioritizes using as few buildings as possible, discounting overclocking. May not be perfectly optimal, especially for smaller factories (WIP).' />}\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={weightingOptions.buildings}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_WEIGHTING_OPTIONS',\r\n                data: { ...weightingOptions, buildings: e.currentTarget.value },\r\n              });\r\n            }}\r\n          />\r\n        </Group>\r\n      </>\r\n    )\r\n  }\r\n\r\n  function renderResourceInputs() {\r\n    return ctx.state.inputResources.map((data) => (\r\n      <ItemContainer key={data.key}>\r\n        <Row>\r\n          <Text style={{ fontWeight: 'bold' }}>{items[data.itemKey].name}</Text>\r\n        </Row>\r\n        <Row>\r\n          <TextInput\r\n            label='Amount'\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={data.value}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_RESOURCE',\r\n                data: { ...data, value: e.currentTarget.value },\r\n              });\r\n            }}\r\n            disabled={data.unlimited}\r\n            style={{ flex: '1 1 auto' }}\r\n          />\r\n          <Checkbox\r\n            label='Unlimited'\r\n            checked={data.unlimited}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_RESOURCE',\r\n                data: { ...data, unlimited: e.currentTarget.checked },\r\n              });\r\n            }}\r\n            style={{ position: 'relative', top: '13px', flex: '1 1 auto' }}\r\n          />\r\n          <TextInput\r\n            label='Weight'\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={data.weight}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_RESOURCE',\r\n                data: { ...data, weight: e.currentTarget.value },\r\n              });\r\n            }}\r\n            style={{ flex: '0 0 100px' }}\r\n          />\r\n        </Row>\r\n        <Divider style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n      </ItemContainer>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Title order={3}>Input Items</Title>\r\n        <SectionDescription>\r\n          Select the items that you already have available and don't need to produce in this factory.\r\n        </SectionDescription>\r\n        {renderItemInputs()}\r\n        <Button onClick={() => { ctx.dispatch({ type: 'ADD_INPUT_ITEM' }) }}>\r\n          + Add Input\r\n        </Button>\r\n      </Section>\r\n      <Section>\r\n        <Title order={3}>Weighting Options</Title>\r\n        <SectionDescription>\r\n          Adjust the weights affecting the importance of various properties of the factory. A value of 0 indicates that that property is not considered during factory layout.\r\n        </SectionDescription>\r\n        {renderWeightInputs()}\r\n        <Button color='danger' onClick={() => { ctx.dispatch({ type: 'SET_ALL_WEIGHTS_DEFAULT' }) }} style={{ marginTop: '15px' }}>\r\n          Reset All Weights\r\n        </Button>\r\n      </Section>\r\n      <Section>\r\n        <Title order={3}>Raw Resources</Title>\r\n        <SectionDescription>\r\n          Select the raw resources that are available to your factory. The default values are set to the map limits. The weight value is a number representing how valuable that resource is when comparing recipes. The defaults are calculated automatically according to node rarity.\r\n        </SectionDescription>\r\n        <Group style={{ marginBottom: '15px' }}>\r\n          <Button color='danger' onClick={() => { ctx.dispatch({ type: 'SET_RESOURCES_TO_MAP_LIMITS' }) }}>\r\n            Set All To Maximum\r\n          </Button>\r\n          <Button color='danger' onClick={() => { ctx.dispatch({ type: 'SET_RESOURCES_TO_0' }) }}>\r\n            Set All To 0\r\n          </Button>\r\n        </Group>\r\n        <Checkbox\r\n          label='Allow hand-gathered resources (mycelia, flower petals, etc)'\r\n          checked={ctx.state.allowHandGatheredItems}\r\n          onChange={(e) => { ctx.dispatch({ type: 'SET_ALLOW_HAND_GATHERED_ITEMS', active: e.currentTarget.checked }) }}\r\n          style={{ marginBottom: '25px' }}\r\n          />\r\n        {renderResourceInputs()}\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsTab;\r\n\r\nconst Row = styled(Group)`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n","import React, { useState, useMemo, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { List, Checkbox, TextInput, Button, Group, Title, Grid, Col } from '@mantine/core';\r\nimport { Search } from 'react-feather';\r\nimport { recipes } from '../../../../data';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\nimport { Section, SectionDescription } from '../../../../components/Section';\r\n\r\nconst cleanAltNameRegex = /^Alternate: /;\r\nconst baseRecipes: { key: string, label: string }[] = [];\r\nconst altRecipes: { key: string, label: string }[] = [];\r\nObject.entries(recipes)\r\n  .forEach(([key, data]) => {\r\n    if (data.isAlternate) {\r\n      altRecipes.push({\r\n        key,\r\n        label: data.name.replace(cleanAltNameRegex, ''),\r\n      });\r\n    } else {\r\n      baseRecipes.push({\r\n        key,\r\n        label: data.name,\r\n      });\r\n    }\r\n  });\r\nbaseRecipes.sort((a, b) => (a.label > b.label ? 1 : -1));\r\naltRecipes.sort((a, b) => (a.label > b.label ? 1 : -1));\r\n\r\nconst RecipesTab = () => {\r\n  const ctx = useProductionContext();\r\n  const [searchValue, setSearchValue] = useState('');\r\n\r\n  const renderRecipeList = useCallback((recipeList: { key: string, label: string }[]) => {\r\n    return recipeList.map(({ key, label }) => ({\r\n      key,\r\n      label,\r\n      component: (\r\n        <List.Item key={key}>\r\n          <Checkbox\r\n            label={label}\r\n            checked={ctx.state.allowedRecipes[key]}\r\n            onChange={() => {\r\n              ctx.dispatch({\r\n                type: 'SET_RECIPE_ACTIVE',\r\n                key,\r\n                active: !ctx.state.allowedRecipes[key],\r\n              });\r\n            }}\r\n          />\r\n        </List.Item>\r\n      )\r\n    }));\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ctx.state, ctx.dispatch]);\r\n\r\n  const renderedBaseRecipes = useMemo(() => renderRecipeList(baseRecipes), [renderRecipeList]);\r\n  const renderedAltRecipes = useMemo(() => renderRecipeList(altRecipes), [renderRecipeList]);\r\n\r\n  function renderRecipeOptions(alternates: boolean) {\r\n    const renderedRecipes = alternates ? renderedAltRecipes : renderedBaseRecipes;\r\n    const filteredRecipes = renderedRecipes.filter(({ label }) => label.toLowerCase().includes(searchValue.toLowerCase()));\r\n    const filteredRecipeKeys = filteredRecipes.map(({ key }) => key);\r\n    return (\r\n      <>\r\n        <Group style={{ marginTop: '5px', marginBottom: '10px' }}>\r\n          <Button onClick={() => { ctx.dispatch({ type: 'MASS_SET_RECIPES_ACTIVE', recipes: filteredRecipeKeys, active: true }) }}>\r\n            Select All\r\n          </Button>\r\n          <Button onClick={() => { ctx.dispatch({ type: 'MASS_SET_RECIPES_ACTIVE', recipes: filteredRecipeKeys, active: false }) }}>\r\n            Select None\r\n          </Button>\r\n        </Group>\r\n        <List listStyleType='none' spacing={6}>\r\n          {filteredRecipes.map(({ component }) => component)}\r\n        </List>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Title order={3}>Recipes</Title>\r\n        <SectionDescription>\r\n          Select the recipes that you want to be considered in this factory.\r\n        </SectionDescription>\r\n        <TextInput\r\n          placeholder='Search...'\r\n          aria-label='search recipes'\r\n          icon={<Search size={16} />}\r\n          value={searchValue}\r\n          onChange={(e) => { setSearchValue(e.currentTarget.value); }}\r\n          style={{ marginBottom: '10px' }}\r\n        />\r\n        <Grid grow style={{ position: 'relative' }}>\r\n          <Col span={6}>\r\n            <Title order={3}>Alternate Recipes</Title>\r\n            {renderRecipeOptions(true)}\r\n          </Col>\r\n          <Col span={6}>\r\n            <Title order={3}>Base Recipes</Title>\r\n            {renderRecipeOptions(false)}\r\n          </Col>\r\n          <VDivider />\r\n        </Grid>\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipesTab;\r\n\r\nconst VDivider = styled.div`\r\n  position: absolute;\r\n  top: 20px;\r\n  bottom: 20px;\r\n  left: 255px;\r\n  width: 1px;\r\n  background: ${({ theme }) => theme.colors.background[3]};\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container, Tabs, Paper, Title, Divider, Group, Button, Switch } from '@mantine/core';\r\nimport { TrendingUp, Shuffle, Box } from 'react-feather';\r\nimport { useProductionContext } from '../../../contexts/production';\r\nimport ProductionTab from './ProductionTab';\r\nimport InputsTab from './InputsTab';\r\nimport RecipesTab from './RecipesTab';\r\n\r\nconst PlannerOptions = () => {\r\n  const ctx = useProductionContext();\r\n  \r\n  return (\r\n    <>\r\n      <Paper style={{ marginBottom: '20px', paddingTop: '10px' }}>\r\n        <Title order={2}>Control Panel</Title>\r\n        <Divider style={{ marginTop: '5px', marginBottom: '15px' }} />\r\n        <Group style={{ marginBottom: '15px' }}>\r\n          <Button\r\n            onClick={() => { ctx.calculate(); }}\r\n            disabled={ctx.autoCalculate}\r\n            style={{ marginRight: '15px' }}\r\n          >\r\n            Calculate\r\n          </Button>\r\n          <Button\r\n            color='danger'\r\n            onClick={() => { ctx.dispatch({ type: 'RESET_FACTORY' }) }}\r\n          >\r\n            Reset ALL Factory Options\r\n          </Button>\r\n        </Group>\r\n        <Switch\r\n          size='md'\r\n          label='Auto-calculate (turn this off if changing options is too slow)'\r\n          checked={ctx.autoCalculate}\r\n          onChange={(e) => { ctx.setAutoCalculate(e.currentTarget.checked); }}\r\n        />\r\n      </Paper>\r\n      <Tabs grow variant='outline'>\r\n        <Tabs.Tab label='Production' icon={<TrendingUp size={18} />}>\r\n          <TabContainer fluid>\r\n            <ProductionTab />\r\n          </TabContainer>\r\n        </Tabs.Tab>\r\n        <Tabs.Tab label='Inputs' icon={<Shuffle size={18} />}>\r\n          <TabContainer fluid>\r\n            <InputsTab />\r\n          </TabContainer>\r\n        </Tabs.Tab>\r\n        <Tabs.Tab label='Recipes' icon={<Box size={18} />}>\r\n          <TabContainer fluid>\r\n            <RecipesTab />\r\n          </TabContainer>\r\n        </Tabs.Tab>\r\n      </Tabs>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlannerOptions;\r\n\r\nconst TabContainer = styled(Container)`\r\n  padding: 15px 15px;\r\n  background: ${({ theme }) => theme.colors.background[1]}\r\n`;\r\n","import { MantineThemeOverride } from '@mantine/core';\r\n// import { gradientFromColor } from './utilities/color';\r\n\r\nconst defaultFont = \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\";\r\n\r\nconst baseSat = '77%';\r\nconst baseLight = '63%';\r\nconst selectSat = '58%';\r\nconst selectLight = '58%';\r\n\r\n\r\nexport const graphColors = {\r\n  // nodes\r\n  resource: { base: `hsl(31, ${baseSat}, ${baseLight})`, selected: `hsl(31, ${selectSat}, ${selectLight})` },\r\n  input: { base: `hsl(0, ${baseSat}, ${baseLight})`, selected: `hsl(0, ${selectSat}, ${selectLight})` },\r\n  handGathered: { base: `hsl(261, ${baseSat}, ${baseLight})`, selected: `hsl(261, ${selectSat}, ${selectLight})` },\r\n  sideProduct: { base: `hsl(311, ${baseSat}, ${baseLight})`, selected: `hsl(311, ${selectSat}, ${selectLight})` },\r\n  finalProduct: { base: `hsl(128, ${baseSat}, ${baseLight})`, selected: `hsl(128, ${selectSat}, ${selectLight})` },\r\n  recipe: { base: `hsl(197, ${baseSat}, ${baseLight})`, selected: `hsl(197, ${selectSat}, ${selectLight})` },\r\n  nuclear: { base: `hsl(50, ${baseSat}, ${baseLight})`, selected: `hsl(50, ${selectSat}, ${selectLight})` },\r\n\r\n  // edges\r\n  edge: { line: '#999999', label: '#eeeeee' },\r\n  incoming: { line: `hsl(31, ${baseSat}, ${baseLight})`, label: `hsl(31, ${baseSat}, ${baseLight})` },\r\n  outgoing: { line: `hsl(128, ${baseSat}, ${baseLight})`, label: `hsl(128, ${baseSat}, ${baseLight})` },\r\n}\r\n\r\nexport const theme: MantineThemeOverride = {\r\n  primaryColor: 'primary',\r\n  colors: {\r\n    'primary': [\"#fcebde\", \"#f9d8be\", \"#f7c59f\", \"#f4b17f\", \"#f19e60\", \"#ef8b40\", \"#ec7821\", \"#c4631c\", \"#94501e\", \"#673c1c\"],\r\n    'danger': [\"#fdb5b5\", \"#fda3a3\", \"#fc9191\", \"#fc7e7e\", \"#fb6c6c\", \"#fa5959\", \"#fa4747\", \"#f12929\", \"#dc1818\", \"#b21b1b\"],\r\n    'background': [\"#26282b\", \"#373b40\", \"#3f434a\", \"#50565e\", \"#6c7582\", \"#ffffff\", \"#ffffff\", \"#ffffff\", \"#b3b6ba\", \"#ffffff\"],\r\n    'info': Array(10).fill('#3065c7') as any,\r\n  },\r\n  white: '#eee',\r\n  fontFamily: defaultFont,\r\n  radius: { xs: 0, sm: 2, md: 4, lg: 8, xl: 16 },\r\n  headings: {\r\n    fontFamily: defaultFont,\r\n    fontWeight: 700,\r\n    sizes: {\r\n      h1: { fontSize: 36, lineHeight: 1.3 },\r\n      h2: { fontSize: 30, lineHeight: 1.35 },\r\n      h3: { fontSize: 22, lineHeight: 1.4 },\r\n      h4: { fontSize: 18, lineHeight: 1.45 },\r\n      h5: { fontSize: 16, lineHeight: 1.5 },\r\n      h6: { fontSize: 14, lineHeight: 1.5 },\r\n    }\r\n  },\r\n  other: {\r\n    headerHeight: '64px',\r\n    pageLeftMargin: '55px',\r\n    drawerWidth: '620px',\r\n    drawerZIndex: '10',\r\n    tooltipZIndex: '9999',\r\n    scrollbarTrackColor: '#212226',\r\n    scrollbarThumbColor: '#6c6c73',\r\n  },\r\n};\r\n\r\n\r\nexport const styles: any = {\r\n  AppShell: (theme: any) => ({\r\n    root: {\r\n      minHeight: '100vh',\r\n    }\r\n  }),\r\n  Paper: (theme: any) => ({\r\n    root: {\r\n      background: theme.colors.background[1],\r\n      padding: '15px',\r\n    }\r\n  }),\r\n  Text: (theme: any) => ({\r\n    root: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  Title: (theme: any) => ({\r\n    root: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  List: (theme: any) => ({\r\n    item: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  Anchor: (theme: any) => ({\r\n    root: {\r\n      color: theme.colors.primary[6],\r\n    }\r\n  }),\r\n  Select: (theme: any) => ({\r\n    label: {\r\n      color: theme.white,\r\n    },\r\n    item: {\r\n      borderRadius: '0px',\r\n    },\r\n    hovered: {\r\n      background: theme.colors.background[8],\r\n    },\r\n    selected: {\r\n      color: theme.white,\r\n      background: theme.colors.primary[5],\r\n    },\r\n  }),\r\n  TextInput: (theme: any) => ({\r\n    label: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  Checkbox: (theme: any) => ({\r\n    label: {\r\n      cursor: 'pointer',\r\n      color: theme.white,\r\n    },\r\n    input: {\r\n      cursor: 'pointer',\r\n    }\r\n  }),\r\n  Switch: (theme: any) => ({\r\n    label: {\r\n      cursor: 'pointer',\r\n      color: theme.white,\r\n    },\r\n    input: {\r\n      cursor: 'pointer',\r\n      background: theme.colors.background[1],\r\n      borderWidth: '2px',\r\n      '&:checked': {\r\n        background: theme.colors.primary[6],\r\n        borderColor: theme.colors.primary[6],\r\n      }\r\n    }\r\n  }),\r\n  Divider: (theme: any) => ({\r\n    horizontal: {\r\n      borderTopColor: theme.colors.background[3],\r\n    }\r\n  }),\r\n  Button: (theme: any) => ({\r\n    root: {\r\n      color: '#fff',\r\n      '&[disabled]': {\r\n        color: `${theme.white} !important`,\r\n        backgroundColor: `${theme.colors.primary[6]} !important`,\r\n        opacity: 0.5,\r\n      }\r\n    }\r\n  }),\r\n  Tabs: (theme: any) => ({\r\n    tabLabel: {\r\n      color: theme.white,\r\n      fontFamily: \"'M PLUS 1 Code', sans-serif\",\r\n      fontSize: '16px',\r\n    },\r\n    tabIcon: {\r\n      color: theme.white,\r\n    },\r\n    tabActive: {\r\n      background: `${theme.colors.background[1]} !important`,\r\n      borderBottomWidth: `0px !important`,\r\n    },\r\n    body: {\r\n      paddingTop: '0px',\r\n      background: theme.colors.background[0],\r\n      borderBottomLeftRadius: '2px',\r\n      borderBottomRightRadius: '2px',\r\n    },\r\n  }),\r\n  Tooltip: (theme: any) => ({\r\n    body: {\r\n      background: theme.colors.background[2],\r\n      border: '1px solid #aaa',\r\n    },\r\n    arrow: {\r\n      background: theme.colors.background[2],\r\n      borderBottom: '1px solid #aaa',\r\n      borderRight: '1px solid #aaa',\r\n    }\r\n  }),\r\n};\r\n","export function truncateFloat(n: number, places: number = 4) {\r\n  return n.toFixed(places).replace(/\\.?0+$/, '');\r\n}\r\n","import React, { forwardRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Title, Text, Divider, List, useMantineTheme, Paper } from '@mantine/core';\r\nimport { buildings, items, recipes } from '../../data';\r\nimport { truncateFloat } from '../../utilities/number';\r\nimport { NODE_TYPE } from '../../utilities/production-solver';\r\nimport { NodeData } from '../../containers/ProductionPlanner/PlannerResults/ProductionGraphTab';\r\nimport Portal from '../Portal';\r\n\r\ninterface Props {\r\n  currentNode: any | null,\r\n}\r\n\r\nconst GraphTooltip = forwardRef<HTMLDivElement, Props>((props, ref) => {\r\n  const { currentNode } = props;\r\n  const theme = useMantineTheme();\r\n\r\n  function renderInner() {\r\n    const data = currentNode.data() as NodeData;\r\n    if (data.type === NODE_TYPE.RECIPE) {\r\n      return renderRecipeInfo(data);\r\n    }\r\n    if (data.type === NODE_TYPE.RESOURCE) {\r\n      if (data.key === 'Desc_Water_C') {\r\n        return renderWaterExtractorInfo(data);\r\n      } else if (data.key === 'Desc_LiquidOil_C') {\r\n        return renderOilExtractorInfo(data);\r\n      } else if (data.key === 'Desc_NitrogenGas_C') {\r\n        return null;\r\n      }\r\n      return renderMinerInfo(data);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function renderRecipeInfo(data: NodeData) {\r\n    const recipeInfo = recipes[data.key];\r\n    const primaryProduct = recipeInfo.products[0];\r\n\r\n    const totalBuildings = Math.ceil(data.multiplier);\r\n    const clockPercentage = data.multiplier / totalBuildings * 100;\r\n    const itemsPerMinPerBuilding = primaryProduct.perMinute * data.multiplier / totalBuildings;\r\n\r\n    return (\r\n      <Tooltip>\r\n        <TooltipTitle order={3}>Recipe: [{recipeInfo.name}]</TooltipTitle>\r\n        <TooltipDivider />\r\n        <TooltipText>\r\n          <b>Buildings:</b> {totalBuildings}x {buildings[recipeInfo.producedIn].name}\r\n        </TooltipText>\r\n        <TooltipText>\r\n          <b>Clock speed:</b> {truncateFloat(clockPercentage)}% each\r\n        </TooltipText>\r\n        <TooltipText>\r\n          <b>Items per min:</b> {truncateFloat(itemsPerMinPerBuilding)} each\r\n        </TooltipText>\r\n        <TooltipDivider />\r\n        <TooltipText><b>Inputs:</b></TooltipText>\r\n        <List listStyleType='none' withPadding>\r\n          {\r\n            recipeInfo.ingredients.map((ingredient) => (\r\n              <List.Item>\r\n                <TooltipText>{items[ingredient.itemClass].name}: {truncateFloat(ingredient.perMinute * data.multiplier)} / min</TooltipText>\r\n              </List.Item>\r\n            ))\r\n          }\r\n        </List>\r\n        <TooltipText><b>Outputs:</b></TooltipText>\r\n        <List listStyleType='none' withPadding>\r\n          {\r\n            recipeInfo.products.map((product) => (\r\n              <List.Item>\r\n                <TooltipText>{items[product.itemClass].name}: {truncateFloat(product.perMinute * data.multiplier)} / min</TooltipText>\r\n              </List.Item>\r\n            ))\r\n          }\r\n        </List>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  function renderMinerInfo(data: NodeData) {\r\n    const itemInfo = items[data.key];\r\n    const baseNumMiners = data.multiplier / 60;\r\n    return (\r\n      <Tooltip>\r\n        <TooltipTitle order={3}>Resource: [{itemInfo.name}]</TooltipTitle>\r\n        <TooltipDivider />\r\n        <TooltipText><b>Miners required (assuming normal nodes):</b></TooltipText>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>100%</th>\r\n              <th>150%</th>\r\n              <th>200%</th>\r\n              <th>250%</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th>Mk. 1</th>\r\n              <td>{truncateFloat(baseNumMiners, 2)}x</td>\r\n              <td>{truncateFloat(baseNumMiners / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(baseNumMiners / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(baseNumMiners / 2.5, 2)}x</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Mk. 2</th>\r\n              <td>{truncateFloat(0.5 * baseNumMiners, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumMiners / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumMiners / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumMiners / 2.5, 2)}x</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Mk. 3</th>\r\n              <td>{truncateFloat(0.25 * baseNumMiners, 2)}x</td>\r\n              <td>{truncateFloat(0.25 * baseNumMiners / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(0.25 * baseNumMiners / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(0.25 * baseNumMiners / 2.5, 2)}x</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  function renderWaterExtractorInfo(data: NodeData) {\r\n    const itemInfo = items[data.key];\r\n    return (\r\n      <Tooltip>\r\n        <TooltipTitle order={3}>Resource: [{itemInfo.name}]</TooltipTitle>\r\n        <TooltipDivider />\r\n        <TooltipText><b>Extractors required:</b> {truncateFloat(data.multiplier / 120, 2)}x Water Extractor</TooltipText>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  function renderOilExtractorInfo(data: NodeData) {\r\n    const itemInfo = items[data.key];\r\n    const baseNumExtractors = data.multiplier / 120;\r\n    return (\r\n      <Tooltip>\r\n        <TooltipTitle order={3}>Resource: [{itemInfo.name}]</TooltipTitle>\r\n        <TooltipDivider />\r\n        <TooltipText><b>Extractors required:</b></TooltipText>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>100%</th>\r\n              <th>150%</th>\r\n              <th>200%</th>\r\n              <th>250%</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th>Impure</th>\r\n              <td>{truncateFloat(2.0 * baseNumExtractors, 2)}x</td>\r\n              <td>{truncateFloat(2.0 * baseNumExtractors / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(2.0 * baseNumExtractors / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(2.0 * baseNumExtractors / 2.5, 2)}x</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Normal</th>\r\n              <td>{truncateFloat(baseNumExtractors, 2)}x</td>\r\n              <td>{truncateFloat(baseNumExtractors / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(baseNumExtractors / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(baseNumExtractors / 2.5, 2)}x</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Pure</th>\r\n              <td>{truncateFloat(0.5 * baseNumExtractors, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumExtractors / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumExtractors / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumExtractors / 2.5, 2)}x</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Portal ref={ref} createRoot style={{ zIndex: theme.other.tooltipZIndex, pointerEvents: 'none' }}>\r\n      {currentNode ? renderInner() : null}\r\n    </Portal>\r\n  );\r\n});\r\n\r\nexport default GraphTooltip;\r\n\r\nconst Tooltip = styled(Paper)`\r\n  position: relative;\r\n  bottom: 50px;\r\n  background: ${({ theme }) => theme.colors.background[2]};\r\n  border: 1px solid #aaa;\r\n  min-width: 300px;\r\n\r\n  ::before {\r\n    content: '';\r\n    position: absolute;\r\n    left: calc(50% - 10px);\r\n    bottom: -12px;\r\n    width: 20px;\r\n    height: 20px;\r\n    background: ${({ theme }) => theme.colors.background[2]};\r\n    border-bottom: 1px solid #aaa;\r\n    border-right: 1px solid #aaa;\r\n\r\n    transform: rotate(45deg);\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nconst TooltipTitle = styled(Title)`\r\n  font-size: 16px;\r\n`;\r\n\r\nconst TooltipText = styled(Text)`\r\n  font-size: 15px;\r\n`;\r\n\r\nconst TooltipDivider = styled(Divider)`\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  border-top-color: ${({ theme }) => theme.colors.background[4]};\r\n`;\r\n\r\nconst Table = styled.table`\r\n  color: ${({ theme }) => theme.white};\r\n  border-collapse: collapse;\r\n\r\n  & th, td {\r\n    padding: 10px;\r\n    text-align: left;\r\n    font-size: 15px;\r\n  }\r\n\r\n  & td {\r\n    border: 1px solid ${({ theme }) => theme.colors.background[4]};\r\n  }\r\n\r\n  & tr:nth-child(2n) td {\r\n    background: ${({ theme }) => theme.colors.background[3]};\r\n  }\r\n`;\r\n","import React, { useMemo, useRef, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { nanoid } from 'nanoid';\r\nimport Cytoscape, { Stylesheet } from 'cytoscape';\r\nimport klay from 'cytoscape-klay';\r\nimport GraphVisualizer from 'react-cytoscapejs';\r\nimport popper from 'cytoscape-popper';\r\nimport { Text, Container, Center, Group } from '@mantine/core';\r\nimport { AlertCircle } from 'react-feather';\r\nimport { ProductionGraph, GraphNode, GraphEdge, NODE_TYPE } from '../../../../utilities/production-solver';\r\nimport { items, recipes, buildings } from '../../../../data';\r\nimport { graphColors } from '../../../../theme';\r\nimport GraphTooltip from '../../../../components/GraphTooltip';\r\nimport { truncateFloat } from '../../../../utilities/number';\r\nimport { GraphError } from '../../../../utilities/error/GraphError';\r\n\r\nCytoscape.use(popper);\r\nCytoscape.use(klay);\r\n\r\nif (process.env.NODE_ENV !== 'development') {\r\n  Cytoscape.warnings(false);\r\n}\r\n\r\nconst layout = {\r\n  name: 'klay',\r\n  padding: 40,\r\n  klay: {\r\n    direction: 'RIGHT',\r\n    edgeRouting: 'ORTHOGONAL',\r\n    nodePlacement: 'LINEAR_SEGMENTS',\r\n    edgeSpacingFactor: 0.2,\r\n    inLayerSpacingFactor: 0.7,\r\n    spacing: 90,\r\n    thoroughness: 10,\r\n  },\r\n};\r\n\r\nconst stylesheet: Stylesheet[] = [\r\n  {\r\n    // ====== BASE ====== //\r\n    selector: 'core',\r\n    style: {\r\n      'active-bg-color': '#000',\r\n      'active-bg-opacity': 0,\r\n      'active-bg-size': 0,\r\n      'selection-box-color': '#000',\r\n      'selection-box-border-color': '#000',\r\n      'selection-box-border-width': 0,\r\n      'selection-box-opacity': 0,\r\n      'outside-texture-bg-color': '#000',\r\n      'outside-texture-bg-opacity': 0,\r\n    },\r\n  },\r\n  {\r\n    selector: 'node',\r\n    style: {\r\n      'label': 'data(label)',\r\n      'text-valign': 'center',\r\n      'text-halign': 'center',\r\n      'height': '30px',\r\n      'width': '150px',\r\n      'text-max-width': '157px',\r\n      'padding-top': '20px',\r\n      'overlay-padding': 0,\r\n      'overlay-opacity': 0,\r\n      'text-wrap': 'wrap',\r\n      'font-size': '14px',\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge',\r\n    style: {\r\n      'label': 'data(label)',\r\n      'width': 1,\r\n      'curve-style': 'bezier',\r\n      'control-point-step-size': 100,\r\n      'target-arrow-shape': 'triangle-backcurve',\r\n      'arrow-scale': 1.2,\r\n      'overlay-padding': 0,\r\n      'overlay-opacity': 0,\r\n      'text-wrap': 'wrap',\r\n      'font-size': '14px',\r\n      'color': graphColors.edge.label,\r\n      'line-color': graphColors.edge.line,\r\n      'target-arrow-color': graphColors.edge.line,\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge.loop',\r\n    style: {\r\n      'loop-direction': '180deg',\r\n      'loop-sweep': '-40deg',\r\n      'edge-distances': 'node-position',\r\n      'source-endpoint': '-15% 50%',\r\n      'target-endpoint': '15% 50%',\r\n    },\r\n  },\r\n\r\n\r\n  // ====== NODES ====== //\r\n  {\r\n    selector: 'node.item-shape',\r\n    style: {\r\n      'shape': 'ellipse',\r\n      'height': '40px',\r\n      'width': '130px',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.recipe-shape',\r\n    style: {\r\n      'shape': 'round-rectangle',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.selected, node.grabbed',\r\n    style: {\r\n      'z-index': 100,\r\n      'height': '45px',\r\n      'width': '195px',\r\n      'text-max-width': '192px',\r\n      'font-size': '16px',\r\n      'font-weight': 'bold',\r\n      'border-width': 2,\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.item-shape.selected, node.item-shape.grabbed',\r\n    style: {\r\n      'height': '55px',\r\n      'width': '170px',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.resource',\r\n    style: { 'background-color': graphColors.resource.base },\r\n  },\r\n  {\r\n    selector: 'node.resource.selected, node.resource.grabbed',\r\n    style: { 'background-color': graphColors.resource.selected },\r\n  },\r\n  {\r\n    selector: 'node.input',\r\n    style: { 'background-color': graphColors.input.base },\r\n  },\r\n  {\r\n    selector: 'node.input.selected, node.input.grabbed',\r\n    style: { 'background-color': graphColors.input.selected },\r\n  },\r\n  {\r\n    selector: 'node.hand-gathered',\r\n    style: { 'background-color': graphColors.handGathered.base },\r\n  },\r\n  {\r\n    selector: 'node.hand-gathered.selected, node.hand-gathered.grabbed',\r\n    style: { 'background-color': graphColors.handGathered.selected },\r\n  },\r\n  {\r\n    selector: 'node.side-product',\r\n    style: { 'background-color': graphColors.sideProduct.base },\r\n  },\r\n  {\r\n    selector: 'node.side-product.selected, node.side-product.grabbed',\r\n    style: { 'background-color': graphColors.sideProduct.selected },\r\n  },\r\n  {\r\n    selector: 'node.final-product',\r\n    style: { 'background-color': graphColors.finalProduct.base },\r\n  },\r\n  {\r\n    selector: 'node.final-product.selected, node.final-product.grabbed',\r\n    style: { 'background-color': graphColors.finalProduct.selected },\r\n  },\r\n  {\r\n    selector: 'node.recipe',\r\n    style: { 'background-color': graphColors.recipe.base },\r\n  },\r\n  {\r\n    selector: 'node.recipe.selected, node.recipe.grabbed',\r\n    style: { 'background-color': graphColors.recipe.selected },\r\n  },\r\n  {\r\n    selector: 'node.nuclear',\r\n    style: { 'background-color': graphColors.nuclear.base },\r\n  },\r\n  {\r\n    selector: 'node.nuclear.selected, node.nuclear.grabbed',\r\n    style: { 'background-color': graphColors.nuclear.selected },\r\n  },\r\n\r\n  \r\n  // ====== EDGES ====== //\r\n  {\r\n    selector: 'edge.selected, edge.grabbed',\r\n    style: {\r\n      'width': 4,\r\n      'font-size': '14px',\r\n      'font-weight': 'bold',\r\n      'text-outline-width': 2,\r\n      'z-index': 100,\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge.selected-incoming, edge.grabbed-incoming',\r\n    style: {\r\n      'color': graphColors.incoming.label,\r\n      'line-color': graphColors.incoming.line,\r\n      'target-arrow-color': graphColors.incoming.line,\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge.selected-outgoing, edge.grabbed-outgoing',\r\n    style: {\r\n      'color': graphColors.outgoing.label,\r\n      'line-color': graphColors.outgoing.line,\r\n      'target-arrow-color': graphColors.outgoing.line,\r\n    },\r\n  },\r\n];\r\n\r\nconst NODE_COLOR_CLASS = {\r\n  [NODE_TYPE.FINAL_PRODUCT]: 'final-product',\r\n  [NODE_TYPE.SIDE_PRODUCT]: 'side-product',\r\n  [NODE_TYPE.INPUT_ITEM]: 'input',\r\n  [NODE_TYPE.HAND_GATHERED_RESOURCE]: 'hand-gathered',\r\n  [NODE_TYPE.RESOURCE]: 'resource',\r\n  [NODE_TYPE.RECIPE]: 'recipe',\r\n};\r\n\r\nfunction getNodeLabel(node: GraphNode) {\r\n  let label = '';\r\n  let amountText = '';\r\n  if (node.type === NODE_TYPE.RECIPE) {\r\n    const recipe = recipes[node.key];\r\n    label = recipe.name;\r\n    amountText = `${truncateFloat(node.multiplier)}x ${buildings[recipe.producedIn].name}`;\r\n  } else {\r\n    const item = items[node.key];\r\n    if (node.type === NODE_TYPE.SIDE_PRODUCT) {\r\n      label = `Side Product:\\n${item.name}`;\r\n    } else {\r\n      label = item.name;\r\n    }\r\n    amountText = `${truncateFloat(node.multiplier)} / min`;\r\n  }\r\n  return `${label}\\n${amountText}`;\r\n}\r\n\r\nfunction getNodeClasses(node: GraphNode) {\r\n  const classes = [];\r\n  if (node.type === NODE_TYPE.RECIPE) {\r\n    classes.push('recipe-shape');\r\n    const recipe = recipes[node.key];\r\n    if (recipe.producedIn === 'Desc_GeneratorNuclear_C') {\r\n      classes.push('nuclear');\r\n    } else {\r\n      classes.push(NODE_COLOR_CLASS[node.type]);\r\n    }\r\n  } else {\r\n    classes.push('item-shape');\r\n    classes.push(NODE_COLOR_CLASS[node.type]);\r\n  }\r\n  return classes;\r\n}\r\n\r\nfunction getEdgeLabel(edge: GraphEdge) {\r\n  const item = items[edge.key];\r\n  const label = item.name;\r\n  const amountText = `${truncateFloat(edge.productionRate)} / min`;\r\n  return `${label}\\n${amountText}`;\r\n}\r\n\r\nfunction _resizeListener(graphRef: React.RefObject<HTMLDivElement | null>) {\r\n  if (graphRef?.current) {\r\n    const bounds = graphRef.current.getBoundingClientRect();\r\n    graphRef.current.style.height = `${window.innerHeight - bounds.top - 40}px`;\r\n  }\r\n}\r\n\r\ninterface Props {\r\n  resultsGraph: ProductionGraph | null,\r\n  graphError: GraphError | null,\r\n}\r\n\r\ninterface PopperRef {\r\n  popper: any,\r\n  nodeId: string,\r\n}\r\n\r\nexport interface NodeData extends GraphNode {\r\n  label: string,\r\n}\r\n\r\nexport interface EdgeData extends GraphEdge {\r\n  source: string,\r\n  target: string,\r\n  label: string,\r\n}\r\n\r\nconst ProductionGraphTab = (props: Props) => {\r\n  const { resultsGraph, graphError } = props;\r\n  const [doFirstRender, setDoFirstRender] = useState(false);\r\n  const graphRef = useRef<HTMLDivElement | null>(null);\r\n  const cyRef = useRef<Cytoscape.Core | null>(null);\r\n  const popupRef = useRef<HTMLDivElement | null>(null);\r\n  const popperRef = useRef<PopperRef | null>(null);\r\n  const [popupNode, setPopupNode] = useState<any | null>(null);\r\n\r\n  function setGraphRef(instance: HTMLDivElement | null) {\r\n    if (instance && !graphRef.current) {\r\n      graphRef.current = instance;\r\n      _resizeListener(graphRef);\r\n      setDoFirstRender(true);\r\n    }\r\n  }\r\n\r\n  function setCyRef(instance: Cytoscape.Core | null) {\r\n    if (instance && cyRef.current !== instance) {\r\n      cyRef.current = instance;\r\n      setCyListeners(cyRef.current);\r\n    }\r\n  }\r\n\r\n  function setCyListeners(cy: Cytoscape.Core) {\r\n    cy.on('select', 'node', function (e) {\r\n      e.target.addClass('selected');\r\n      e.target.outgoers('edge').addClass('selected').addClass('selected-outgoing');\r\n      e.target.incomers('edge').addClass('selected').addClass('selected-incoming');\r\n    });\r\n\r\n    cy.on('unselect', 'node', function (e) {\r\n      e.target.removeClass('selected');\r\n      e.target.outgoers('edge').removeClass('selected').removeClass('selected-outgoing');\r\n      e.target.incomers('edge').removeClass('selected').removeClass('selected-incoming');\r\n    });\r\n\r\n    cy.on('grab', 'node', function (e) {\r\n      e.target.addClass('grabbed');\r\n      e.target.outgoers('edge').addClass('grabbed').addClass('grabbed-outgoing');\r\n      e.target.incomers('edge').addClass('grabbed').addClass('grabbed-incoming');\r\n    });\r\n\r\n    cy.on('free', 'node', function (e) {\r\n      e.target.removeClass('grabbed');\r\n      e.target.outgoers('edge').removeClass('grabbed').removeClass('grabbed-outgoing');\r\n      e.target.incomers('edge').removeClass('grabbed').removeClass('grabbed-incoming');\r\n    });\r\n\r\n    cy.on('mouseover', 'node', function (e) {\r\n      const nodeId = e.target.id() as string;\r\n      if (popperRef.current?.nodeId === nodeId) return;\r\n      deactivatePopper(cy);\r\n      activatePopper(cy, e.target);\r\n    });\r\n\r\n    cy.on('mouseout', 'node', function (e) {\r\n      const nodeId = e.target.id() as string;\r\n      if (popperRef.current?.nodeId === nodeId) {\r\n        deactivatePopper(cy);\r\n      }\r\n    });\r\n  }\r\n\r\n  function activatePopper(cy: Cytoscape.Core, node: any) {\r\n    const popper = node.popper({\r\n      content: () => popupRef.current || undefined,\r\n      popper: {\r\n        placement: 'top',\r\n      }\r\n    });\r\n    popperRef.current = { popper, nodeId: node.id() };\r\n    node.on('position', () => { popper.update(); });\r\n    cy.on('pan zoom resize', () => { popper.update(); });\r\n    setPopupNode(node);\r\n  }\r\n\r\n  function deactivatePopper(cy: Cytoscape.Core) {\r\n    if (!popperRef.current) return;\r\n    const node = cy.getElementById(popperRef.current.nodeId);\r\n    node.off('position');\r\n    cy.off('pan zoom resize');\r\n    popperRef.current.popper.destroy();\r\n    popperRef.current = null;\r\n    setPopupNode(null);\r\n  }\r\n\r\n  useEffect(() => {\r\n    function resizeListener() {\r\n      _resizeListener(graphRef);\r\n    }\r\n    window.addEventListener('resize', resizeListener);\r\n    return () => {\r\n      window.removeEventListener('resize', resizeListener);\r\n    }\r\n  }, []);\r\n\r\n  const graphProps = useMemo<any>(() => {\r\n    if (resultsGraph == null) {\r\n      return null;\r\n    }\r\n\r\n    const key = nanoid();\r\n    const elements: any[] = [];\r\n\r\n    Object.entries(resultsGraph.nodes).forEach(([key, node]) => {\r\n      elements.push({\r\n        group: 'nodes',\r\n        data: {\r\n          ...node,\r\n          label: getNodeLabel(node),\r\n        },\r\n        classes: getNodeClasses(node),\r\n      });\r\n    });\r\n    resultsGraph.edges.forEach((edge) => {\r\n      elements.push({\r\n        group: 'edges',\r\n        data: {\r\n          ...edge,\r\n          source: edge.from,\r\n          target: edge.to,\r\n          label: getEdgeLabel(edge),\r\n        },\r\n        classes: edge.from === edge.to ? ['loop'] : undefined,\r\n      });\r\n    });\r\n    \r\n    return { key, elements };\r\n  }, [resultsGraph]);\r\n\r\n  return (\r\n    <>\r\n      <GraphContainer fluid ref={setGraphRef}>\r\n        {\r\n          doFirstRender && (\r\n            graphProps != null\r\n            ? (\r\n                <GraphVisualizer\r\n                  key={graphProps.key}\r\n                  elements={graphProps.elements}\r\n                  layout={layout}\r\n                  stylesheet={stylesheet}\r\n                  boxSelectionEnabled={false}\r\n                  wheelSensitivity={0.13}\r\n                  maxZoom={3.0}\r\n                  minZoom={0.1}\r\n                  style={{ position: 'absolute', height: '100%', width: '100%', overflow: 'hidden' }}\r\n                  cy={setCyRef}\r\n                />\r\n            )\r\n            : (\r\n              <Center style={{ position: 'absolute', height: '100%', width: '100%' }}>\r\n                <Group>\r\n                  <AlertCircle color=\"#eee\" size={85} style={{ position: 'relative', top: '3px' }} />\r\n                  <Group direction='column' style={{ gap: '0px' }}>\r\n                    <Text style={{ fontSize: '28px' }}>\r\n                      Could not build graph\r\n                    </Text>\r\n                      {graphError\r\n                      ? (\r\n                        <Text style={{ maxWidth: '600px', fontSize: '14px' }}>\r\n                            {`ERROR: ${graphError.message}`}<br />\r\n                            {graphError?.helpText || ''}\r\n                        </Text>\r\n                      )\r\n                      : null}\r\n                  </Group>\r\n                </Group>\r\n              </Center>\r\n            )\r\n          )\r\n        }\r\n      </GraphContainer>\r\n      <GraphTooltip ref={popupRef} currentNode={popupNode} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductionGraphTab;\r\n\r\nconst GraphContainer = styled(Container)`\r\n  position: relative;\r\n  min-height: 600px;\r\n  min-width: 800px;\r\n  border: 1px solid #fff;\r\n  border-top-width: 0px;\r\n  margin: 0px;\r\n  padding: 0px;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Title, List, Divider, Text, Container, Group } from '@mantine/core';\r\nimport { buildings, items } from '../../../../data';\r\nimport { Report } from '../../../../utilities/production-solver';\r\nimport { AlertCircle } from 'react-feather';\r\n\r\nfunction formatFloat(n: number) {\r\n  return n.toLocaleString(undefined, { maximumFractionDigits: 3 });\r\n}\r\n\r\ninterface Props {\r\n  report: Report | null,\r\n}\r\n\r\nconst ReportTab = (props: Props) => {\r\n  const { report } = props;\r\n  function renderReport() {\r\n    return (\r\n      <>\r\n        <Title order={2}>Statistics</Title>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Points Produced</SmallerTitle>\r\n        <Text>{formatFloat(report!.pointsProduced)} per min</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Resource Usage Score</SmallerTitle>\r\n        <Text>{formatFloat(report!.resourceEfficiencyScore)}</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Total Build Area</SmallerTitle>\r\n        <Text>{formatFloat(report!.totalBuildArea)} m²</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Estimated Minimal Foundations</SmallerTitle>\r\n        <Text>{formatFloat(report!.estimatedFoundations)} foundations ({formatFloat(report!.estimatedFoundations * 8)} Concrete)</Text>\r\n        <SDivider />\r\n\r\n        <Title order={2} style={{ marginTop: '30px' }}>Power</Title>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Manufacturing</SmallerTitle>\r\n        <Text>{formatFloat(report!.powerUsageEstimate.production)} MW</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Resource Extraction</SmallerTitle>\r\n        <Text>{formatFloat(report!.powerUsageEstimate.extraction)} MW</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Generation</SmallerTitle>\r\n        <Text>{formatFloat(report!.powerUsageEstimate.generators)} MW</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Total {report!.powerUsageEstimate.total < 0 ? 'Production' : 'Usage'}</SmallerTitle>\r\n        <Text>{formatFloat(Math.abs(report!.powerUsageEstimate.total))} MW</Text>\r\n        <SDivider />\r\n\r\n        <Title order={2} style={{ marginTop: '30px' }}>Buildings</Title>\r\n        <SDivider />\r\n        <List listStyleType='none'>\r\n          {renderBuildingsUsed()}\r\n          <List.Item>\r\n            <Title order={3} style={{ marginBottom: '8px' }}>Total</Title>\r\n            <ListWithLine withPadding listStyleType='none'>\r\n              {\r\n                Object.entries(report!.totalMaterialCost)\r\n                  .sort((a, b) => {\r\n                    if (a[1] > b[1]) return -1;\r\n                    if (a[1] < b[1]) return 1;\r\n                    return 0;\r\n                  })\r\n                  .map(([itemKey, count]) => (\r\n                    <List.Item key={itemKey}>\r\n                      <ItemLabel>{items[itemKey].name}</ItemLabel> <Count>x{formatFloat(count)}</Count>\r\n                    </List.Item>\r\n                  ))\r\n              }\r\n            </ListWithLine>\r\n          </List.Item>\r\n        </List>\r\n      </>\r\n    );\r\n  }\r\n\r\n  function renderBuildingsUsed() {\r\n    return Object.entries(report!.buildingsUsed)\r\n      .sort((a, b) => {\r\n        if (a[1].count > b[1].count) return -1;\r\n        if (a[1].count < b[1].count) return 1;\r\n        return 0;\r\n      })\r\n      .map(([buildingKey, usageInfo]) => (\r\n      <List.Item key={buildingKey} style={{ paddingBottom: '10px' }}>\r\n        <Title order={3} style={{ marginBottom: '8px' }}>\r\n          {buildings[buildingKey].name} <Count>x{formatFloat(usageInfo.count)}</Count>\r\n        </Title>\r\n        <ListWithLine withPadding listStyleType='none' style={{ marginBottom: '10px' }}>\r\n          {\r\n            Object.entries(usageInfo.materialCost)\r\n              .sort((a, b) => {\r\n                if (a[1] > b[1]) return -1;\r\n                if (a[1] < b[1]) return 1;\r\n                return 0;\r\n              })\r\n              .map(([itemKey, count]) => (\r\n                <List.Item key={itemKey}>\r\n                  <ItemLabel>{items[itemKey].name}</ItemLabel>  <Count>x{formatFloat(count)}</Count>\r\n                </List.Item>\r\n              ))\r\n          }\r\n        </ListWithLine>\r\n      </List.Item>\r\n    ))\r\n  }\r\n  \r\n  return (\r\n    <ReportContainer fluid>\r\n      {\r\n      !report\r\n        ? (\r\n          <Group style={{ height: '150px', justifyContent: 'flex-start' }}>\r\n            <AlertCircle color=\"#eee\" size={50} />\r\n            <Text style={{ fontSize: '32px' }}>\r\n              No data available\r\n            </Text>\r\n          </Group>\r\n        )\r\n        : renderReport()\r\n      }\r\n    </ReportContainer>\r\n  );\r\n};\r\n\r\nexport default ReportTab;\r\n\r\nconst ReportContainer = styled(Container)`\r\n  padding: 10px;\r\n  padding-bottom: 15px;\r\n`;\r\n\r\nconst SDivider = styled(Divider)`\r\n  margin: 10px 0px;\r\n`;\r\n\r\nconst SmallerTitle = styled(Title)`\r\n  font-size: 19px;\r\n`;\r\n\r\nconst ItemLabel = styled.span`\r\n  font-size: 17px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Count = styled.span`\r\n  font-size: 15px;\r\n  margin-left: 3px;\r\n`;\r\n\r\nconst ListWithLine = styled(List)`\r\n  position: relative;\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0px;\r\n    bottom: 0px;\r\n    left: 12px;\r\n    width: 3px;\r\n    background: ${({ theme }) => theme.colors.background[3]};\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Container, MantineTheme, Tabs, useMantineTheme } from '@mantine/core';\r\nimport { Share2, Edit } from 'react-feather';\r\nimport ProductionGraphTab from './ProductionGraphTab';\r\nimport ReportTab from './ReportTab';\r\nimport { SolverResults } from '../../../utilities/production-solver';\r\nimport Card from '../../../components/Card';\r\n\r\ninterface Props {\r\n  solverResults: SolverResults | null;\r\n}\r\n\r\nconst tabSx = (theme: MantineTheme) => ({\r\n  '&.mantine-Tabs-tabControl': {\r\n    minWidth: '200px',\r\n  },\r\n});\r\n\r\nconst PlannerResults = (props: Props) => {\r\n  const { solverResults } = props;\r\n  const theme = useMantineTheme();\r\n  return (\r\n    <Tabs variant='outline'>\r\n      <Tabs.Tab label='Production Graph' icon={<Share2 size={18} />} sx={tabSx}>\r\n        <Container fluid padding={0}>\r\n          <ProductionGraphTab resultsGraph={solverResults?.productionGraph || null} graphError={solverResults?.error || null} />\r\n        </Container>\r\n      </Tabs.Tab>\r\n      <Tabs.Tab label='Factory Report' icon={<Edit size={18} />} sx={tabSx}>\r\n        <Card style={{ paddingLeft: '10px', background: theme.colors.background[0] }}>\r\n          <ReportTab report={solverResults?.report || null} />\r\n        </Card>\r\n      </Tabs.Tab>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default PlannerResults;\r\n","import React from 'react';\r\nimport { Divider, Text, Title } from '@mantine/core';\r\nimport { useLocalStorageValue } from '@mantine/hooks';\r\nimport { useProductionContext } from '../../contexts/production';\r\nimport Drawer from '../Drawer';\r\nimport PlannerOptions from './PlannerOptions';\r\nimport PlannerResults from './PlannerResults';\r\nimport Card from '../../components/Card';\r\n\r\nconst Factory = () => {\r\n  const [drawerOpen, setDrawerOpen] = useLocalStorageValue<'false' | 'true'>({ key: 'drawer-open', defaultValue: 'false' });\r\n  const ctx = useProductionContext();\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ marginBottom: '25px' }}>\r\n        <Title order={2}>\r\n          Welcome back &lt;Engineer ID #{ctx.engineerId}&gt;\r\n        </Title>\r\n        <Text>\r\n          This tool has been created to increase the efficiency of your work towards Project Assembly.<br />\r\n          We hope that you will continue to be effective.\r\n        </Text>\r\n        <Divider style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n        <Text style={{ fontSize: '13px' }}>\r\n          {ctx.ficsitTip}\r\n        </Text>\r\n      </Card>\r\n      <PlannerResults solverResults={ctx.solverResults} />\r\n      <Drawer open={drawerOpen === 'true'} onToggle={(value) => { setDrawerOpen(value ? 'true' : 'false'); }}>\r\n        <PlannerOptions />\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Factory;\r\n","import React from 'react';\r\nimport { ProductionProvider } from '../../contexts/production';\r\nimport Factory from './Factory';\r\n\r\nconst ProductionPlanner = () => {\r\n  return (\r\n    <ProductionProvider>\r\n      <Factory />\r\n    </ProductionProvider>\r\n  );\r\n};\r\n\r\nexport default ProductionPlanner;\r\n","import React from 'react';\r\n\r\nconst PaypalButton = () => {\r\n  return (\r\n    <form action=\"https://www.paypal.com/donate\" method=\"post\" target=\"_blank\" style={{ opacity: '0.8' }}>\r\n      <input type=\"hidden\" name=\"business\" value=\"EN9ZT88D25SRS\" />\r\n      <input type=\"hidden\" name=\"no_recurring\" value=\"1\" />\r\n      <input type=\"hidden\" name=\"item_name\" value=\"Wow, I didn't expect anyone to click this button! It honestly means a lot! I will put this money towards a nice coffee :P\" />\r\n      <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\r\n      <input type=\"image\" src=\"https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif\" name=\"submit\" title=\"PayPal - The safer, easier way to pay online!\" alt=\"Donate with PayPal button\" />\r\n      <img alt=\"\" src=\"https://www.paypal.com/en_US/i/scr/pixel.gif\" width=\"1\" height=\"1\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PaypalButton;\r\n","import React from 'react';\r\nimport { Anchor, AnchorProps } from '@mantine/core';\r\n\r\nconst ExternalLink = (props: AnchorProps<React.ElementType<any>>) => {\r\n  return <Anchor target='_blank' rel='noopener noreferrer' {...props} />;\r\n};\r\n\r\nexport default ExternalLink;\r\n","import React from 'react';\r\nimport { Title, Text } from '@mantine/core';\r\nimport Card from '../../components/Card';\r\nimport ExternalLink from '../../components/ExternalLink';\r\n\r\ninterface Props {\r\n  children: React.ReactNode,\r\n}\r\n\r\ninterface State {\r\n  hasError: boolean,\r\n}\r\n\r\nclass ErrorBoundary extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromError() {\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch() {\r\n    // TODO: log to reporting service\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <Card>\r\n          <Title>Oh no...</Title>\r\n          <Text>\r\n            Something broke horribly... Sorry about that, but that's why it says BETA at the top :P<br />\r\n            If you don't mind, you can <ExternalLink href='https://github.com/lydianlights/yet-another-factory-planner/issues'>file an issue on github</ExternalLink> or <ExternalLink href='https://discord.gg/p7e9ZzRHCm'>contact me on discord</ExternalLink> letting me know what you were doing, that way I can fix this crash.<br />\r\n            In the meantime, refreshing the page should reset everything and let you get back to work :D\r\n          </Text>\r\n        </Card>\r\n      )\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppShell, Header, Container, useMantineTheme, Anchor } from '@mantine/core';\r\nimport SiteHeader from './SiteHeader';\r\nimport ProductionPlanner from '../ProductionPlanner';\r\nimport PaypalButton from '../../components/PaypalButton';\r\nimport ExternalLink from '../../components/ExternalLink';\r\nimport ErrorBoundary from '../ErrorBoundary';\r\n\r\nconst Main = () => {\r\n  const theme = useMantineTheme();\r\n  return (\r\n    <AppShell\r\n      padding='md'\r\n      header={<SHeader height={theme.other.headerHeight} padding='sm'><SiteHeader /></SHeader>}\r\n    >\r\n      <MainContainer fluid>\r\n        <ErrorBoundary>\r\n          <ProductionPlanner />\r\n        </ErrorBoundary>\r\n        <Footer>\r\n          <FooterContent>\r\n            Made with ♥ by <ExternalLink href='https://github.com/lydianlights'>LydianLights</ExternalLink> -\r\n            Questions or bugs? File an <ExternalLink href='https://github.com/lydianlights/yet-another-factory-planner/issues'>issue on github</ExternalLink> or <ExternalLink href='https://discord.gg/p7e9ZzRHCm'>check out the discord</ExternalLink>\r\n          </FooterContent>\r\n          <PaypalButton />\r\n        </Footer>\r\n      </MainContainer>\r\n    </AppShell>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n\r\nconst SHeader = styled(Header)`\r\n  position: fixed;\r\n  margin: 0px;\r\n  padding: 10px;\r\n  background: ${({ theme }) => theme.colors.primary[6]};\r\n  overflow: hidden;\r\n`;\r\n\r\nconst MainContainer = styled(Container)`\r\n  margin-left: ${({ theme }) => theme.other.pageLeftMargin};\r\n  margin-top: ${({ theme }) => theme.other.headerHeight};\r\n  padding-left: 0px;\r\n`;\r\n\r\nconst Footer = styled(Container)`\r\n  margin-top: 40px;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst FooterContent = styled(Container)`\r\n  padding: 10px 20px;\r\n  color: ${({ theme }) => theme.white};\r\n  /* background: rgba(0, 0, 0, 0.3); */\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/stripe-bg.ddc4de7e.png\";","import { createGlobalStyle } from \"styled-components\";\r\nimport bgImage from './assets/stripe-bg.png';\r\n\r\nconst GlobalStylesheet = createGlobalStyle<any>`\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: ${({ theme }) => theme.fontFamily};\r\n    background: url(${bgImage});\r\n  }\r\n\r\n  #root {\r\n    min-height: 100vh;\r\n  }\r\n  \r\n  html,\r\n  .custom-scrollbar {\r\n    scrollbar-color: ${({ theme }) => `${theme.other.scrollbarThumbColor} ${theme.other.scrollbarTrackColor}`};\r\n\r\n    & > * {\r\n      scrollbar-color: initial; // prevent inheritance\r\n    }\r\n\r\n    ::-webkit-scrollbar {\r\n      width: auto;\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n      background-color: ${({ theme }) => theme.other.scrollbarTrackColor};\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n      background-color: ${({ theme }) => theme.other.scrollbarThumbColor};\r\n    }\r\n\r\n    ::-webkit-scrollbar-corner {\r\n      background-color: ${({ theme }) => theme.other.scrollbarTrackColor};\r\n    }\r\n    \r\n    ::-webkit-scrollbar-button:single-button {\r\n      background-color: ${({ theme }) => theme.other.scrollbarTrackColor};\r\n      display: block;\r\n      height: auto;\r\n      width: auto;\r\n      background-size: 10px;\r\n      background-repeat: no-repeat;\r\n      background-position: center center;\r\n    }\r\n\r\n    // Up\r\n    ::-webkit-scrollbar-button:single-button:vertical:decrement {\r\n      background-image: url(\"data:image/svg+xml;base64,${btoa('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill=\"#eee\"><polygon points=\"50,20 100,75 0,75 Z\"/></svg>')}\");\r\n    }\r\n\r\n    // Down\r\n    ::-webkit-scrollbar-button:single-button:vertical:increment {\r\n      background-image: url(\"data:image/svg+xml;base64,${btoa('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill=\"#eee\"><polygon points=\"50,75 100,20 0,20 Z\"/></svg>')}\");\r\n    }\r\n\r\n    // Left\r\n    ::-webkit-scrollbar-button:single-button:horizontal:decrement {\r\n      background-image: url(\"data:image/svg+xml;base64,${btoa('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill=\"#eee\"><polygon points=\"20,50 75,100 75,0 Z\"/></svg>')}\");\r\n    }\r\n\r\n    // Right\r\n    ::-webkit-scrollbar-button:single-button:horizontal:increment {\r\n      background-image: url(\"data:image/svg+xml;base64,${btoa('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill=\"#eee\"><polygon points=\"75,50 20,100 20,0 Z\"/></svg>')}\");\r\n    }\r\n  }\r\n`;\r\n\r\nexport default GlobalStylesheet;\r\n","import React from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { MantineProvider, useMantineTheme } from '@mantine/core';\r\nimport Main from './containers/Main';\r\nimport { DrawerProvider } from './contexts/drawer';\r\nimport { theme, styles } from './theme';\r\nimport GlobalStylesheet from './global-stylesheet';\r\n\r\nfunction App() {\r\n  return (\r\n    <MantineProvider\r\n      theme={theme}\r\n      styles={styles}\r\n    >\r\n      <ThemeTransfer />\r\n    </MantineProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst ThemeTransfer = () => {\r\n  const mergedTheme = useMantineTheme();\r\n  return (\r\n    <ThemeProvider theme={mergedTheme}>\r\n      <GlobalStylesheet />\r\n      <DrawerProvider>\r\n        <Main />\r\n      </DrawerProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}