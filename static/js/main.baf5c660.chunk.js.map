{"version":3,"sources":["assets/satisfactory_logo_full_color_small.png","components/SocialIcon/index.tsx","containers/Main/SiteHeader/index.tsx","hooks/usePrevious.ts","data/index.ts","utilities/error/GraphError/index.ts","utilities/production-solver/index.ts","contexts/production/state-decoders/v1_U5.ts","contexts/production/state-decoders/v2_U5.ts","contexts/production/state-decoders/v3_U5.ts","contexts/production/reducer.tsx","api/index.ts","api/useApi.ts","contexts/production/index.tsx","api/modules/shared-factories/usePostSharedFactory.ts","api/modules/shared-factories/useGetSharedFactory.ts","contexts/drawer/index.tsx","components/Portal/index.tsx","containers/Drawer/index.tsx","components/Card/index.tsx","components/Section/index.tsx","components/TrashButton/index.tsx","containers/ProductionPlanner/PlannerOptions/ProductionTab/index.tsx","components/LabelWithTooltip/index.tsx","containers/ProductionPlanner/PlannerOptions/InputsTab/index.tsx","containers/ProductionPlanner/PlannerOptions/RecipesTab/index.tsx","containers/ProductionPlanner/PlannerOptions/index.tsx","theme.ts","utilities/number/index.ts","components/GraphTooltip/index.tsx","containers/ProductionPlanner/PlannerResults/ProductionGraphTab/index.tsx","containers/ProductionPlanner/PlannerResults/ReportTab/index.tsx","containers/ProductionPlanner/PlannerResults/index.tsx","containers/ProductionPlanner/Factory.tsx","containers/ProductionPlanner/index.tsx","components/PaypalButton/index.tsx","components/ExternalLink/index.tsx","containers/ErrorBoundary/index.tsx","containers/Main/index.tsx","assets/stripe-bg.png","global-stylesheet.ts","App.tsx","index.tsx"],"names":["SocialIcon","props","href","icon","SAnchor","target","rel","styled","Anchor","SiteHeader","HeaderContainer","fluid","src","logo","height","alt","MainTitle","BetaTag","SocialLinks","faGithub","fontSize","faDiscord","faTwitter","Container","theme","other","pageLeftMargin","Title","div","Group","usePrevious","value","ref","useRef","useEffect","current","buildings","buildingsRaw","recipes","recipesRaw","resources","resourcesRaw","items","itemsRaw","handGatheredItems","handGatheredItemsRaw","GraphError","msg","helpText","Error","EPSILON","MAXIMIZE_WEIGHT","RATE_TARGET_KEY","NODE_TYPE","POINTS_ITEM_KEY","ProductionSolver","options","globalWeights","inputs","rateTargets","maximizeTargets","hasPointsTarget","allowedRecipes","allowedItems","scale","this","Object","entries","forEach","recipeKey","recipeInfo","ingredients","i","itemClass","products","p","Number","weightingOptions","power","complexity","validateNumber","maxGlobalWeight","Math","max","inputResources","item","itemKey","amount","unlimited","Infinity","weight","type","maxResourceWeight","values","map","inputItems","allowHandGatheredItems","keys","perMinTargets","recipeTargets","productionItems","isPoints","mode","recipe","existingTarget","find","t","key","priority","push","perMinute","sort","a","b","length","num","isNaN","timestamp","performance","now","loadGLPK","glpk","productionSolverPass","productionSolution","productionGraph","generateProductionGraph","remainingInputs","inputKey","input","inputNode","nodes","n","usedAmount","multiplier","diff","solution","report","generateProductionReport","computeTime","error","itemInfo","isFicsmas","sinkPoints","targetKey","model","name","objective","direction","GLP_MIN","vars","subjectTo","binaries","doPoints","pointsVars","buildingInfo","producedIn","powerScore","buildingsScore","resourceScore","ingredient","inputInfo","coef","bnds","GLP_LO","ub","lb","pointCoef","product","getItemPoints","intrinsicPoints","targetInfo","GLP_UP","NaN","v","existingVar","ov","binKey","binVars","usedInRecipes","producedFromRecipes","sqrt","outputInfo","solve","msglev","GLP_MSG_OFF","tmlim","time","result","status","GLP_OPT","GLP_FEAS","val","itemProductionTotals","graph","edges","producedBy","usedBy","id","nanoid","productionTotals","j","nextDemand","usageInfo","usageNode","productionInfo","productionNode","outputRecipe","recipeAmount","itemNode","from","to","productionRate","nodeType","pointsProduced","powerUsageEstimate","production","extraction","generators","total","resourceEfficiencyScore","totalBuildArea","estimatedFoundations","buildingsUsed","totalMaterialCost","node","numExtractors","ceil","count","materialCost","buildCost","quantity","buildingKey","area","SEP2","getItemBySlug","slug","itemEntry","getModeBySlug","recipeEntry","SHARE_QUERY_KEY","getDefaultProductionItem","getDefaultInputItem","ORDERED_RESOURCES","getInitialInputResources","data","String","maxExtraction","relativeValue","aIndex","findIndex","r","bIndex","getInitialAllowedRecipes","recipeMap","isAlternate","getInitialState","gameVersion","reducer","state","action","newProductionItems","filter","newItem","nextPriority","newInputItems","newInputResources","active","newWeightingOptions","newAllowedRecipes","newState","resourceOptions","e","console","encodedState","URLSearchParams","window","location","search","get","stateStr","version","substring","fields","split","allowedRecipesBits","BigInt","toString","padStart","parseInt","productionItemsStrings","str","inputItemsStrings","inputResourcesStrings","weightingOptionsStrings","decodeState_v1_U5","decodeState_v2_U5","decodeState_v3_U5","decodeState_LEGACY","apiClient","axios","create","baseURL","process","responseType","urlParamsRegex","parseURL","url","parsedData","parsedURL","replace","match","undefined","request","method","params","post","useApi","apiAction","useState","setData","setError","loading","setLoading","prevLoading","requestHandler","useCallback","req","apiError","message","useMemo","completedThisFrame","seed","floor","Date","getTime","rng","seedrandom","TIPS","TIP_INDEX","TIP","ID","random","_setCalculating","_","debounce","setCalculating","leading","trailing","_handleCalculateFactory","setSolverResults","solver","exec","results","prevState","log","ProductionContext","createContext","useProductionContext","ctx","useContext","displayName","ProductionProvider","children","useReducer","dispatch","initialized","setInitialized","loadingSharedFactory","setLoadingSharedFactory","firstCalculationDone","setFirstCalculationDone","useLocalStorageValue","defaultValue","autoCalculate","setAutoCalculate","calculating","solverResults","engineerId","postSharedFactory","body","factoryConfig","res","json","getSharedFactory","autoCalculateBool","handleCalculateFactory","handleSetAutoCalculate","checked","handleGenerateShareLink","shareLink","protocol","host","pathname","shareKey","legacyParamEncoding","factoryKey","delete","history","replaceState","factory_config","ctxValue","calculate","generateShareLink","shareLinkLoading","ficsitTip","Provider","DrawerContext","DrawerProvider","rootNode","setRootNode","useMantineTheme","DrawerRoot","topOffset","headerHeight","drawerZIndex","Portal","forwardRef","createRoot","style","document","createElement","append","remove","useLayoutEffect","createPortal","Drawer","open","onToggle","fullyClosed","setFullyClosed","tooltipDismissed","setTooltipDismissed","useDrawerContext","showTooltip","DrawerDimmer","onClick","DrawerContainer","onTransitionEnd","DrawerToggle","ToggleLabel","ToggleLabelText","ToggleLabelIcon","Tooltip","TooltipText","TooltipConfirmContainer","TooltipConfirm","stopPropagation","DrawerContent","className","drawerWidth","colors","background","primary","UnstyledButton","white","span","Paper","info","Text","Card","Section","SectionDescription","TrashButton","Button","color","width","padding","flex","size","itemOptions","label","unshift","baseModeOptions","priorityOptions","Array","fill","reverse","ProductionTab","order","modeOptions","selectedItem","io","ItemContainer","Row","Select","placeholder","clearable","searchable","toLowerCase","includes","onChange","position","top","TextInput","min","step","currentTarget","Divider","marginTop","marginBottom","LabelWithTooltip","tooltip","Label","withArrow","wrapLines","arrowSize","InputsTab","disabled","Checkbox","grow","renderWeightInputs","fontWeight","cleanAltNameRegex","baseRecipes","altRecipes","RecipesTab","searchValue","setSearchValue","renderRecipeList","recipeList","component","List","Item","renderedBaseRecipes","renderedAltRecipes","renderRecipeOptions","alternates","filteredRecipes","filteredRecipeKeys","listStyleType","spacing","Grid","Col","VDivider","PlannerOptions","popoverOpened","setPopoverOpened","prevShareLink","navigator","clipboard","writeText","paddingTop","marginRight","Switch","Popover","opened","onClose","styles","root","inner","readOnly","Space","Tabs","variant","Tab","TabContainer","defaultFont","baseSat","baseLight","selectSat","selectLight","graphColors","resource","base","selected","handGathered","sideProduct","finalProduct","nuclear","edge","line","incoming","outgoing","primaryColor","fontFamily","radius","xs","sm","md","lg","xl","headings","sizes","h1","lineHeight","h2","h3","h4","h5","h6","tooltipZIndex","scrollbarTrackColor","scrollbarThumbColor","AppShell","minHeight","borderRadius","hovered","cursor","borderWidth","borderColor","horizontal","borderTopColor","opacity","backgroundColor","tabLabel","tabIcon","tabActive","borderBottomWidth","borderBottomLeftRadius","borderBottomRightRadius","border","arrow","borderBottom","borderRight","truncateFloat","places","toFixed","GraphTooltip","currentNode","zIndex","pointerEvents","primaryProduct","totalBuildings","clockPercentage","itemsPerMinPerBuilding","TooltipTitle","TooltipDivider","withPadding","renderRecipeInfo","renderWaterExtractorInfo","baseNumExtractors","Table","renderOilExtractorInfo","baseNumMiners","renderMinerInfo","renderInner","table","Cytoscape","use","popper","klay","warnings","layout","edgeRouting","nodePlacement","edgeSpacingFactor","inLayerSpacingFactor","thoroughness","stylesheet","selector","NODE_COLOR_CLASS","getNodeLabel","amountText","getNodeClasses","classes","getEdgeLabel","_resizeListener","graphRef","bounds","getBoundingClientRect","innerHeight","ProductionGraphTab","doFirstRender","setDoFirstRender","cyRef","popupRef","popperRef","popupNode","setPopupNode","resultsGraph","graphError","isLoading","deactivatePopper","cy","getElementById","nodeId","off","destroy","resizeListener","addEventListener","removeEventListener","graphProps","elements","group","source","GraphContainer","instance","Center","Loader","boxSelectionEnabled","wheelSensitivity","maxZoom","minZoom","overflow","on","addClass","outgoers","incomers","removeClass","content","placement","update","activatePopper","gap","maxWidth","formatFloat","toLocaleString","maximumFractionDigits","ReportTab","ReportContainer","SDivider","SmallerTitle","abs","paddingBottom","Count","ListWithLine","ItemLabel","justifyContent","tabSx","minWidth","PlannerResults","sx","paddingLeft","Factory","drawerOpen","setDrawerOpen","ProductionPlanner","PaypalButton","title","ExternalLink","ErrorBoundary","hasError","React","Component","Main","header","SHeader","MainContainer","Footer","FooterContent","Header","GlobalStylesheet","createGlobalStyle","bgImage","btoa","App","MantineProvider","ThemeTransfer","mergedTheme","ReactDOM","render"],"mappings":"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","file":"static/js/main.baf5c660.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/satisfactory_logo_full_color_small.da5e9783.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Anchor } from '@mantine/core';\r\n\r\ninterface Props {\r\n  href: string;\r\n  icon: React.ReactNode;\r\n}\r\n\r\nconst SocialIcon = (props: Props) => {\r\n  const { href, icon } = props;\r\n  return (\r\n    <SAnchor href={href} target='_blank' rel='noopener noreferrer'>\r\n      {icon || null}\r\n    </SAnchor>\r\n  );\r\n};\r\n\r\nexport default SocialIcon;\r\n\r\nconst SAnchor = styled(Anchor)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #f0f0f0;\r\n\r\n  &:hover {\r\n    color: #ddd;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Title, Container, Group } from '@mantine/core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub, faTwitter, faDiscord } from '@fortawesome/free-brands-svg-icons';\r\nimport logo from '../../../assets/satisfactory_logo_full_color_small.png';\r\nimport SocialIcon from '../../../components/SocialIcon';\r\n\r\nconst SiteHeader = () => {\r\n  return (\r\n    <HeaderContainer fluid>\r\n      <img src={logo} height={42} alt='Satisfactory logo' />\r\n      <MainTitle>[Yet Another Factory Planner]</MainTitle>\r\n      <BetaTag>(BETA)</BetaTag>\r\n      <SocialLinks>\r\n        <SocialIcon href='https://github.com/lydianlights/yet-another-factory-planner' icon={<FontAwesomeIcon icon={faGithub} fontSize={32} />} />\r\n        <SocialIcon href='https://discord.gg/p7e9ZzRHCm' icon={<FontAwesomeIcon icon={faDiscord} fontSize={32} />} />\r\n        <SocialIcon href='https://twitter.com/LydianLights' icon={<FontAwesomeIcon icon={faTwitter} fontSize={32} />} />\r\n      </SocialLinks>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default SiteHeader;\r\n\r\nconst HeaderContainer = styled(Container)`\r\n  display: flex;\r\n  margin-left: ${({ theme }) => theme.other.pageLeftMargin};\r\n  padding: 0px;\r\n`;\r\n\r\nconst MainTitle = styled(Title)`\r\n  position: relative;\r\n  top: 1px;\r\n  font-size: 32px;\r\n  color: #fff;\r\n  margin-left: 25px;\r\n  white-space: nowrap;\r\n  font-family: 'Indie Flower', sans-serif;\r\n`;\r\n\r\nconst BetaTag = styled.div`\r\n  position: relative;\r\n  left: 7px;\r\n  top: 3px;\r\n  font-size: 24px;\r\n  color: #fff;\r\n  font-family: 'Fjalla One', sans-serif;\r\n  transform: rotate(20deg);\r\n`;\r\n\r\nconst SocialLinks = styled(Group)`\r\n  display: flex;\r\n  margin-left: auto;\r\n  margin-right: 30px;\r\n`;\r\n","import { useRef, useEffect } from 'react';\r\n\r\nexport function usePrevious<T>(value: T) {\r\n  const ref = useRef<T>();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n  return ref.current;\r\n}\r\n","import buildingsRaw from './json/buildings.json';\r\nimport recipesRaw from './json/recipes.json';\r\nimport resourcesRaw from './json/resources.json';\r\nimport itemsRaw from './json/items.json';\r\nimport handGatheredItemsRaw from './json/handGatheredItems.json';\r\n\r\n\r\nexport type ItemRate = {\r\n  itemClass: string,\r\n  perMinute: number,\r\n};\r\n\r\nexport type ItemQuantity = {\r\n  itemClass: string,\r\n  quantity: number,\r\n};\r\n\r\nexport type BuildingsInfo = {\r\n  slug: string,\r\n  name: string,\r\n  power: number,\r\n  area: number,\r\n  buildCost: ItemQuantity[],\r\n  isFicsmas: boolean,\r\n};\r\n\r\nexport type RecipeInfo = {\r\n  slug: string,\r\n  name: string,\r\n  isAlternate: boolean,\r\n  ingredients: ItemRate[],\r\n  products: ItemRate[],\r\n  producedIn: string,\r\n  isFicsmas: boolean,\r\n};\r\n\r\nexport type ResourceInfo = {\r\n  itemClass: string,\r\n  maxExtraction: number | null,\r\n  relativeValue: number,\r\n};\r\n\r\nexport type ItemInfo = {\r\n  slug: string,\r\n  name: string,\r\n  sinkPoints: number,\r\n  usedInRecipes: string[],\r\n  producedFromRecipes: string[],\r\n  isFicsmas: boolean,\r\n};\r\n\r\nexport type BuildingMap = { [key in keyof typeof buildingsRaw]: BuildingsInfo } & { [key: string]: BuildingsInfo };\r\nexport type RecipeMap = { [key in keyof typeof recipesRaw]: RecipeInfo } & { [key: string]: RecipeInfo };\r\nexport type ResourceMap = { [key in keyof typeof resourcesRaw]: ResourceInfo } & { [key: string]: ResourceInfo };\r\nexport type ItemMap = { [key in keyof typeof itemsRaw]: ItemInfo } & { [key: string]: ItemInfo };\r\nexport type HandGatheredItemMap = { [key in keyof typeof handGatheredItemsRaw]: string } & { [key: string]: string };\r\n\r\nexport const buildings = (buildingsRaw as BuildingMap);\r\nexport const recipes = (recipesRaw as RecipeMap);\r\nexport const resources = (resourcesRaw as ResourceMap);\r\nexport const items = (itemsRaw as ItemMap);\r\nexport const handGatheredItems = (handGatheredItemsRaw as HandGatheredItemMap);\r\n","export class GraphError extends Error {\r\n  helpText?: string;\r\n  constructor(msg: string, helpText?: string) {\r\n    super(msg);\r\n    this.helpText = helpText;\r\n  }\r\n}\r\n","import loadGLPK, { GLPK, LP, Var } from 'glpk.js';\r\nimport { nanoid } from 'nanoid';\r\nimport { FactoryOptions, RecipeMap } from '../../contexts/production/reducer';\r\nimport { buildings, items, recipes, resources, handGatheredItems } from '../../data';\r\nimport { GraphError } from '../error/GraphError';\r\n\r\nconst EPSILON = 1e-8;\r\nconst MIN_RESOURCE_WEIGHT = 0.0001;\r\nconst MAXIMIZE_WEIGHT = 1e5;\r\nconst ENFORCE_BIN_WEIGHT = 1000;\r\nconst TIME_LIMIT = 3.0;\r\nconst RATE_TARGET_KEY = 'RATE_TARGET_PASS';\r\n\r\nexport const NODE_TYPE = {\r\n  FINAL_PRODUCT: 'FINAL_PRODUCT',\r\n  SIDE_PRODUCT: 'SIDE_PRODUCT',\r\n  INPUT_ITEM: 'INPUT_ITEM',\r\n  HAND_GATHERED_RESOURCE: 'HAND_GATHERED_RESOURCE',\r\n  RESOURCE: 'RESOURCE',\r\n  RECIPE: 'RECIPE',\r\n};\r\n\r\nexport const POINTS_ITEM_KEY = 'POINTS_ITEM_KEY';\r\n\r\ntype Inputs = {\r\n  [key: string]: {\r\n    amount: number,\r\n    weight: number,\r\n    type: string,\r\n  }\r\n};\r\n\r\ntype RateTargets = {\r\n  [key: string]: {\r\n    value: number,\r\n    recipe: string | null,\r\n    isPoints: boolean,\r\n  }\r\n};\r\n\r\ntype MaximizeTargets = { key: string, priority: number };\r\n\r\ntype GlobalWeights = {\r\n  resources: number,\r\n  power: number,\r\n  complexity: number,\r\n  buildings: number\r\n};\r\n\r\ntype ProductionSolution = { [key: string]: number };\r\ntype ProductionAmount = { recipeKey: string, amount: number };\r\ntype ItemProductionTotals = {\r\n  [key: string]: {\r\n    producedBy: ProductionAmount[],\r\n    usedBy: ProductionAmount[],\r\n  }\r\n};\r\n\r\nexport type SolverResults = {\r\n  productionGraph: ProductionGraph | null,\r\n  report: Report | null,\r\n  timestamp: number,\r\n  computeTime: number,\r\n  error: GraphError | null,\r\n};\r\n\r\nexport type Report = {\r\n  pointsProduced: number,\r\n  powerUsageEstimate: {\r\n    production: number,\r\n    extraction: number,\r\n    generators: number,\r\n    total: number,\r\n  },\r\n  resourceEfficiencyScore: number,\r\n  totalBuildArea: number,\r\n  estimatedFoundations: number,\r\n  buildingsUsed: {\r\n    [key: string]: {\r\n      count: number,\r\n      materialCost: {\r\n        [key: string]: number,\r\n      }\r\n    },\r\n  },\r\n  totalMaterialCost: {\r\n    [key: string]: number,\r\n  },\r\n}\r\n\r\nexport type ProductionGraph = {\r\n  nodes: { [key: string]: GraphNode },\r\n  edges: GraphEdge[],\r\n};\r\n\r\nexport type GraphNode = {\r\n  id: string,\r\n  key: string,\r\n  type: string,\r\n  multiplier: number,\r\n};\r\n\r\nexport type GraphEdge = {\r\n  key: string,\r\n  from: string,\r\n  to: string,\r\n  productionRate: number,\r\n};\r\n\r\ntype ItemMap = {\r\n  [key: string]: boolean;\r\n}\r\n\r\nexport class ProductionSolver {\r\n  private globalWeights: GlobalWeights;\r\n  private inputs: Inputs;\r\n  private rateTargets: RateTargets;\r\n  private maximizeTargets: MaximizeTargets[];\r\n  private hasPointsTarget: boolean;\r\n  private allowedRecipes: RecipeMap;\r\n  private allowedItems: ItemMap;\r\n  private scale: number;\r\n\r\n  public constructor(options: FactoryOptions) {\r\n    this.allowedRecipes = options.allowedRecipes;\r\n    this.allowedItems = {};\r\n\r\n    Object.entries(this.allowedRecipes).forEach(([recipeKey, allowed]) => {\r\n      if (!allowed) return;\r\n      const recipeInfo = recipes[recipeKey];\r\n      recipeInfo.ingredients.forEach((i) => {\r\n        this.allowedItems[i.itemClass] = true;\r\n      });\r\n      recipeInfo.products.forEach((p) => {\r\n        this.allowedItems[p.itemClass] = true;\r\n      });\r\n    });\r\n    \r\n    this.globalWeights = {\r\n      resources: Number(options.weightingOptions.resources),\r\n      power: Number(options.weightingOptions.power),\r\n      complexity: Number(options.weightingOptions.complexity),\r\n      buildings: Number(options.weightingOptions.buildings),\r\n    };\r\n\r\n    this.validateNumber(this.globalWeights.resources);\r\n    this.validateNumber(this.globalWeights.power);\r\n    this.validateNumber(this.globalWeights.complexity);\r\n    this.validateNumber(this.globalWeights.buildings);\r\n\r\n    const maxGlobalWeight = Math.max(\r\n      this.globalWeights.resources,\r\n      this.globalWeights.power,\r\n      this.globalWeights.complexity,\r\n      this.globalWeights.buildings\r\n    );\r\n\r\n    this.globalWeights.resources = (this.globalWeights.resources / maxGlobalWeight) + MIN_RESOURCE_WEIGHT;\r\n    this.globalWeights.power = (this.globalWeights.power / maxGlobalWeight);\r\n    this.globalWeights.complexity = 1000 * (this.globalWeights.complexity / maxGlobalWeight);\r\n    this.globalWeights.buildings = (this.globalWeights.buildings / maxGlobalWeight);\r\n\r\n    this.inputs = {};\r\n\r\n    options.inputResources.forEach((item) => {\r\n      const resourceData = resources[item.itemKey];\r\n      if (!resourceData) return;\r\n      const amount = item.unlimited ? Infinity : Number(item.value);\r\n      this.validateNumber(amount);\r\n      if (!amount) return;\r\n      const weight = Number(item.weight);\r\n      this.validateNumber(weight);\r\n      this.inputs[item.itemKey] = {\r\n        amount,\r\n        weight,\r\n        type: NODE_TYPE.RESOURCE,\r\n      }\r\n    });\r\n\r\n    const maxResourceWeight = Math.max(...Object.values(this.inputs).map((i) => i.weight));\r\n    Object.values(this.inputs).forEach((i) => { i.weight /= maxResourceWeight });\r\n\r\n    options.inputItems.forEach((item) => {\r\n      if (!item.itemKey) return;\r\n      const amount = item.unlimited ? Infinity : Number(item.value);\r\n      this.validateNumber(amount);\r\n      if (!amount) return;\r\n      if (!this.inputs[item.itemKey]) {\r\n        this.inputs[item.itemKey] = {\r\n          amount,\r\n          weight: 0,\r\n          type: NODE_TYPE.INPUT_ITEM,\r\n        }\r\n      } else {\r\n        this.inputs[item.itemKey].amount += amount;\r\n      }\r\n    });\r\n\r\n    if (options.allowHandGatheredItems) {\r\n      Object.keys(handGatheredItems).forEach((item) => {\r\n        this.inputs[item] = {\r\n          amount: Infinity,\r\n          weight: 1000,\r\n          type: NODE_TYPE.HAND_GATHERED_RESOURCE,\r\n        };\r\n      });\r\n    }\r\n\r\n    this.inputs['Desc_Gift_C'] = {\r\n      amount: Infinity,\r\n      weight: 1000,\r\n      type: NODE_TYPE.HAND_GATHERED_RESOURCE,\r\n    };\r\n\r\n    this.rateTargets = {};\r\n    this.maximizeTargets = [];\r\n    this.hasPointsTarget = false;\r\n    this.scale = 0;\r\n\r\n    const perMinTargets: RateTargets = {};\r\n    const recipeTargets: RateTargets = {};\r\n    options.productionItems.forEach((item) => {\r\n      if (!item.itemKey) return;\r\n      const amount = Number(item.value);\r\n      this.validateNumber(amount);\r\n      if (!amount) return;\r\n      if (this.inputs[item.itemKey]) throw new GraphError('INVALID INPUT', 'You can\\'t set the same item as both an input and an output. Double check your factory settings.');\r\n      const isPoints = item.itemKey === POINTS_ITEM_KEY;\r\n      if (isPoints) {\r\n        this.hasPointsTarget = true;\r\n      }\r\n      switch (item.mode) {\r\n        case 'per-minute':\r\n          this.scale += amount;\r\n          if (perMinTargets[item.itemKey]) {\r\n            perMinTargets[item.itemKey].value += amount;\r\n          } else {\r\n            perMinTargets[item.itemKey] = {\r\n              value: amount,\r\n              recipe: null,\r\n              isPoints,\r\n            };\r\n          }\r\n          break;\r\n        case 'maximize':\r\n          const existingTarget = this.maximizeTargets.find((t) => t.key === item.itemKey);\r\n          if (existingTarget) {\r\n            if (existingTarget.priority < amount) {\r\n              existingTarget.priority = amount;\r\n            }\r\n          } else {\r\n            this.maximizeTargets.push({\r\n              key: item.itemKey,\r\n              priority: amount,\r\n            });\r\n          }\r\n          break;\r\n        default:\r\n          const recipeKey = item.mode;\r\n          const recipeInfo = recipes[recipeKey];\r\n          if (recipeInfo) {\r\n            if (!this.allowedRecipes[recipeKey]) {\r\n              throw new GraphError('CANNOT TARGET DISABLED RECIPE', 'Make sure the recipe you are targeting is enabled in the Recipes tab.');\r\n            }\r\n            const target = recipeInfo.products.find((p) => p.itemClass === item.itemKey)!;\r\n            this.scale += target.perMinute * amount;\r\n            if (perMinTargets[item.itemKey]) {\r\n              perMinTargets[item.itemKey].value += target.perMinute * amount;\r\n            } else {\r\n              perMinTargets[item.itemKey] = {\r\n                value: target.perMinute * amount,\r\n                recipe: null,\r\n                isPoints: false,\r\n              };\r\n            }\r\n            if (recipeTargets[recipeKey]) {\r\n              recipeTargets[recipeKey].value += amount;\r\n            } else {\r\n              recipeTargets[recipeKey] = {\r\n                value: amount,\r\n                recipe: recipeKey,\r\n                isPoints: false,\r\n              };\r\n            }\r\n          } else {\r\n            throw new GraphError('INVALID OUTPUT MODE SELECTION', 'Something really broke... Try refreshing or resetting your factory.');\r\n          }\r\n      }\r\n    });\r\n\r\n    if (this.scale === 0) {\r\n      this.scale = 1;\r\n    }\r\n\r\n    this.maximizeTargets\r\n      .sort((a, b) => {\r\n        if (a.priority > b.priority) return -1;\r\n        if (a.priority < b.priority) return 1;\r\n        throw new GraphError('DUPLICATE MAXIMIZATION PRIORITY', 'Two items have the same maximization priority, which is currently not allowed.');\r\n      });\r\n\r\n    this.rateTargets = {\r\n      ...perMinTargets,\r\n      ...recipeTargets,\r\n    };\r\n    if (Object.keys(this.rateTargets).length === 0 && this.maximizeTargets.length === 0) {\r\n      throw new GraphError('NO OUTPUTS SET', 'Open the control panel to get started.');\r\n    }\r\n  }\r\n\r\n  private validateNumber(num: Number) {\r\n    if (Number.isNaN(num)) {\r\n      throw new GraphError('INVALID VALUE: NOT A NUMBER', 'Double check your factory settings.');\r\n    } else if (num < 0) {\r\n      throw new GraphError('INVALID VALUE: NEGATIVE NUMBER', 'Double check your factory settings.');\r\n    }\r\n  }\r\n\r\n  public async exec(): Promise<SolverResults> {\r\n    const timestamp = performance.now();\r\n    try {\r\n      const glpk = await loadGLPK();\r\n      const productionSolution = await this.productionSolverPass(RATE_TARGET_KEY, this.inputs, glpk);\r\n      let productionGraph = this.generateProductionGraph(productionSolution);\r\n\r\n      for (const target of this.maximizeTargets) {\r\n        const remainingInputs: Inputs = {};\r\n        for (const [inputKey, input] of Object.entries(this.inputs)) {\r\n          const inputNode = Object.values(productionGraph.nodes).find((n) => n.key === inputKey);\r\n          let usedAmount = 0;\r\n          if (inputNode) {\r\n            usedAmount = inputNode.multiplier;\r\n          }\r\n          const diff = input.amount - usedAmount;\r\n          if (diff > EPSILON) {\r\n            remainingInputs[inputKey] = {\r\n              ...input,\r\n              amount: diff,\r\n            };\r\n          }\r\n        }\r\n        const solution = await this.productionSolverPass(target.key, remainingInputs, glpk);\r\n        for (const [key, multiplier] of Object.entries(solution)) {\r\n          if (productionSolution[key]) {\r\n            productionSolution[key] += multiplier;\r\n          } else {\r\n            productionSolution[key] = multiplier;\r\n          }\r\n        }\r\n        productionGraph = this.generateProductionGraph(productionSolution);\r\n      }\r\n\r\n      if (Object.keys(productionGraph.nodes).length === 0) {\r\n        throw new GraphError('SOLUTION IS EMPTY', 'For some reason the solution for your parameters is an empty factory. Double check that your factory settings make sense.');\r\n      }\r\n      const report = this.generateProductionReport(productionGraph);\r\n\r\n      return {\r\n        productionGraph,\r\n        report,\r\n        timestamp,\r\n        computeTime: performance.now() - timestamp,\r\n        error: null,\r\n      };\r\n    } catch (e: unknown) {\r\n      return {\r\n        productionGraph: null,\r\n        report: null,\r\n        timestamp,\r\n        computeTime: performance.now() - timestamp,\r\n        error: e as GraphError,\r\n      };\r\n    }\r\n  }\r\n\r\n  private getItemPoints(itemKey: string) {\r\n    const itemInfo = items[itemKey];\r\n    return itemInfo.isFicsmas ? 0 : itemInfo.sinkPoints;\r\n  }\r\n\r\n  private async productionSolverPass(targetKey: string, remainingInputs: Inputs, glpk: GLPK): Promise<ProductionSolution> {\r\n    const model: LP = {\r\n      name: 'production',\r\n      objective: {\r\n        name: 'score',\r\n        direction: glpk.GLP_MIN,\r\n        vars: [],\r\n      },\r\n      subjectTo: [],\r\n      binaries: [],\r\n    };\r\n\r\n    const doPoints = (targetKey === RATE_TARGET_KEY && this.rateTargets[POINTS_ITEM_KEY]) || targetKey === POINTS_ITEM_KEY;\r\n    const pointsVars: Var[] = [];\r\n\r\n    for (const [recipeKey, recipeInfo] of Object.entries(recipes)) {\r\n      if (!this.allowedRecipes[recipeKey]) continue;\r\n      const buildingInfo = buildings[recipeInfo.producedIn];\r\n      const powerScore = buildingInfo.power > 0 ? buildingInfo.power * this.globalWeights.power : 0;\r\n      const buildingsScore = this.globalWeights.buildings;\r\n      let resourceScore = 0;\r\n\r\n      for (const ingredient of recipeInfo.ingredients) {\r\n        const inputInfo = this.inputs[ingredient.itemClass];\r\n        if (inputInfo) {\r\n          resourceScore += inputInfo.weight * ingredient.perMinute * this.globalWeights.resources;\r\n        }\r\n      }\r\n\r\n      \r\n      model.objective.vars.push({\r\n        name: recipeKey,\r\n        coef: powerScore + resourceScore + buildingsScore,\r\n      });\r\n\r\n\r\n      if (targetKey === RATE_TARGET_KEY) {\r\n        if (this.rateTargets[recipeKey]) {\r\n          model.subjectTo.push({\r\n            name: `${recipeKey} recipe constraint`,\r\n            vars: [{ name: recipeKey, coef: 1 }],\r\n            bnds: { type: glpk.GLP_LO, ub: 0, lb: this.rateTargets[recipeKey].value },\r\n          });\r\n        }\r\n      }\r\n\r\n      if (doPoints) {\r\n        let pointCoef = 0;\r\n        for (const product of recipeInfo.products) {\r\n          if (!this.inputs[product.itemClass] || this.inputs[product.itemClass].type === NODE_TYPE.INPUT_ITEM) {\r\n            pointCoef -= product.perMinute * this.getItemPoints(product.itemClass) / 1000;\r\n          }\r\n        }\r\n        for (const ingredient of recipeInfo.ingredients) {\r\n          if (!this.inputs[ingredient.itemClass] || this.inputs[ingredient.itemClass].type === NODE_TYPE.INPUT_ITEM) {\r\n            pointCoef += ingredient.perMinute * this.getItemPoints(ingredient.itemClass) / 1000;\r\n          }\r\n        }\r\n        pointsVars.push({ name: recipeKey, coef: pointCoef });\r\n      }\r\n    }\r\n\r\n  \r\n    if (doPoints) {\r\n      let intrinsicPoints = 0;\r\n      for (const [itemKey, inputInfo] of Object.entries(remainingInputs)) {\r\n        if (inputInfo.type === NODE_TYPE.INPUT_ITEM) {\r\n          intrinsicPoints += this.getItemPoints(itemKey) * inputInfo.amount;\r\n        }\r\n      }\r\n      if (targetKey === RATE_TARGET_KEY) {\r\n        for (const [itemKey, targetInfo] of Object.entries(this.rateTargets)) {\r\n          if (itemKey !== POINTS_ITEM_KEY) {\r\n            intrinsicPoints -= this.getItemPoints(itemKey) * targetInfo.value;\r\n          }\r\n        }\r\n        model.subjectTo.push({\r\n          name: 'AWESOME Sink Points constraint',\r\n          vars: pointsVars,\r\n          bnds: { type: glpk.GLP_UP, ub: -this.rateTargets[POINTS_ITEM_KEY].value - intrinsicPoints, lb: NaN },\r\n        });\r\n      } else if (targetKey === POINTS_ITEM_KEY) {\r\n        pointsVars.forEach((v) => {\r\n          const existingVar = model.objective.vars.find((ov) => ov.name === v.name);\r\n          if (existingVar) {\r\n            existingVar.coef += v.coef * MAXIMIZE_WEIGHT;\r\n          } else {\r\n            model.objective.vars.push({\r\n              name: v.name,\r\n              coef: v.coef * MAXIMIZE_WEIGHT,\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n\r\n    for (const [itemKey, itemInfo] of Object.entries(items)) {\r\n      if (!this.allowedItems[itemKey]) continue;\r\n      const vars: Var[] = [];\r\n      \r\n      const binKey = `${itemKey}_BIN`;\r\n      const binVars: Var[] = [];\r\n\r\n      for (const recipeKey of itemInfo.usedInRecipes) {\r\n        if (!this.allowedRecipes[recipeKey]) continue;\r\n        const recipeInfo = recipes[recipeKey];\r\n        const target = recipeInfo.ingredients.find((i) => i.itemClass === itemKey)!;\r\n        vars.push({ name: recipeKey, coef: target.perMinute });\r\n\r\n        if (!handGatheredItems[itemKey]) {\r\n          binVars.push({ name: recipeKey, coef: -1 });\r\n        }\r\n      }\r\n\r\n      for (const recipeKey of itemInfo.producedFromRecipes) {\r\n        if (!this.allowedRecipes[recipeKey]) continue;\r\n        const recipeInfo = recipes[recipeKey];\r\n        const target = recipeInfo.products.find((p) => p.itemClass === itemKey)!;\r\n\r\n        const existingVar = vars.find((v) => v.name === recipeKey);\r\n        if (existingVar) {\r\n          existingVar.coef -= target.perMinute;\r\n        } else {\r\n          vars.push({ name: recipeKey, coef: -target.perMinute });\r\n        }\r\n      }\r\n\r\n      if (targetKey === RATE_TARGET_KEY) {\r\n        if (this.globalWeights.complexity > 0 && binVars.length > 0) {\r\n          model.binaries!.push(binKey);\r\n          model.objective.vars.push({ name: binKey, coef: this.globalWeights.complexity });\r\n          model.subjectTo.push({\r\n            name: `${binKey} constraint`,\r\n            vars: [\r\n              { name: binKey, coef: ENFORCE_BIN_WEIGHT * Math.sqrt(this.scale) },\r\n              ...binVars,\r\n            ],\r\n            bnds: { type: glpk.GLP_LO, ub: NaN, lb: 0 },\r\n          });\r\n        }\r\n      }\r\n\r\n      if (vars.length === 0) continue;\r\n\r\n      if (remainingInputs[itemKey]) {\r\n        const inputInfo = remainingInputs[itemKey];\r\n        if (inputInfo.amount !== Infinity) {\r\n          model.subjectTo.push({\r\n            name: `${itemKey} resource constraint`,\r\n            vars,\r\n            bnds: { type: glpk.GLP_UP, ub: inputInfo.amount, lb: NaN },\r\n          });\r\n        }\r\n      }\r\n\r\n      else if (targetKey === RATE_TARGET_KEY && this.rateTargets[itemKey]) {\r\n        const outputInfo = this.rateTargets[itemKey];\r\n        model.subjectTo.push({\r\n          name: `${itemKey} final product constraint`,\r\n          vars,\r\n          bnds: { type: glpk.GLP_UP, ub: -outputInfo.value, lb: NaN },\r\n        });\r\n      }\r\n\r\n      else if (targetKey === itemKey) {\r\n        model.subjectTo.push({\r\n          name: `${itemKey} final product constraint`,\r\n          vars,\r\n          bnds: { type: glpk.GLP_UP, ub: 0, lb: NaN },\r\n        });\r\n\r\n        vars.forEach((v) => {\r\n          const existingVar = model.objective.vars.find((ov) => ov.name === v.name);\r\n          if (existingVar) {\r\n            existingVar.coef += v.coef * MAXIMIZE_WEIGHT;\r\n          } else {\r\n            model.objective.vars.push({\r\n              name: v.name,\r\n              coef: v.coef * MAXIMIZE_WEIGHT,\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      else {\r\n        model.subjectTo.push({\r\n          name: `${itemKey} intermediates constraint`,\r\n          vars,\r\n          bnds: { type: glpk.GLP_UP, ub: 0, lb: NaN },\r\n        });\r\n      }\r\n    }\r\n\r\n    const solution = await glpk.solve(model, { msglev: glpk.GLP_MSG_OFF, tmlim: TIME_LIMIT });\r\n    if (solution.time > TIME_LIMIT) {\r\n      throw new GraphError('TIMED OUT', 'Try setting the complexity weight to 0. Unfortunately it is currently very slow for large factories. For complex factories, you might try the Buildings optimizer instead.');\r\n    }\r\n    if (solution.result.status !== glpk.GLP_OPT && solution.result.status !== glpk.GLP_FEAS) {\r\n      if (targetKey === RATE_TARGET_KEY) {\r\n        throw new GraphError('NO SOLUTION', 'This could be due to missing recipes, impossible demands, or any number of reasons. Double check your factory settings.');\r\n      } else {\r\n        throw new GraphError('SOLUTION IS UNBOUNDED', 'Somehow an infinite amount of items can be produced. Double check the inputs tab for infinite resources (including the hand gathered resources option).');\r\n      }\r\n    }\r\n\r\n\r\n    const result: ProductionSolution = {};\r\n    Object.entries(solution.result.vars).forEach(([key, val]) => {\r\n      if (val > EPSILON) {\r\n        if (recipes[key]) {\r\n          result[key] = val;\r\n        }\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  private generateProductionGraph(productionSolution: ProductionSolution): ProductionGraph {\r\n    const itemProductionTotals: ItemProductionTotals = {};\r\n    const graph: ProductionGraph = {\r\n      nodes: {},\r\n      edges: [],\r\n    };\r\n\r\n    for (const [recipeKey, multiplier] of Object.entries(productionSolution)) {\r\n      const recipeInfo = recipes[recipeKey];\r\n\r\n      for (const product of recipeInfo.products) {\r\n        const amount = multiplier * product.perMinute;\r\n        if (!itemProductionTotals[product.itemClass]) {\r\n          itemProductionTotals[product.itemClass] = {\r\n            producedBy: [],\r\n            usedBy: [],\r\n          };\r\n        }\r\n        itemProductionTotals[product.itemClass].producedBy.push({ recipeKey, amount });\r\n      }\r\n\r\n      for (const ingredient of recipeInfo.ingredients) {\r\n        const amount = multiplier * ingredient.perMinute;\r\n        if (!itemProductionTotals[ingredient.itemClass]) {\r\n          itemProductionTotals[ingredient.itemClass] = {\r\n            producedBy: [],\r\n            usedBy: [],\r\n          };\r\n        }\r\n        itemProductionTotals[ingredient.itemClass].usedBy.push({ recipeKey, amount });\r\n      }\r\n\r\n      graph.nodes[recipeKey] = {\r\n        id: nanoid(),\r\n        key: recipeKey,\r\n        type: NODE_TYPE.RECIPE,\r\n        multiplier,\r\n      };\r\n    }\r\n\r\n    for (const [itemKey, productionTotals] of Object.entries(itemProductionTotals)) {\r\n      const { producedBy, usedBy } = productionTotals;\r\n      let i = 0, j = 0;\r\n      nextDemand:\r\n      while (i < usedBy.length) {\r\n        const usageInfo = usedBy[i];\r\n        const usageNode = graph.nodes[usageInfo.recipeKey];\r\n        \r\n        while (j < producedBy.length) {\r\n          const productionInfo = producedBy[j];\r\n          const productionNode = graph.nodes[productionInfo.recipeKey];\r\n\r\n          const outputRecipe = this.rateTargets[itemKey]?.recipe;\r\n          if (outputRecipe && outputRecipe === productionInfo.recipeKey) {\r\n            const outputInfo = this.rateTargets[itemKey];\r\n            const recipeInfo = recipes[outputRecipe];\r\n            const target = recipeInfo.products.find((p) => p.itemClass === itemKey)!;\r\n            const recipeAmount = outputInfo.value * target.perMinute;\r\n            productionInfo.amount -= recipeAmount;\r\n\r\n            let itemNode = graph.nodes[itemKey];\r\n            if (!itemNode) {\r\n              itemNode = {\r\n                id: nanoid(),\r\n                key: itemKey,\r\n                type: NODE_TYPE.FINAL_PRODUCT,\r\n                multiplier: recipeAmount,\r\n              }\r\n              graph.nodes[itemKey] = itemNode;\r\n            } else {\r\n              graph.nodes[itemKey].multiplier += recipeAmount;\r\n            }\r\n            graph.edges.push({\r\n              key: itemKey,\r\n              from: productionNode.id,\r\n              to: itemNode.id,\r\n              productionRate: recipeAmount,\r\n            });\r\n          } \r\n\r\n          if (productionInfo.amount < EPSILON) {\r\n            j++\r\n            continue;\r\n          }\r\n\r\n          if (usageInfo.amount <= productionInfo.amount) {\r\n            graph.edges.push({\r\n              key: itemKey,\r\n              from: productionNode.id,\r\n              to: usageNode.id,\r\n              productionRate: usageInfo.amount,\r\n            });\r\n            productionInfo.amount -= usageInfo.amount;\r\n            usageInfo.amount = 0;\r\n          } else {\r\n            graph.edges.push({\r\n              key: itemKey,\r\n              from: productionNode.id,\r\n              to: usageNode.id,\r\n              productionRate: productionInfo.amount,\r\n            });\r\n            usageInfo.amount -= productionInfo.amount;\r\n            productionInfo.amount = 0;\r\n          }\r\n          \r\n          if (usageInfo.amount < EPSILON) {\r\n            i++;\r\n            continue nextDemand;\r\n          }\r\n          j++;\r\n        }\r\n        break;\r\n      }\r\n\r\n      while (i < usedBy.length) {\r\n        const usageInfo = usedBy[i];\r\n        const usageNode = graph.nodes[usageInfo.recipeKey];\r\n        if (usageInfo.amount > EPSILON && this.inputs[itemKey]) {\r\n          let itemNode = graph.nodes[itemKey];\r\n          if (!itemNode) {\r\n            const inputInfo = this.inputs[itemKey];\r\n            itemNode = {\r\n              id: nanoid(),\r\n              key: itemKey,\r\n              type: inputInfo.type,\r\n              multiplier: usageInfo.amount,\r\n            };\r\n            graph.nodes[itemKey] = itemNode;\r\n          } else {\r\n            itemNode.multiplier += usageInfo.amount;\r\n          }\r\n          graph.edges.push({\r\n            key: itemKey,\r\n            from: itemNode.id,\r\n            to: usageNode.id,\r\n            productionRate: usageInfo.amount,\r\n          });\r\n          usageInfo.amount = 0;\r\n        }\r\n        i++;\r\n      }\r\n\r\n      while (j < producedBy.length) {\r\n        const productionInfo = producedBy[j];\r\n        const productionNode = graph.nodes[productionInfo.recipeKey];\r\n        if (productionInfo.amount > EPSILON) {\r\n          let itemNode = graph.nodes[itemKey];\r\n          if (!itemNode) {\r\n            let nodeType = NODE_TYPE.SIDE_PRODUCT;\r\n            if (this.rateTargets[itemKey] || this.maximizeTargets.find((t) => t.key === itemKey)) {\r\n              nodeType = NODE_TYPE.FINAL_PRODUCT;\r\n            } else if (this.hasPointsTarget && this.getItemPoints(itemKey) > 0) {\r\n              nodeType = NODE_TYPE.FINAL_PRODUCT;\r\n            }\r\n            itemNode = {\r\n              id: nanoid(),\r\n              key: itemKey,\r\n              type: nodeType,\r\n              multiplier: productionInfo.amount\r\n            };\r\n            graph.nodes[itemKey] = itemNode;\r\n          } else {\r\n            itemNode.multiplier += productionInfo.amount;\r\n          }\r\n          graph.edges.push({\r\n            key: itemKey,\r\n            from: productionNode.id,\r\n            to: itemNode.id,\r\n            productionRate: productionInfo.amount,\r\n          });\r\n          productionInfo.amount = 0;\r\n        }\r\n        j++;\r\n      }\r\n    }\r\n\r\n    return graph;\r\n  }\r\n\r\n  private generateProductionReport(productionGraph: ProductionGraph): Report {\r\n    const report: Report = {\r\n      pointsProduced: 0,\r\n      powerUsageEstimate: {\r\n        production: 0,\r\n        extraction: 0,\r\n        generators: 0,\r\n        total: 0,\r\n      },\r\n      resourceEfficiencyScore: 0,\r\n      totalBuildArea: 0,\r\n      estimatedFoundations: 0,\r\n      buildingsUsed: {},\r\n      totalMaterialCost: {},\r\n    };\r\n\r\n    for (const [key, node] of Object.entries(productionGraph.nodes)) {\r\n      if (node.type === NODE_TYPE.RECIPE) {\r\n        const recipeInfo = recipes[key];\r\n        const buildingKey = recipeInfo.producedIn;\r\n        const buildingInfo = buildings[buildingKey];\r\n        const power = node.multiplier * buildingInfo.power;\r\n        if (power < 0) {\r\n          report.powerUsageEstimate.generators += -power;\r\n        } else {\r\n          report.powerUsageEstimate.production += power;\r\n        }\r\n        report.powerUsageEstimate.total += power;\r\n        report.totalBuildArea += Math.ceil(node.multiplier) * buildingInfo.area;\r\n        if (!report.buildingsUsed[buildingKey]) {\r\n          report.buildingsUsed[buildingKey] = {\r\n            count: Math.ceil(node.multiplier),\r\n            materialCost: {},\r\n          };\r\n        } else {\r\n          report.buildingsUsed[buildingKey].count += Math.ceil(node.multiplier);\r\n        }\r\n\r\n        for (const ingredient of buildingInfo.buildCost) {\r\n          const amount = Math.ceil(node.multiplier) * ingredient.quantity;\r\n          if (!report.buildingsUsed[buildingKey].materialCost[ingredient.itemClass]) {\r\n            report.buildingsUsed[buildingKey].materialCost[ingredient.itemClass] = amount;\r\n          } else {\r\n            report.buildingsUsed[buildingKey].materialCost[ingredient.itemClass] += amount;\r\n          }\r\n          if (!report.totalMaterialCost[ingredient.itemClass]) {\r\n            report.totalMaterialCost[ingredient.itemClass] = amount;\r\n          } else {\r\n            report.totalMaterialCost[ingredient.itemClass] += amount;\r\n          }\r\n        }\r\n        continue;\r\n      }\r\n\r\n      if (node.type === NODE_TYPE.FINAL_PRODUCT) {\r\n        report.pointsProduced += node.multiplier * this.getItemPoints(key);\r\n      } else if (node.type === NODE_TYPE.RESOURCE) {\r\n        report.resourceEfficiencyScore += node.multiplier * this.inputs[key].weight;\r\n        let power = 0;\r\n        if (key === 'Desc_Water_C') {\r\n          power = node.multiplier / 120 * buildings['Desc_WaterPump_C'].power;\r\n\r\n          const numExtractors = Math.ceil(node.multiplier / 120);\r\n          report.buildingsUsed['Desc_WaterPump_C'] = {\r\n            count: numExtractors,\r\n            materialCost: {},\r\n          };\r\n          for (const ingredient of buildings['Desc_WaterPump_C'].buildCost) {\r\n            const amount = numExtractors * ingredient.quantity;\r\n            report.buildingsUsed['Desc_WaterPump_C'].materialCost[ingredient.itemClass] = amount;\r\n            if (!report.totalMaterialCost[ingredient.itemClass]) {\r\n              report.totalMaterialCost[ingredient.itemClass] = amount;\r\n            } else {\r\n              report.totalMaterialCost[ingredient.itemClass] += amount;\r\n            }\r\n          }\r\n\r\n        } else if (key === 'Desc_LiquidOil_C') {\r\n          power = node.multiplier / 120 * buildings['Desc_OilPump_C'].power;\r\n        } else if (key === 'Desc_NitrogenGas_C') {\r\n          // SKIP\r\n        } else {\r\n          power = node.multiplier / 240 * buildings['Desc_MinerMk3_C'].power;\r\n        }\r\n        report.powerUsageEstimate.extraction += power;\r\n        report.powerUsageEstimate.total += power;\r\n      }\r\n    }\r\n\r\n    report.estimatedFoundations = Math.ceil(2 * (report.totalBuildArea / 64));\r\n\r\n    return report;\r\n  }\r\n}\r\n","import { nanoid } from 'nanoid';\r\nimport { recipes, items } from '../../../data'\r\nimport { POINTS_ITEM_KEY } from '../../../utilities/production-solver';\r\nimport { FactoryOptions, getInitialState } from '../reducer';\r\n\r\nconst FACTORY_SETTINGS_VERSION = 'v1_U5';\r\n\r\nconst SEP0 = ',';\r\nconst SEP1 = '|';\r\nconst SEP2 = ':';\r\n\r\nfunction getItemBySlug(slug: string) {\r\n  if (slug === 'points') {\r\n    return POINTS_ITEM_KEY;\r\n  }\r\n  const itemEntry = Object.entries(items).find(([key, item]) => item.slug === slug);\r\n  if (itemEntry) {\r\n    return itemEntry[0];\r\n  }\r\n  throw new Error('INVALID ITEM SLUG');\r\n}\r\n\r\nfunction getModeBySlug(slug: string) {\r\n  if (slug === 'per_minute') return 'per-minute';\r\n  if (slug === 'maximize') return 'maximize';\r\n  const recipeEntry = Object.entries(recipes).find(([key, recipe]) => recipe.slug === slug);\r\n  if (recipeEntry) {\r\n    return recipeEntry[0];\r\n  }\r\n  throw new Error('INVALID RECIPE SLUG');\r\n}\r\n\r\nexport function decodeState_v1_U5(stateStr: string): FactoryOptions {\r\n  const newState: FactoryOptions = getInitialState();\r\n\r\n  const fields = stateStr.split(SEP0);\r\n  if (fields[0] !== FACTORY_SETTINGS_VERSION) throw new Error('VERSION MISMATCH');\r\n  if (fields.length !== 7) throw new Error('INVALID DATA [BAD FIELDS]');\r\n\r\n  const allowedRecipes = Object.keys(newState.allowedRecipes)\r\n    .filter((recipeKey) => {\r\n      const recipeInfo = recipes[recipeKey];\r\n      if (recipeInfo.isFicsmas) {\r\n        newState.allowedRecipes[recipeKey] = false;\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n  const allowedRecipesBits = BigInt(`0x${fields[1]}`)\r\n    .toString(2)\r\n    .padStart(allowedRecipes.length, '0')\r\n    .split('')\r\n    .map((b) => !!parseInt(b));\r\n  allowedRecipes\r\n    .sort((a, b) => {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    })\r\n    .forEach((key, i) => {\r\n      newState.allowedRecipes[key] = !!allowedRecipesBits[i];\r\n    });\r\n\r\n  const productionItemsStrings = fields[2].split(SEP1);\r\n  if (productionItemsStrings[0]) {\r\n    productionItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 3) throw new Error('INVALID DATA [productionItems]');\r\n      newState.productionItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        mode: getModeBySlug(values[1]),\r\n        value: values[2],\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputItemsStrings = fields[3].split(SEP1);\r\n  if (inputItemsStrings[0]) {\r\n    inputItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 4) throw new Error('INVALID DATA [inputItems]');\r\n      newState.inputItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        value: values[1],\r\n        weight: values[2],\r\n        unlimited: !!parseInt(values[3]),\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputResourcesStrings = fields[4].split(SEP1);\r\n  newState.inputResources.forEach((resourceOptions, i) => {\r\n    const values = inputResourcesStrings[i].split(SEP2);\r\n    if (values.length !== 3) throw new Error('INVALID DATA [inputResources]');\r\n    resourceOptions.value = values[0];\r\n    resourceOptions.weight = values[1];\r\n    resourceOptions.unlimited = !!parseInt(values[2]);\r\n  });\r\n\r\n  newState.allowHandGatheredItems = !!parseInt(fields[5]);\r\n\r\n  const weightingOptionsStrings = fields[6].split(SEP2);\r\n  if (weightingOptionsStrings.length !== 3) throw new Error('INVALID DATA [weightingOptions]');\r\n  newState.weightingOptions.resources = weightingOptionsStrings[0];\r\n  newState.weightingOptions.power = weightingOptionsStrings[1];\r\n  newState.weightingOptions.complexity = weightingOptionsStrings[2];\r\n  newState.weightingOptions.buildings = '0';\r\n\r\n  return newState;\r\n}\r\n","import { nanoid } from 'nanoid';\r\nimport { recipes, items } from '../../../data'\r\nimport { POINTS_ITEM_KEY } from '../../../utilities/production-solver';\r\nimport { FactoryOptions, getInitialState } from '../reducer';\r\n\r\nconst FACTORY_SETTINGS_VERSION = 'v2_U5';\r\n\r\nconst SEP0 = ',';\r\nconst SEP1 = '|';\r\nconst SEP2 = ':';\r\n\r\nfunction getItemBySlug(slug: string) {\r\n  if (slug === 'points') {\r\n    return POINTS_ITEM_KEY;\r\n  }\r\n  const itemEntry = Object.entries(items).find(([key, item]) => item.slug === slug);\r\n  if (itemEntry) {\r\n    return itemEntry[0];\r\n  }\r\n  throw new Error('INVALID ITEM SLUG');\r\n}\r\n\r\nfunction getModeBySlug(slug: string) {\r\n  if (slug === 'per_minute') return 'per-minute';\r\n  if (slug === 'maximize') return 'maximize';\r\n  const recipeEntry = Object.entries(recipes).find(([key, recipe]) => recipe.slug === slug);\r\n  if (recipeEntry) {\r\n    return recipeEntry[0];\r\n  }\r\n  throw new Error('INVALID RECIPE SLUG');\r\n}\r\n\r\nexport function decodeState_v2_U5(stateStr: string): FactoryOptions {\r\n  const newState: FactoryOptions = getInitialState();\r\n\r\n  const fields = stateStr.split(SEP0);\r\n  if (fields[0] !== FACTORY_SETTINGS_VERSION) throw new Error('VERSION MISMATCH');\r\n  if (fields.length !== 7) throw new Error('INVALID DATA [BAD FIELDS]');\r\n\r\n  const allowedRecipesBits = BigInt(`0x${fields[1]}`)\r\n    .toString(2)\r\n    .padStart(Object.keys(newState.allowedRecipes).length, '0')\r\n    .split('')\r\n    .map((b) => !!parseInt(b));\r\n  Object.keys(newState.allowedRecipes)\r\n    .sort((a, b) => {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    })\r\n    .forEach((key, i) => {\r\n      newState.allowedRecipes[key] = !!allowedRecipesBits[i];\r\n    });\r\n\r\n  const productionItemsStrings = fields[2].split(SEP1);\r\n  if (productionItemsStrings[0]) {\r\n    productionItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 3) throw new Error('INVALID DATA [productionItems]');\r\n      newState.productionItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        mode: getModeBySlug(values[1]),\r\n        value: values[2],\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputItemsStrings = fields[3].split(SEP1);\r\n  if (inputItemsStrings[0]) {\r\n    inputItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 4) throw new Error('INVALID DATA [inputItems]');\r\n      newState.inputItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        value: values[1],\r\n        weight: values[2],\r\n        unlimited: !!parseInt(values[3]),\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputResourcesStrings = fields[4].split(SEP1);\r\n  newState.inputResources.forEach((resourceOptions, i) => {\r\n    const values = inputResourcesStrings[i].split(SEP2);\r\n    if (values.length !== 3) throw new Error('INVALID DATA [inputResources]');\r\n    resourceOptions.value = values[0];\r\n    resourceOptions.weight = values[1];\r\n    resourceOptions.unlimited = !!parseInt(values[2]);\r\n  });\r\n\r\n  newState.allowHandGatheredItems = !!parseInt(fields[5]);\r\n\r\n  const weightingOptionsStrings = fields[6].split(SEP2);\r\n  if (weightingOptionsStrings.length !== 3) throw new Error('INVALID DATA [weightingOptions]');\r\n  newState.weightingOptions.resources = weightingOptionsStrings[0];\r\n  newState.weightingOptions.power = weightingOptionsStrings[1];\r\n  newState.weightingOptions.complexity = weightingOptionsStrings[2];\r\n  newState.weightingOptions.buildings = '0';\r\n\r\n  return newState;\r\n}\r\n","import { nanoid } from 'nanoid';\r\nimport { recipes, items } from '../../../data'\r\nimport { POINTS_ITEM_KEY } from '../../../utilities/production-solver';\r\nimport { FactoryOptions, getInitialState } from '../reducer';\r\n\r\nconst FACTORY_SETTINGS_VERSION = 'v3_U5';\r\n\r\nconst SEP0 = ',';\r\nconst SEP1 = '|';\r\nconst SEP2 = ':';\r\n\r\nfunction getItemBySlug(slug: string) {\r\n  if (slug === 'points') {\r\n    return POINTS_ITEM_KEY;\r\n  }\r\n  const itemEntry = Object.entries(items).find(([key, item]) => item.slug === slug);\r\n  if (itemEntry) {\r\n    return itemEntry[0];\r\n  }\r\n  throw new Error('INVALID ITEM SLUG');\r\n}\r\n\r\nfunction getModeBySlug(slug: string) {\r\n  if (slug === 'per_minute') return 'per-minute';\r\n  if (slug === 'maximize') return 'maximize';\r\n  const recipeEntry = Object.entries(recipes).find(([key, recipe]) => recipe.slug === slug);\r\n  if (recipeEntry) {\r\n    return recipeEntry[0];\r\n  }\r\n  throw new Error('INVALID RECIPE SLUG');\r\n}\r\n\r\nexport function decodeState_v3_U5(stateStr: string): FactoryOptions {\r\n  const newState: FactoryOptions = getInitialState();\r\n\r\n  const fields = stateStr.split(SEP0);\r\n  if (fields[0] !== FACTORY_SETTINGS_VERSION) throw new Error('VERSION MISMATCH');\r\n  if (fields.length !== 7) throw new Error('INVALID DATA [BAD FIELDS]');\r\n\r\n  const allowedRecipesBits = BigInt(`0x${fields[1]}`)\r\n    .toString(2)\r\n    .padStart(Object.keys(newState.allowedRecipes).length, '0')\r\n    .split('')\r\n    .map((b) => !!parseInt(b));\r\n  Object.keys(newState.allowedRecipes)\r\n    .sort((a, b) => {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    })\r\n    .forEach((key, i) => {\r\n      newState.allowedRecipes[key] = !!allowedRecipesBits[i];\r\n    });\r\n\r\n  const productionItemsStrings = fields[2].split(SEP1);\r\n  if (productionItemsStrings[0]) {\r\n    productionItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 3) throw new Error('INVALID DATA [productionItems]');\r\n      newState.productionItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        mode: getModeBySlug(values[1]),\r\n        value: values[2],\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputItemsStrings = fields[3].split(SEP1);\r\n  if (inputItemsStrings[0]) {\r\n    inputItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 4) throw new Error('INVALID DATA [inputItems]');\r\n      newState.inputItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        value: values[1],\r\n        weight: values[2],\r\n        unlimited: !!parseInt(values[3]),\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputResourcesStrings = fields[4].split(SEP1);\r\n  newState.inputResources.forEach((resourceOptions, i) => {\r\n    const values = inputResourcesStrings[i].split(SEP2);\r\n    if (values.length !== 3) throw new Error('INVALID DATA [inputResources]');\r\n    resourceOptions.value = values[0];\r\n    resourceOptions.weight = values[1];\r\n    resourceOptions.unlimited = !!parseInt(values[2]);\r\n  });\r\n\r\n  newState.allowHandGatheredItems = !!parseInt(fields[5]);\r\n\r\n  const weightingOptionsStrings = fields[6].split(SEP2);\r\n  if (weightingOptionsStrings.length !== 4) throw new Error('INVALID DATA [weightingOptions]');\r\n  newState.weightingOptions.resources = weightingOptionsStrings[0];\r\n  newState.weightingOptions.power = weightingOptionsStrings[1];\r\n  newState.weightingOptions.complexity = weightingOptionsStrings[2];\r\n  newState.weightingOptions.buildings = weightingOptionsStrings[3];\r\n\r\n  return newState;\r\n}\r\n","import { nanoid } from 'nanoid';\r\nimport { resources, recipes } from '../../data'\r\nimport { decodeState_v1_U5 } from './state-decoders/v1_U5';\r\nimport { decodeState_v2_U5 } from './state-decoders/v2_U5';\r\nimport { decodeState_v3_U5 } from './state-decoders/v3_U5';\r\n\r\nexport const GAME_VERSION = 'U5';\r\nexport const SHARE_QUERY_KEY = 'factory';\r\nexport const MAX_PRIORITY = 20;\r\n\r\n// TYPES\r\nexport type ProductionItemOptions = {\r\n  key: string,\r\n  itemKey: string,\r\n  mode: 'per-minute' | 'maximize' | string,\r\n  value: string,\r\n};\r\n\r\nexport type WeightingOptions = {\r\n  resources: string,\r\n  power: string,\r\n  complexity: string,\r\n  buildings: string,\r\n};\r\n\r\nexport type InputItemOptions = {\r\n  key: string,\r\n  itemKey: string,\r\n  value: string,\r\n  weight: string,\r\n  unlimited: boolean,\r\n};\r\n\r\nexport type RecipeMap = {\r\n  [key: string]: boolean,\r\n};\r\n\r\nexport type FactoryOptions = {\r\n  gameVersion: string,\r\n  key: string,\r\n  productionItems: ProductionItemOptions[],\r\n  inputItems: InputItemOptions[],\r\n  inputResources: InputItemOptions[],\r\n  allowHandGatheredItems: boolean,\r\n  weightingOptions: WeightingOptions,\r\n  allowedRecipes: RecipeMap,\r\n};\r\n\r\n\r\n// DEFAULTS\r\nfunction getDefaultProductionItem(): ProductionItemOptions {\r\n  return ({\r\n    key: nanoid(),\r\n    itemKey: '',\r\n    mode: 'per-minute',\r\n    value: '10',\r\n  });\r\n}\r\n\r\nfunction getDefaultInputItem(): InputItemOptions {\r\n  return ({\r\n    key: nanoid(),\r\n    itemKey: '',\r\n    value: '10',\r\n    weight: '0',\r\n    unlimited: false,\r\n  });\r\n}\r\n\r\nconst ORDERED_RESOURCES = [\r\n  'Desc_OreIron_C',\r\n  'Desc_OreCopper_C',\r\n  'Desc_Stone_C',\r\n  'Desc_Coal_C',\r\n  'Desc_OreGold_C',\r\n  'Desc_RawQuartz_C',\r\n  'Desc_Sulfur_C',\r\n  'Desc_LiquidOil_C',\r\n  'Desc_OreBauxite_C',\r\n  'Desc_OreUranium_C',\r\n  'Desc_NitrogenGas_C',\r\n  'Desc_Water_C',\r\n];\r\n\r\nfunction getInitialInputResources(): InputItemOptions[] {\r\n  return Object.entries(resources)\r\n    .map(([key, data]) => {\r\n      let value = '0';\r\n      let unlimited = false;\r\n      if (key === 'Desc_Water_C') {\r\n        unlimited = true;\r\n      } else {\r\n        value = String(data.maxExtraction);\r\n      }\r\n      return {\r\n        key: key,\r\n        itemKey: key,\r\n        value,\r\n        weight: String(data.relativeValue),\r\n        unlimited,\r\n      };\r\n    })\r\n    .sort((a, b) => {\r\n      let aIndex = ORDERED_RESOURCES.findIndex((r) => r === a.itemKey);\r\n      if (aIndex === -1) aIndex = Infinity;\r\n      let bIndex = ORDERED_RESOURCES.findIndex((r) => r === b.itemKey);\r\n      if (bIndex === -1) bIndex = Infinity;\r\n      return aIndex < bIndex ? -1 : 1;\r\n    });\r\n}\r\n\r\nfunction getInitialWeightingOptions(): WeightingOptions {\r\n  return {\r\n    resources: '1000',\r\n    power: '1',\r\n    complexity: '0',\r\n    buildings: '0',\r\n  };\r\n}\r\n\r\nfunction getInitialAllowedRecipes(): RecipeMap {\r\n  const recipeMap: RecipeMap = {};\r\n  Object.entries(recipes).forEach(([key, data]) => {\r\n    recipeMap[key] = !data.isAlternate;\r\n  });\r\n  return recipeMap;\r\n}\r\n\r\nexport function getInitialState(): FactoryOptions {\r\n  return {\r\n    gameVersion: GAME_VERSION,\r\n    key: nanoid(),\r\n    productionItems: [],\r\n    inputItems: [],\r\n    inputResources: getInitialInputResources(),\r\n    allowHandGatheredItems: false,\r\n    weightingOptions: getInitialWeightingOptions(),\r\n    allowedRecipes: getInitialAllowedRecipes(),\r\n  };\r\n}\r\n\r\n\r\n// REDUCER\r\nexport type FactoryAction =\r\n  | { type: 'RESET_FACTORY' }\r\n  | { type: 'ADD_PRODUCTION_ITEM' }\r\n  | { type: 'DELETE_PRODUCTION_ITEM', key: string }\r\n  | { type: 'SET_PRODUCTION_ITEM', data: { key: string, itemKey: string } }\r\n  | { type: 'SET_PRODUCTION_ITEM_AMOUNT', data: { key: string, amount: string } }\r\n  | { type: 'SET_PRODUCTION_ITEM_MODE', data: { key: string, mode: string } }\r\n  | { type: 'ADD_INPUT_ITEM' }\r\n  | { type: 'DELETE_INPUT_ITEM', key: string }\r\n  | { type: 'UPDATE_INPUT_ITEM', data: InputItemOptions }\r\n  | { type: 'UPDATE_INPUT_RESOURCE', data: InputItemOptions }\r\n  | { type: 'SET_RESOURCES_TO_MAP_LIMITS' }\r\n  | { type: 'SET_RESOURCES_TO_0' }\r\n  | { type: 'SET_ALLOW_HAND_GATHERED_ITEMS', active: boolean }\r\n  | { type: 'UPDATE_WEIGHTING_OPTIONS', data: WeightingOptions }\r\n  | { type: 'SET_ALL_WEIGHTS_DEFAULT' }\r\n  | { type: 'SET_RECIPE_ACTIVE', key: string, active: boolean }\r\n  | { type: 'MASS_SET_RECIPES_ACTIVE', recipes: string[], active: boolean }\r\n  | { type: 'LOAD_FROM_SHARED_FACTORY', data: any }\r\n  | { type: 'LEGACY_LOAD_FROM_QUERY_PARAM' };\r\n\r\nexport function reducer(state: FactoryOptions, action: FactoryAction): FactoryOptions {\r\n  switch (action.type) {\r\n    case 'RESET_FACTORY': {\r\n      return getInitialState();\r\n    }\r\n    case 'ADD_PRODUCTION_ITEM': {\r\n      const newProductionItems = [\r\n        ...state.productionItems,\r\n        getDefaultProductionItem(),\r\n      ];\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'DELETE_PRODUCTION_ITEM': {\r\n      const newProductionItems = state.productionItems\r\n        .filter((i) => i.key !== action.key);\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'SET_PRODUCTION_ITEM': {\r\n      const newProductionItems = state.productionItems\r\n        .map((item) => {\r\n          if (item.key === action.data.key) {\r\n            let newItem;\r\n            if (item.mode === 'per-minute' || item.mode === 'maximize') {\r\n              newItem = { ...item };\r\n            } else {\r\n              newItem = getDefaultProductionItem();\r\n            }\r\n            newItem.itemKey = action.data.itemKey;\r\n            return newItem;\r\n          }\r\n          return item;\r\n        });\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'SET_PRODUCTION_ITEM_AMOUNT': {\r\n      const newProductionItems = state.productionItems\r\n        .map((item) => {\r\n          if (item.key === action.data.key) {\r\n            const newItem = { ...item };\r\n            newItem.value = action.data.amount;\r\n            return newItem;\r\n          }\r\n          return item;\r\n        });\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'SET_PRODUCTION_ITEM_MODE': {\r\n      const newProductionItems = state.productionItems\r\n        .map((item) => {\r\n          if (item.key === action.data.key) {\r\n            const newItem = { ...item };\r\n            newItem.mode = action.data.mode;\r\n            if (newItem.mode !== item.mode) {\r\n              if (newItem.mode === 'per-minute') {\r\n                newItem.value = '10';\r\n              } else if (newItem.mode === 'maximize') {\r\n                let nextPriority = MAX_PRIORITY;\r\n                while (nextPriority && nextPriority > 0) {\r\n                  // eslint-disable-next-line no-loop-func\r\n                  const priorityTaken = !!state.productionItems.find((i) => i.mode === 'maximize' && i.value === String(nextPriority));\r\n                  if (!priorityTaken) {\r\n                    break;\r\n                  }\r\n                  nextPriority--;\r\n                }\r\n                if (nextPriority > 0) {\r\n                  newItem.value = String(nextPriority);\r\n                } else {\r\n                  newItem.value = `${MAX_PRIORITY}`;\r\n                }\r\n              } else if (item.mode === 'per-minute' || item.mode === 'maximize') {\r\n                newItem.value = '1';\r\n              }\r\n            }\r\n            return newItem;\r\n          }\r\n          return item;\r\n        });\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'ADD_INPUT_ITEM': {\r\n      const newInputItems = [\r\n        ...state.inputItems,\r\n        getDefaultInputItem(),\r\n      ];\r\n      return { ...state, inputItems: newInputItems };\r\n    }\r\n    case 'DELETE_INPUT_ITEM': {\r\n      const newInputItems = state.inputItems\r\n        .filter((i) => i.key !== action.key);\r\n      return { ...state, inputItems: newInputItems };\r\n    }\r\n    case 'UPDATE_INPUT_ITEM': {\r\n      const newInputItems = state.inputItems\r\n        .map((i) => i.key === action.data.key ? action.data : i);\r\n      return { ...state, inputItems: newInputItems };\r\n    }\r\n    case 'UPDATE_INPUT_RESOURCE': {\r\n      const newInputResources = state.inputResources\r\n        .map((i) => i.key === action.data.key ? action.data : i);\r\n      return { ...state, inputResources: newInputResources };\r\n    }\r\n    case 'SET_RESOURCES_TO_MAP_LIMITS': {\r\n      const newInputResources = getInitialInputResources();\r\n      return { ...state, inputResources: newInputResources };\r\n    }\r\n    case 'SET_RESOURCES_TO_0': {\r\n      const newInputResources = state.inputResources\r\n        .map((data) => ({ ...data, value: '0', unlimited: false }));\r\n      return { ...state, inputResources: newInputResources };\r\n    }\r\n    case 'SET_ALLOW_HAND_GATHERED_ITEMS': {\r\n      return { ...state, allowHandGatheredItems: action.active };\r\n    }\r\n    case 'UPDATE_WEIGHTING_OPTIONS': {\r\n      const newWeightingOptions = { ...action.data };\r\n      return { ...state, weightingOptions: newWeightingOptions };\r\n    }\r\n    case 'SET_ALL_WEIGHTS_DEFAULT': {\r\n      const newWeightingOptions = getInitialWeightingOptions();\r\n      const newInputResources = state.inputResources\r\n        .map((i) => ({ ...i, weight: String(resources[i.itemKey].relativeValue) }));\r\n      return { ...state, weightingOptions: newWeightingOptions, inputResources: newInputResources };\r\n    }\r\n    case 'SET_RECIPE_ACTIVE': {\r\n      const newAllowedRecipes = { ...state.allowedRecipes };\r\n      newAllowedRecipes[action.key] = action.active;\r\n      return { ...state, allowedRecipes: newAllowedRecipes };\r\n    }\r\n    case 'MASS_SET_RECIPES_ACTIVE': {\r\n      const newAllowedRecipes = { ...state.allowedRecipes };\r\n      action.recipes.forEach((recipeKey) => {\r\n        newAllowedRecipes[recipeKey] = action.active;\r\n      });\r\n      return { ...state, allowedRecipes: newAllowedRecipes };\r\n    }\r\n    case 'LOAD_FROM_SHARED_FACTORY': {\r\n      try {\r\n        const newState: FactoryOptions = getInitialState();\r\n        newState.gameVersion = action.data.gameVersion;\r\n        newState.productionItems = (action.data.productionItems as any[]).map((i) => ({\r\n          ...getDefaultProductionItem(),\r\n          itemKey: i.itemKey,\r\n          mode: i.mode,\r\n          value: String(i.value),\r\n        }));\r\n        newState.inputItems = (action.data.inputItems as any[]).map((i) => ({\r\n          ...getDefaultInputItem(),\r\n          itemKey: i.itemKey,\r\n          value: String(i.value),\r\n          weight: String(i.weight),\r\n          unlimited: i.unlimited,\r\n        }));\r\n        newState.inputResources.forEach((r) => {\r\n          const resourceOptions = (action.data.inputResources as any[]).find((i) => r.itemKey === i.itemKey);\r\n          r.value = String(resourceOptions.value);\r\n          r.weight = String(resourceOptions.weight);\r\n          r.unlimited = resourceOptions.unlimited;\r\n        });\r\n        newState.allowHandGatheredItems = action.data.allowHandGatheredItems;\r\n        newState.weightingOptions.resources = String(action.data.weightingOptions.resources);\r\n        newState.weightingOptions.power = String(action.data.weightingOptions.power);\r\n        newState.weightingOptions.complexity = String(action.data.weightingOptions.complexity);\r\n        newState.weightingOptions.buildings = String(action.data.weightingOptions.buildings);\r\n        (action.data.allowedRecipes as any[]).forEach((key) => {\r\n          if (newState.allowedRecipes[key] != null) {\r\n            newState.allowedRecipes[key] = true;\r\n          }\r\n        });\r\n        return newState;\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n      return state;\r\n    }\r\n    case 'LEGACY_LOAD_FROM_QUERY_PARAM': {\r\n      const params = new URLSearchParams(window.location.search);\r\n      const encodedState = params.get('f');\r\n      if (encodedState) {\r\n        try {\r\n          return decodeState_LEGACY(encodedState);\r\n        } catch (e) {\r\n          console.error(e);\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n// ENCODE/DECODE STATE\r\nfunction decodeState_LEGACY(stateStr: string): FactoryOptions {\r\n  const version = stateStr.substring(0, 5);\r\n  if (version === 'v1_U5') {\r\n    return decodeState_v1_U5(stateStr);\r\n  } else if (version === 'v2_U5') {\r\n    return decodeState_v2_U5(stateStr);\r\n  } else if (version === 'v3_U5') {\r\n    return decodeState_v3_U5(stateStr);\r\n  } else {\r\n    throw new Error('INVALID VERSION');\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport { PlainObject } from \"./types\";\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: process.env.REACT_APP_API_BASE_URL,\r\n  responseType: 'json',\r\n});\r\n\r\nconst urlParamsRegex = /:([a-zA-Z0-9-_]+)/g;\r\nfunction parseURL(url: string, data: PlainObject) {\r\n  const parsedData = { ...data };\r\n  const parsedURL = url.replace(urlParamsRegex, (match, key) => {\r\n    const value = data[key];\r\n    if (typeof value === 'string') {\r\n      delete parsedData[key];\r\n      return value;\r\n    }\r\n    if (typeof value === 'number') {\r\n      delete parsedData[key];\r\n      return String(value);\r\n    }\r\n    if (value === undefined) {\r\n      console.error(`Error while parsing url ${url}. No value provided for required parameter ${match}.`);\r\n    } else {\r\n      console.error(`Error while parsing url ${url}. Datatype provided for parameter ${match} cannot be serialized.`);\r\n    }\r\n    return match;\r\n  });\r\n\r\n  return { parsedURL, parsedData };\r\n}\r\n\r\nexport async function get(url: string, data?: PlainObject) {\r\n  const { parsedURL, parsedData } = parseURL(url, data || {});\r\n  return apiClient.request({\r\n    method: 'GET',\r\n    url: parsedURL,\r\n    params: parsedData,\r\n  });\r\n}\r\n\r\nexport async function post(url: string, data?: PlainObject) {\r\n  const { parsedURL, parsedData } = parseURL(url, data || {});\r\n  return apiClient.request({\r\n    method: 'POST',\r\n    url: parsedURL,\r\n    data: parsedData,\r\n  });\r\n}\r\n\r\nexport default apiClient;\r\n","import { useCallback, useMemo, useState } from \"react\";\r\nimport { usePrevious } from \"../hooks/usePrevious\";\r\nimport { APIRequestData, APIResponseData, APIError, APIAction } from \"./types\";\r\n\r\nexport function useApi<RES extends APIResponseData = APIResponseData, REQ extends APIRequestData = APIRequestData>(apiAction: APIAction<RES, REQ>) {\r\n  const [data, setData] = useState<RES | null>(null);\r\n  const [error, setError] = useState<APIError | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const prevLoading = usePrevious(loading);\r\n\r\n  const requestHandler = useCallback(async (req: REQ) => {\r\n    setLoading(true);\r\n    try {\r\n      const result = await apiAction(req);\r\n      setData(result);\r\n      setError(null);\r\n    } catch (e: any) {\r\n      const apiError: APIError = {\r\n        status: e.status || 0,\r\n        message: e.message || 'Unknown error',\r\n      }\r\n      setData(null);\r\n      setError(apiError);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const api = useMemo(() => ({\r\n    data,\r\n    error,\r\n    loading,\r\n    completedThisFrame: !loading && prevLoading,\r\n    request: requestHandler,\r\n  }), [data, error, loading, prevLoading, requestHandler]);\r\n\r\n  return api;\r\n};\r\n","import React, { createContext, useContext, useReducer, useState, useEffect, useMemo, useCallback } from 'react';\r\nimport _ from 'lodash';\r\nimport seedrandom from 'seedrandom';\r\nimport { usePrevious } from '../../hooks/usePrevious';\r\nimport { ProductionSolver, SolverResults } from '../../utilities/production-solver';\r\nimport { reducer, FactoryOptions, FactoryAction, getInitialState, SHARE_QUERY_KEY } from './reducer';\r\nimport { useLocalStorageValue } from '@mantine/hooks';\r\nimport { GraphError } from '../../utilities/error/GraphError';\r\nimport { usePostSharedFactory } from '../../api/modules/shared-factories/usePostSharedFactory';\r\nimport { useGetSharedFactory } from '../../api/modules/shared-factories/useGetSharedFactory';\r\n\r\nexport type ProductionContextType = {\r\n  state: FactoryOptions,\r\n  dispatch: React.Dispatch<FactoryAction>,\r\n  calculating: boolean,\r\n  solverResults: SolverResults | null,\r\n  calculate: () => void,\r\n  autoCalculate: boolean,\r\n  setAutoCalculate: (value: boolean) => void,\r\n  generateShareLink: () => void,\r\n  shareLinkLoading: boolean,\r\n  shareLink: string,\r\n  ficsitTip: string,\r\n  engineerId: string,\r\n};\r\n\r\nconst ONE_HOUR = 1000 * 60 * 60;\r\nconst seed = Math.floor(new Date().getTime() / (0.5 * ONE_HOUR));\r\nconst rng = seedrandom(String(seed));\r\n\r\nconst TIPS = [\r\n  'Pet the lizard doggo!',\r\n  'Get back to work!',\r\n  'Update 6 now available!',\r\n  'Arachnophobia mode enabled.',\r\n  'FICSIT does not waste.',\r\n  'Linear programming!',\r\n  'Do not pet the spiders.',\r\n  'Just slap some beams on it!',\r\n  'Just 5 more minutes...',\r\n  'Thanks, Jace. Helps a lot!',\r\n  'Thanks, Snutt. Helps a lot!',\r\n  'Check out the new Spire Coast!',\r\n  'ADA says it\\'s my turn to play with the nuke nobelisk.',\r\n  'Harvest.',\r\n];\r\n\r\nconst TIP_INDEX = Math.floor(rng() * TIPS.length);\r\nconst TIP = `FICSIT Tip #${TIP_INDEX}: ${TIPS[TIP_INDEX]}`;\r\n\r\nconst ID = Math.floor(Math.random() * 1e7).toString().padStart(7, '0');\r\n\r\nconst _setCalculating = _.debounce((value: boolean, setCalculating: React.Dispatch<React.SetStateAction<boolean>>) => {\r\n  setCalculating(value);\r\n}, 300, { leading: false, trailing: true });\r\n\r\nconst _handleCalculateFactory = _.debounce(async (\r\n    state: FactoryOptions,\r\n    setSolverResults: React.Dispatch<React.SetStateAction<SolverResults | null>>,\r\n    setCalculating: React.Dispatch<React.SetStateAction<boolean>>,\r\n  ) => {\r\n    _setCalculating(true, setCalculating);\r\n    try {\r\n      const solver = new ProductionSolver(state);\r\n      const results = await solver.exec();\r\n      setSolverResults((prevState) => {\r\n        if (!prevState || prevState.timestamp < results.timestamp) {\r\n          console.log(`Computed in: ${results.computeTime}ms`);\r\n          return results;\r\n        }\r\n        return prevState;\r\n      });\r\n    } catch (e: unknown) {\r\n      setSolverResults({\r\n        productionGraph: null,\r\n        report: null,\r\n        timestamp: performance.now(),\r\n        computeTime: 0,\r\n        error: e as GraphError,\r\n      });\r\n    } finally {\r\n      _setCalculating(false, setCalculating);\r\n    }\r\n  }, 300, { leading: true, trailing: true });\r\n\r\n\r\n\r\n// CONTEXT\r\nexport const ProductionContext = createContext<ProductionContextType | null>(null);\r\nProductionContext.displayName = 'ProductionContext';\r\n\r\n\r\n// HELPER HOOK\r\nexport function useProductionContext() {\r\n  const ctx = useContext(ProductionContext);\r\n  if (!ctx) {\r\n    throw new Error('ProductionContext is null');\r\n  }\r\n  return ctx;\r\n}\r\n\r\n\r\n// PROVIDER\r\ntype PropTypes = { children: React.ReactNode };\r\nexport const ProductionProvider = ({ children }: PropTypes) => {\r\n  const [state, dispatch] = useReducer(reducer, getInitialState());\r\n  const [initialized, setInitialized] = useState(false);\r\n  const [loadingSharedFactory, setLoadingSharedFactory] = useState(false);\r\n  const [firstCalculationDone, setFirstCalculationDone] = useState(false);\r\n  const [autoCalculate, setAutoCalculate] = useLocalStorageValue<'false' | 'true'>({ key: 'auto-calculate', defaultValue: 'true' });\r\n  const [calculating, setCalculating] = useState(false);\r\n  const [solverResults, setSolverResults] = useState<SolverResults | null>(null);\r\n  const [engineerId] = useLocalStorageValue<string>({ key: 'engineer-id', defaultValue: ID });\r\n  const prevState = usePrevious(state);\r\n\r\n  const postSharedFactory = usePostSharedFactory();\r\n  const getSharedFactory = useGetSharedFactory();\r\n\r\n  const autoCalculateBool = autoCalculate === 'true' ? true : false;\r\n\r\n  const handleCalculateFactory = useCallback(() => {\r\n    _handleCalculateFactory(state, setSolverResults, setCalculating)\r\n  }, [state]);\r\n\r\n  const handleSetAutoCalculate = (checked: boolean) => {\r\n    setAutoCalculate(checked ? 'true' : 'false');\r\n    if (checked) {\r\n      handleCalculateFactory();\r\n    }\r\n  };\r\n\r\n  const handleGenerateShareLink = () => {\r\n    postSharedFactory.request({ factoryConfig: state });\r\n  };\r\n\r\n  const shareLink = useMemo(() => {\r\n    const key = postSharedFactory.data?.key;\r\n    if (key) {\r\n      return `${window.location.protocol}//${window.location.host}${window.location.pathname}?${SHARE_QUERY_KEY}=${key}`;\r\n    }\r\n    return '';\r\n  }, [postSharedFactory.data?.key]);\r\n\r\n  useEffect(() => {\r\n    if (initialized) {\r\n      if (!firstCalculationDone) {\r\n        handleCalculateFactory();\r\n        setFirstCalculationDone(true);\r\n      } else if (autoCalculateBool && prevState !== state) {\r\n        handleCalculateFactory();\r\n      }\r\n    }\r\n  }, [autoCalculateBool, firstCalculationDone, handleCalculateFactory, initialized, prevState, state]);\r\n\r\n  useEffect(() => {\r\n    if (!initialized && !loadingSharedFactory) {\r\n      const params = new URLSearchParams(window.location.search);\r\n      const shareKey = params.get(SHARE_QUERY_KEY);\r\n      const legacyParamEncoding = params.get('f');\r\n      if (shareKey) {\r\n        getSharedFactory.request({ factoryKey: shareKey });\r\n        setLoadingSharedFactory(true);\r\n        params.delete(SHARE_QUERY_KEY);\r\n        window.history.replaceState(null, '', `${window.location.pathname}`);\r\n      } else if (legacyParamEncoding) {\r\n        dispatch({ type: 'LEGACY_LOAD_FROM_QUERY_PARAM' });\r\n        setInitialized(true);\r\n      } else {\r\n        setInitialized(true);\r\n      }\r\n    }\r\n  }, [getSharedFactory, initialized, loadingSharedFactory]);\r\n  \r\n  useEffect(() => {\r\n    if (getSharedFactory.completedThisFrame && getSharedFactory.data?.factory_config) {\r\n      dispatch({ type: 'LOAD_FROM_SHARED_FACTORY', data: getSharedFactory.data.factory_config });\r\n      setLoadingSharedFactory(false);\r\n      setInitialized(true);\r\n    }\r\n  }, [getSharedFactory]);\r\n\r\n  const ctxValue = useMemo(() => {\r\n    return {\r\n      state,\r\n      dispatch,\r\n      calculating,\r\n      solverResults,\r\n      calculate: handleCalculateFactory,\r\n      autoCalculate: autoCalculateBool,\r\n      setAutoCalculate: handleSetAutoCalculate,\r\n      generateShareLink: handleGenerateShareLink,\r\n      shareLink,\r\n      shareLinkLoading: postSharedFactory.loading,\r\n      ficsitTip: TIP,\r\n      engineerId,\r\n    };\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [autoCalculateBool, calculating, handleCalculateFactory, solverResults, state, shareLink, postSharedFactory.loading]);\r\n\r\n  return (\r\n    <ProductionContext.Provider value={ctxValue}>\r\n      {children}\r\n    </ProductionContext.Provider>\r\n  );\r\n}\r\n","import { post } from '../..';\r\nimport { useApi } from \"../../useApi\";\r\nimport { FactoryOptions } from \"../../../contexts/production/reducer\";\r\n\r\ninterface PostSharedFactoryRequest {\r\n  factoryConfig: FactoryOptions,\r\n}\r\n\r\ninterface PostSharedFactoryResponse {\r\n  key: string,\r\n}\r\n\r\nexport function usePostSharedFactory() {\r\n  return useApi<PostSharedFactoryResponse, PostSharedFactoryRequest>(async (req) => {\r\n    const body = {\r\n      factoryConfig: {\r\n        gameVersion: req.factoryConfig.gameVersion,\r\n        productionItems: req.factoryConfig.productionItems.map((i) => ({\r\n          itemKey: i.itemKey,\r\n          mode: i.mode,\r\n          value: Number(i.value),\r\n        })),\r\n        inputItems: req.factoryConfig.inputItems.map((i) => ({\r\n          itemKey: i.itemKey,\r\n          value: Number(i.value),\r\n          weight: Number(i.weight),\r\n          unlimited: i.unlimited,\r\n        })),\r\n        inputResources: req.factoryConfig.inputResources.map((i) => ({\r\n          itemKey: i.itemKey,\r\n          value: Number(i.value),\r\n          weight: Number(i.weight),\r\n          unlimited: i.unlimited,\r\n        })),\r\n        allowHandGatheredItems: req.factoryConfig.allowHandGatheredItems,\r\n        weightingOptions: {\r\n          resources: Number(req.factoryConfig.weightingOptions.resources),\r\n          power: Number(req.factoryConfig.weightingOptions.power),\r\n          complexity: Number(req.factoryConfig.weightingOptions.complexity),\r\n          buildings: Number(req.factoryConfig.weightingOptions.buildings),\r\n        },\r\n        allowedRecipes: Object.keys(req.factoryConfig.allowedRecipes).filter((key) => req.factoryConfig.allowedRecipes[key]),\r\n      }\r\n    }\r\n    const res = await post('/share-factory', body);\r\n    const json = res.data;\r\n    return json.data;\r\n  });\r\n}\r\n","import { get } from '../..';\r\nimport { useApi } from \"../../useApi\";\r\n\r\ninterface GetSharedFactoryRequest {\r\n  factoryKey: string,\r\n}\r\n\r\ninterface GetSharedFactoryResponse {\r\n  id: number,\r\n  key: string,\r\n  factory_config: any,\r\n}\r\n\r\nexport function useGetSharedFactory() {\r\n  return useApi<GetSharedFactoryResponse, GetSharedFactoryRequest>(async (req) => {\r\n    const res = await get('/shared-factories/:factoryKey', req);\r\n    const json = res.data;\r\n    return json.data;\r\n  });\r\n}\r\n","import React, { createContext, useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useMantineTheme } from '@mantine/core';\r\n\r\nexport type DrawerContextType = {\r\n  rootNode: HTMLDivElement | null,\r\n};\r\n\r\n\r\n// CONTEXT\r\nexport const DrawerContext = createContext<DrawerContextType | null>(null);\r\nDrawerContext.displayName = 'DrawerContext';\r\n\r\n\r\n// HELPER HOOK\r\nexport function useDrawerContext() {\r\n  const ctx = useContext(DrawerContext);\r\n  if (!ctx) {\r\n    throw new Error('DrawerContext is null');\r\n  }\r\n  return ctx;\r\n}\r\n\r\n\r\n// PROVIDER\r\ntype Props = {\r\n  children: React.ReactNode,\r\n};\r\nexport const DrawerProvider = (props: Props) => {\r\n  const { children } = props;\r\n  const [rootNode, setRootNode] = useState<HTMLDivElement | null>(null);\r\n  const theme = useMantineTheme();\r\n\r\n  function setRef(ref: HTMLDivElement | null) {\r\n    setRootNode((prevState) => {\r\n      if (prevState !== ref) return ref;\r\n      return prevState;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <DrawerContext.Provider value={{ rootNode }}>\r\n      <DrawerRoot ref={setRef} topOffset={theme.other.headerHeight} />\r\n      {children}\r\n    </DrawerContext.Provider>\r\n  );\r\n}\r\n\r\nconst DrawerRoot = styled.div<{ topOffset: string }>`\r\n  position: fixed;\r\n  top: ${({ topOffset }) => topOffset};\r\n  left: 0px;\r\n  bottom: 0px;\r\n  right: 0px;\r\n  z-index: ${({ theme }) => theme.other.drawerZIndex};\r\n  margin: 0;\r\n  padding: 0;\r\n  pointer-events: none;\r\n`;\r\n","import React, { forwardRef, useEffect, useLayoutEffect, useRef } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\ninterface Props {\r\n  children: React.ReactNode,\r\n  rootNode?: HTMLElement | null,\r\n  createRoot?: boolean,\r\n  key?: string,\r\n  style?: Partial<CSSStyleDeclaration>,\r\n}\r\n\r\nconst Portal = forwardRef<HTMLElement, Props>((props, ref) => {\r\n  const { children, rootNode, createRoot, key, style } = props;\r\n  const target = useRef<HTMLElement | null>(document.createElement('div'));\r\n\r\n  if (!createRoot) {\r\n    target.current = rootNode || null;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (createRoot && target.current) {\r\n      if (style) {\r\n        Object.entries(style).forEach(([key, value]) => {\r\n          target.current!.style[key as any] = value as any;\r\n        });\r\n      }\r\n      document.body.append(target.current);\r\n    }\r\n\r\n    return () => {\r\n      if (createRoot && target.current) {\r\n        target.current.remove();\r\n      }\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    if (ref) {\r\n      if (typeof ref === 'function') {\r\n        ref(target.current);\r\n      } else {\r\n        ref.current = target.current;\r\n      }\r\n    }\r\n  }, [ref, target]);\r\n\r\n  if (!target.current) return null;\r\n  return createPortal(children, target.current, key);\r\n});\r\n\r\nexport default Portal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { UnstyledButton, Paper, Text, Container } from '@mantine/core';\r\nimport { useLocalStorageValue } from '@mantine/hooks';\r\nimport { ChevronsLeft, ChevronsRight } from 'react-feather';\r\nimport { useDrawerContext } from '../../contexts/drawer';\r\nimport Portal from '../../components/Portal';\r\n\r\ninterface Props {\r\n  open?: boolean,\r\n  onToggle?: (newState: boolean) => void,\r\n  children: React.ReactNode,\r\n}\r\n\r\nconst Drawer = (props: Props) => {\r\n  const { open, onToggle, children } = props;\r\n  const [fullyClosed, setFullyClosed] = useState(!open);\r\n  const [tooltipDismissed, setTooltipDismissed] = useLocalStorageValue<'false' | 'true'>({ key: 'tooltip-dismissed', defaultValue: 'false' });\r\n  const ctx = useDrawerContext();\r\n\r\n  const showTooltip = tooltipDismissed === 'false';\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      setTooltipDismissed('true');\r\n    }\r\n  }, [open, setTooltipDismissed]);\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      setFullyClosed(false);\r\n    }\r\n  }, [open]);\r\n\r\n  function handleTransitionEnd() {\r\n    if (!open) {\r\n      setFullyClosed(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Portal rootNode={ctx.rootNode}>\r\n      <DrawerDimmer open={!!open || showTooltip} onClick={() => { !!open && onToggle?.(!open); }} />\r\n      <DrawerContainer open={!!open} onTransitionEnd={handleTransitionEnd}>\r\n        <DrawerToggle onClick={() => { onToggle?.(!open); }}>\r\n          <ToggleLabel>\r\n            <ToggleLabelText>{open ? 'Close' : 'Open'} Control Panel</ToggleLabelText>\r\n            <ToggleLabelIcon>\r\n              {\r\n                open\r\n                  ? <ChevronsLeft />\r\n                  : <ChevronsRight />\r\n              }\r\n            </ToggleLabelIcon>\r\n          </ToggleLabel>\r\n          {\r\n            showTooltip && (\r\n              <Tooltip>\r\n                <TooltipText>\r\n                  Click here to get started!\r\n                </TooltipText>\r\n                <TooltipConfirmContainer>\r\n                  <TooltipConfirm onClick={(e) => { setTooltipDismissed('true'); e.stopPropagation(); }}>\r\n                    Dismiss\r\n                  </TooltipConfirm>\r\n                </TooltipConfirmContainer>\r\n              </Tooltip>\r\n            )\r\n          }\r\n        </DrawerToggle>\r\n        <DrawerContent className='custom-scrollbar' aria-hidden={!open} fullyClosed={fullyClosed} fluid>\r\n          {children}\r\n        </DrawerContent>\r\n      </DrawerContainer>\r\n    </Portal>\r\n  )\r\n};\r\n\r\nexport default Drawer;\r\n\r\nconst DrawerDimmer = styled.div<{ open: boolean }>`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  bottom: 0px;\r\n  right: 0px;\r\n  margin: 0;\r\n  padding: 0;\r\n  background: #000;\r\n  opacity: ${({ open }) => open ? 0.7 : 0.0 };\r\n  transition: opacity 550ms;\r\n  pointer-events: ${({ open }) => open ? 'auto' : 'none' };\r\n`;\r\n\r\nconst DrawerContainer = styled.div<{ open: boolean }>`\r\n  position: relative;\r\n  top: 0px;\r\n  left: ${({ open, theme }) => (open ? '0px' : `-${theme.other.drawerWidth}`)};\r\n  width: ${({ theme }) => theme.other.drawerWidth};\r\n  height: 100%;\r\n  background: ${({ theme }) => theme.colors.background[0]};\r\n  transition: left 550ms;\r\n  transition-timing-function: cubic-bezier(.68, -0.21, .38, 1.26);\r\n  pointer-events: auto;\r\n`;\r\n\r\nconst DrawerToggle = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  top: 0px;\r\n  bottom: 0px;\r\n  right: -25px;\r\n  width: 25px;\r\n  background: ${({ theme }) => theme.colors.primary[6]};\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.primary[7]};\r\n  }\r\n`;\r\n\r\nconst ToggleLabel = styled(UnstyledButton)`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 0 0 auto;\r\n  right: -25px;\r\n  width: 30px;\r\n  height: 160px;\r\n  border-radius: 2px;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  background: ${({ theme }) => theme.colors.primary[6]};\r\n  color: ${({ theme }) => theme.white};\r\n  overflow: visible;\r\n  white-space: nowrap;\r\n\r\n  ${DrawerToggle}:hover & {\r\n    background: ${({ theme }) => theme.colors.primary[7]};\r\n  }\r\n\r\n  ::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: -24px;\r\n    right: 2px;\r\n    width: 50px;\r\n    height: 26px;\r\n    background: ${({ theme }) => theme.colors.primary[6]};\r\n    transform: rotate(50deg);\r\n    z-index: 1;\r\n\r\n    ${DrawerToggle}:hover & {\r\n      background: ${({ theme }) => theme.colors.primary[7]};\r\n    }\r\n  }\r\n\r\n  ::after {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: -24px;\r\n    right: 2px;\r\n    width: 50px;\r\n    height: 26px;\r\n    background: ${({ theme }) => theme.colors.primary[6]};\r\n    transform: rotate(-50deg);\r\n    z-index: 1;\r\n\r\n    ${DrawerToggle}:hover & {\r\n      background: ${({ theme }) => theme.colors.primary[7]};\r\n    }\r\n  }\r\n`;\r\n\r\nconst ToggleLabelText = styled.span`\r\n  position: absolute;\r\n  left: -16px;\r\n  z-index: 2;\r\n  writing-mode: vertical-rl;\r\n  text-orientation: mixed;\r\n`;\r\n\r\nconst ToggleLabelIcon = styled.span`\r\n  position: absolute;\r\n  left: 5px;\r\n  z-index: 2;\r\n`;\r\n\r\nconst Tooltip = styled(Paper)`\r\n  @keyframes lookAtMe {\r\n    from {\r\n      left: 84px;\r\n    }\r\n\r\n    to {\r\n      left: 80px;\r\n    }\r\n  }\r\n\r\n  animation: 300ms infinite alternate lookAtMe;\r\n\r\n  position: absolute;\r\n  left: 80px;\r\n  padding: 20px;\r\n  z-index: 3;\r\n  background: ${({ theme }) => theme.colors.info[6]};\r\n  border-radius: 2px;\r\n  pointer-events: none;\r\n\r\n  ::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: calc(50% - 10px);\r\n    left: -10px;\r\n    width: 20px;\r\n    height: 20px;\r\n    background: ${({ theme }) => theme.colors.info[6]};\r\n\r\n    transform: rotate(45deg);\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nconst TooltipText = styled(Text)`\r\n  width: 180px;\r\n  height: 40px;\r\n`;\r\n\r\nconst TooltipConfirmContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst TooltipConfirm = styled(UnstyledButton)`\r\n  pointer-events: auto;\r\n  color: ${({ theme }) => theme.white};\r\n  text-decoration: underline;\r\n`;\r\n\r\nconst DrawerContent = styled(Container)<{ fullyClosed: boolean }>`\r\n  visibility: ${({ fullyClosed }) => fullyClosed ? 'hidden' : 'visible'};\r\n  position: absolute;\r\n  top: 0px;\r\n  bottom: 0px;\r\n  left: 0px;\r\n  right: 0px;\r\n  padding: 10px;\r\n  padding-bottom: 30px;\r\n  overflow: auto;\r\n  overscroll-behavior: contain;\r\n`;\r\n","// import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Paper } from '@mantine/core';\r\n\r\nconst Card = styled(Paper)`\r\n  margin-bottom: 20px;\r\n  border-left: 5px solid ${({ theme }) => theme.colors.primary[6]};\r\n`;\r\n\r\nexport default Card;\r\n","// import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Text } from '@mantine/core';\r\nimport Card from '../Card';\r\n\r\nexport const Section = styled(Card)`\r\n  background: ${({ theme }) => theme.colors.background[1]};\r\n  box-shadow: 0px 0px 24px -6px #0F1011;\r\n  border: 3px solid ${({ theme }) => theme.colors.background[3]};\r\n  padding: 20px;\r\n`;\r\n\r\nexport const SectionDescription = styled(Text)`\r\n  margin-bottom: 20px;\r\n`;\r\n","import React from 'react';\r\nimport { Button, ButtonProps } from '@mantine/core';\r\nimport { Trash2 } from 'react-feather';\r\n\r\nconst TrashButton = (props: ButtonProps<React.ElementType<any>>) => {\r\n  return (\r\n    <Button { ...props} color='danger' style={{ ...(props?.style || {}), width: '36px', height: '36px', padding: '0px', flex: '0 0 auto' }}>\r\n      <Trash2 size={20} />\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default TrashButton;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button, Select, TextInput, Group, Divider, Title } from '@mantine/core';\r\nimport { items, recipes, resources } from '../../../../data';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\nimport { MAX_PRIORITY } from '../../../../contexts/production/reducer';\r\nimport { POINTS_ITEM_KEY } from '../../../../utilities/production-solver';\r\nimport { Section, SectionDescription } from '../../../../components/Section';\r\nimport TrashButton from '../../../../components/TrashButton';\r\n\r\nconst itemOptions = Object.keys(items)\r\n  .filter((key) => items[key].producedFromRecipes.length !== 0 && !resources[key])\r\n  .map((key) => ({\r\n    value: key,\r\n    label: items[key].name,\r\n  }))\r\n  .sort((a, b) => {\r\n    return a.label > b.label ? 1 : -1;\r\n  });\r\n\r\nitemOptions.unshift({\r\n  value: POINTS_ITEM_KEY,\r\n  label: 'AWESOME Sink Points (x1000)'\r\n});\r\n\r\nconst baseModeOptions = [\r\n  { value: 'per-minute', label: 'Items Per Min' },\r\n  { value: 'maximize', label: 'Maximize Output' },\r\n];\r\n\r\nconst priorityOptions = Array(MAX_PRIORITY)\r\n  .fill('')\r\n  .map((_, i) => ({ value: `${i + 1}`, label: `Priority: ${i + 1}` }))\r\n  .reverse();\r\n\r\nconst ProductionTab = () => {\r\n  const ctx = useProductionContext();\r\n\r\n  function renderItemInputs() {\r\n    return ctx.state.productionItems.map((data) => {\r\n      const modeOptions = [...baseModeOptions];\r\n      if (data.itemKey) {\r\n        const itemInfo = items[data.itemKey];\r\n        const recipeList = itemInfo?.producedFromRecipes || [];\r\n        recipeList.forEach((recipeKey) => {\r\n          const recipeInfo = recipes[recipeKey];\r\n          const target = recipeInfo?.products.find((p) => p.itemClass === data.itemKey);\r\n          if (target) {\r\n            const name = itemInfo.name === recipeInfo.name ? 'Base Recipe' : recipeInfo.name.replace('Alternate: ', '');\r\n            modeOptions.push({ value: recipeKey, label: `${name} [${target.perMinute}/min]` });\r\n          }\r\n        });\r\n      }\r\n      const selectedItem = itemOptions.find((io) => io.value === data.itemKey);\r\n      return (\r\n        <ItemContainer key={data.key}>\r\n          <Row>\r\n            <Select\r\n              placeholder='Select an item'\r\n              label='Item'\r\n              clearable\r\n              searchable\r\n              filter={(value, item) => {\r\n                if (selectedItem && value === selectedItem.label) {\r\n                  return true;\r\n                }\r\n                return !!item.label?.toLowerCase().includes(value.toLowerCase());\r\n              }}\r\n              data={itemOptions}\r\n              value={data.itemKey ? data.itemKey : ''}\r\n              onChange={(value) => {\r\n                ctx.dispatch({\r\n                  type: 'SET_PRODUCTION_ITEM',\r\n                  data: { key: data.key, itemKey: (value as any) },\r\n                });\r\n              }}\r\n              style={{ flex: '1 1 auto' }}\r\n            />\r\n            <TrashButton onClick={() => { ctx.dispatch({ type: 'DELETE_PRODUCTION_ITEM', key: data.key }); }} style={{ position: 'relative', top: '13px' }} />\r\n          </Row>\r\n          <Row>\r\n            {\r\n              data.mode === 'maximize'\r\n                ? (\r\n                  <Select\r\n                    label='Priority'\r\n                    data={priorityOptions}\r\n                    value={data.value}\r\n                    onChange={(value) => {\r\n                      ctx.dispatch({\r\n                        type: 'SET_PRODUCTION_ITEM_AMOUNT',\r\n                        data: { key: data.key, amount: (value as any) },\r\n                      });\r\n                    }}\r\n                    style={{ width: '160px' }}\r\n                  />\r\n                )\r\n                : (\r\n                  <TextInput\r\n                    label='Amount'\r\n                    className='no-spinner'\r\n                    type='number'\r\n                    min='0'\r\n                    step='1'\r\n                    value={data.value}\r\n                    onChange={(e) => {\r\n                      ctx.dispatch({\r\n                        type: 'SET_PRODUCTION_ITEM_AMOUNT',\r\n                        data: { key: data.key, amount: e.currentTarget.value },\r\n                      });\r\n                    }}\r\n                    style={{ width: '160px' }}\r\n                  />\r\n                )\r\n            }\r\n            <Select\r\n              label='Mode'\r\n              data={modeOptions}\r\n              value={data.mode}\r\n              onChange={(value) => {\r\n                ctx.dispatch({\r\n                  type: 'SET_PRODUCTION_ITEM_MODE',\r\n                  data: { key: data.key, mode: (value as any) },\r\n                });\r\n              }}\r\n              style={{ width: '280px' }}\r\n            />\r\n          </Row>\r\n          <Divider style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n        </ItemContainer>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Title order={3}>Production Goals</Title>\r\n        <SectionDescription>\r\n          Select the items you want to produce. When maximizing multiple outputs, higher priority items will be maximized first. When selecting a recipe as a target, the factory will be forced to use that recipe for the final output.\r\n        </SectionDescription>\r\n        {renderItemInputs()}\r\n        <Button onClick={() => { ctx.dispatch({ type: 'ADD_PRODUCTION_ITEM' }) }}>\r\n          + Add Product\r\n        </Button>\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductionTab;\r\n\r\nconst Row = styled(Group)`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Info } from 'react-feather';\r\nimport { Tooltip } from '@mantine/core';\r\n\r\ninterface Props {\r\n  label: string,\r\n  tooltip: string,\r\n}\r\n\r\nconst LabelWithTooltip = (props: Props) => {\r\n  const { label, tooltip } = props;\r\n  \r\n  return (\r\n    <Label>\r\n      {label}{' '}\r\n      <Tooltip\r\n        label={tooltip}\r\n        withArrow\r\n        color='dark'\r\n        width={230}\r\n        wrapLines\r\n        arrowSize={8}\r\n      >\r\n        <Info size={12} />\r\n      </Tooltip>\r\n    </Label>\r\n  );\r\n};\r\n\r\nexport default LabelWithTooltip;\r\n\r\nconst Label = styled.div`\r\n  position: relative;\r\n  cursor: pointer;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button, Select, TextInput, Checkbox, Group, Title, Divider, Text } from '@mantine/core';\r\nimport { items, resources } from '../../../../data';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\nimport TrashButton from '../../../../components/TrashButton';\r\nimport { Section, SectionDescription } from '../../../../components/Section';\r\nimport LabelWithTooltip from '../../../../components/LabelWithTooltip';\r\n\r\nconst itemOptions = Object.keys(items)\r\n  .filter((key) => items[key].producedFromRecipes.length !== 0 && items[key].usedInRecipes.length !== 0 && !resources[key])\r\n  .map((key) => ({\r\n    value: key,\r\n    label: items[key].name,\r\n  }))\r\n  .sort((a, b) => {\r\n    return a.label > b.label ? 1 : -1;\r\n  });\r\n\r\n\r\nconst InputsTab = () => {\r\n  const ctx = useProductionContext();\r\n\r\n  function renderItemInputs() {\r\n    return ctx.state.inputItems.map((data) => {\r\n      const selectedItem = itemOptions.find((io) => io.value === data.itemKey);\r\n      return (\r\n        <ItemContainer key={data.key}>\r\n          <Row>\r\n            <Select\r\n              placeholder=\"Select an item\"\r\n              label='Item'\r\n              clearable\r\n              searchable\r\n              filter={(value, item) => {\r\n                if (selectedItem && value === selectedItem.label) {\r\n                  return true;\r\n                }\r\n                return !!item.label?.toLowerCase().includes(value.toLowerCase());\r\n              }}\r\n              data={itemOptions}\r\n              value={data.itemKey ? data.itemKey : ''}\r\n              onChange={(value) => {\r\n                ctx.dispatch({\r\n                  type: 'UPDATE_INPUT_ITEM',\r\n                  data: { ...data, itemKey: (value as string) },\r\n                });\r\n              }}\r\n              style={{ flex: '1 1 auto' }}\r\n            />\r\n            <TrashButton onClick={() => { ctx.dispatch({ type: 'DELETE_INPUT_ITEM', key: data.key }); }} style={{ position: 'relative', top: '13px' }} />\r\n          </Row>\r\n          <Row>\r\n            <TextInput\r\n              label='Amount'\r\n              className='no-spinner'\r\n              type='number'\r\n              min='0'\r\n              step='1'\r\n              disabled={data.unlimited}\r\n              value={data.value}\r\n              onChange={(e) => {\r\n                ctx.dispatch({\r\n                  type: 'UPDATE_INPUT_ITEM',\r\n                  data: { ...data, value: e.currentTarget.value },\r\n                });\r\n              }}\r\n            />\r\n            <Checkbox\r\n              className='label'\r\n              label='Unlimited'\r\n              checked={data.unlimited}\r\n              onChange={() => {\r\n                ctx.dispatch({\r\n                  type: 'UPDATE_INPUT_ITEM',\r\n                  data: { ...data, unlimited: !data.unlimited },\r\n                });\r\n              }}\r\n              style={{ position: 'relative', top: '13px' }}\r\n            />\r\n          </Row>\r\n          <Divider style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n        </ItemContainer>\r\n      )\r\n    });\r\n  }\r\n\r\n  function renderWeightInputs() {\r\n    const weightingOptions = ctx.state.weightingOptions;\r\n    return (\r\n      <>\r\n        <Group grow>\r\n          <TextInput\r\n            label={<LabelWithTooltip label='Resource Efficiency' tooltip='This weighting prioritizes using as few resources as possible.' />}\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={weightingOptions.resources}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_WEIGHTING_OPTIONS',\r\n                data: { ...weightingOptions, resources: e.currentTarget.value },\r\n              });\r\n            }}\r\n          />\r\n          <TextInput\r\n            label={<LabelWithTooltip label='Power Efficiency' tooltip='This weighting prioritizes using as little power as possible.' />}\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={weightingOptions.power}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_WEIGHTING_OPTIONS',\r\n                data: { ...weightingOptions, power: e.currentTarget.value },\r\n              });\r\n            }}\r\n          />\r\n        </Group>\r\n        <Group grow style={{ marginTop: '10px' }}>\r\n          <TextInput\r\n            label={<LabelWithTooltip label='Complexity' tooltip='This weighting prioritizes reducing the number of item types used in the factory. Very slow to optimize for larger factories (WIP).' />}\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={weightingOptions.complexity}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_WEIGHTING_OPTIONS',\r\n                data: { ...weightingOptions, complexity: e.currentTarget.value },\r\n              });\r\n            }}\r\n          />\r\n          <TextInput\r\n            label={<LabelWithTooltip label='Buildings' tooltip='This weighting prioritizes using as few buildings as possible, discounting overclocking. May not be perfectly optimal, especially for smaller factories (WIP).' />}\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={weightingOptions.buildings}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_WEIGHTING_OPTIONS',\r\n                data: { ...weightingOptions, buildings: e.currentTarget.value },\r\n              });\r\n            }}\r\n          />\r\n        </Group>\r\n      </>\r\n    )\r\n  }\r\n\r\n  function renderResourceInputs() {\r\n    return ctx.state.inputResources.map((data) => (\r\n      <ItemContainer key={data.key}>\r\n        <Row>\r\n          <Text style={{ fontWeight: 'bold' }}>{items[data.itemKey].name}</Text>\r\n        </Row>\r\n        <Row>\r\n          <TextInput\r\n            label='Amount'\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={data.value}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_RESOURCE',\r\n                data: { ...data, value: e.currentTarget.value },\r\n              });\r\n            }}\r\n            disabled={data.unlimited}\r\n            style={{ flex: '1 1 auto' }}\r\n          />\r\n          <Checkbox\r\n            label='Unlimited'\r\n            checked={data.unlimited}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_RESOURCE',\r\n                data: { ...data, unlimited: e.currentTarget.checked },\r\n              });\r\n            }}\r\n            style={{ position: 'relative', top: '13px', flex: '1 1 auto' }}\r\n          />\r\n          <TextInput\r\n            label='Weight'\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={data.weight}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_RESOURCE',\r\n                data: { ...data, weight: e.currentTarget.value },\r\n              });\r\n            }}\r\n            style={{ flex: '0 0 100px' }}\r\n          />\r\n        </Row>\r\n        <Divider style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n      </ItemContainer>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Title order={3}>Input Items</Title>\r\n        <SectionDescription>\r\n          Select the items that you already have available and don't need to produce in this factory.\r\n        </SectionDescription>\r\n        {renderItemInputs()}\r\n        <Button onClick={() => { ctx.dispatch({ type: 'ADD_INPUT_ITEM' }) }}>\r\n          + Add Input\r\n        </Button>\r\n      </Section>\r\n      <Section>\r\n        <Title order={3}>Weighting Options</Title>\r\n        <SectionDescription>\r\n          Adjust the weights affecting the importance of various properties of the factory. A value of 0 indicates that that property is not considered during factory layout.\r\n        </SectionDescription>\r\n        {renderWeightInputs()}\r\n        <Button color='danger' onClick={() => { ctx.dispatch({ type: 'SET_ALL_WEIGHTS_DEFAULT' }) }} style={{ marginTop: '15px' }}>\r\n          Reset All Weights\r\n        </Button>\r\n      </Section>\r\n      <Section>\r\n        <Title order={3}>Raw Resources</Title>\r\n        <SectionDescription>\r\n          Select the raw resources that are available to your factory. The default values are set to the map limits. The weight value is a number representing how valuable that resource is when comparing recipes. The defaults are calculated automatically according to node rarity.\r\n        </SectionDescription>\r\n        <Group style={{ marginBottom: '15px' }}>\r\n          <Button color='danger' onClick={() => { ctx.dispatch({ type: 'SET_RESOURCES_TO_MAP_LIMITS' }) }}>\r\n            Set All To Maximum\r\n          </Button>\r\n          <Button color='danger' onClick={() => { ctx.dispatch({ type: 'SET_RESOURCES_TO_0' }) }}>\r\n            Set All To 0\r\n          </Button>\r\n        </Group>\r\n        <Checkbox\r\n          label='Allow hand-gathered resources (mycelia, flower petals, etc)'\r\n          checked={ctx.state.allowHandGatheredItems}\r\n          onChange={(e) => { ctx.dispatch({ type: 'SET_ALLOW_HAND_GATHERED_ITEMS', active: e.currentTarget.checked }) }}\r\n          style={{ marginBottom: '25px' }}\r\n          />\r\n        {renderResourceInputs()}\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsTab;\r\n\r\nconst Row = styled(Group)`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n","import React, { useState, useMemo, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { List, Checkbox, TextInput, Button, Group, Title, Grid, Col } from '@mantine/core';\r\nimport { Search } from 'react-feather';\r\nimport { recipes } from '../../../../data';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\nimport { Section, SectionDescription } from '../../../../components/Section';\r\n\r\nconst cleanAltNameRegex = /^Alternate: /;\r\nconst baseRecipes: { key: string, label: string }[] = [];\r\nconst altRecipes: { key: string, label: string }[] = [];\r\nObject.entries(recipes)\r\n  .forEach(([key, data]) => {\r\n    if (data.isAlternate) {\r\n      altRecipes.push({\r\n        key,\r\n        label: data.name.replace(cleanAltNameRegex, ''),\r\n      });\r\n    } else {\r\n      baseRecipes.push({\r\n        key,\r\n        label: data.name,\r\n      });\r\n    }\r\n  });\r\nbaseRecipes.sort((a, b) => (a.label > b.label ? 1 : -1));\r\naltRecipes.sort((a, b) => (a.label > b.label ? 1 : -1));\r\n\r\nconst RecipesTab = () => {\r\n  const ctx = useProductionContext();\r\n  const [searchValue, setSearchValue] = useState('');\r\n\r\n  const renderRecipeList = useCallback((recipeList: { key: string, label: string }[]) => {\r\n    return recipeList.map(({ key, label }) => ({\r\n      key,\r\n      label,\r\n      component: (\r\n        <List.Item key={key}>\r\n          <Checkbox\r\n            label={label}\r\n            checked={ctx.state.allowedRecipes[key]}\r\n            onChange={() => {\r\n              ctx.dispatch({\r\n                type: 'SET_RECIPE_ACTIVE',\r\n                key,\r\n                active: !ctx.state.allowedRecipes[key],\r\n              });\r\n            }}\r\n          />\r\n        </List.Item>\r\n      )\r\n    }));\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ctx.state, ctx.dispatch]);\r\n\r\n  const renderedBaseRecipes = useMemo(() => renderRecipeList(baseRecipes), [renderRecipeList]);\r\n  const renderedAltRecipes = useMemo(() => renderRecipeList(altRecipes), [renderRecipeList]);\r\n\r\n  function renderRecipeOptions(alternates: boolean) {\r\n    const renderedRecipes = alternates ? renderedAltRecipes : renderedBaseRecipes;\r\n    const filteredRecipes = renderedRecipes.filter(({ label }) => label.toLowerCase().includes(searchValue.toLowerCase()));\r\n    const filteredRecipeKeys = filteredRecipes.map(({ key }) => key);\r\n    return (\r\n      <>\r\n        <Group style={{ marginTop: '5px', marginBottom: '10px' }}>\r\n          <Button onClick={() => { ctx.dispatch({ type: 'MASS_SET_RECIPES_ACTIVE', recipes: filteredRecipeKeys, active: true }) }}>\r\n            Select All\r\n          </Button>\r\n          <Button onClick={() => { ctx.dispatch({ type: 'MASS_SET_RECIPES_ACTIVE', recipes: filteredRecipeKeys, active: false }) }}>\r\n            Select None\r\n          </Button>\r\n        </Group>\r\n        <List listStyleType='none' spacing={6}>\r\n          {filteredRecipes.map(({ component }) => component)}\r\n        </List>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Title order={3}>Recipes</Title>\r\n        <SectionDescription>\r\n          Select the recipes that you want to be considered in this factory.\r\n        </SectionDescription>\r\n        <TextInput\r\n          placeholder='Search...'\r\n          aria-label='search recipes'\r\n          icon={<Search size={16} />}\r\n          value={searchValue}\r\n          onChange={(e) => { setSearchValue(e.currentTarget.value); }}\r\n          style={{ marginBottom: '10px' }}\r\n        />\r\n        <Grid grow style={{ position: 'relative' }}>\r\n          <Col span={6}>\r\n            <Title order={3}>Alternate Recipes</Title>\r\n            {renderRecipeOptions(true)}\r\n          </Col>\r\n          <Col span={6}>\r\n            <Title order={3}>Base Recipes</Title>\r\n            {renderRecipeOptions(false)}\r\n          </Col>\r\n          <VDivider />\r\n        </Grid>\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipesTab;\r\n\r\nconst VDivider = styled.div`\r\n  position: absolute;\r\n  top: 20px;\r\n  bottom: 20px;\r\n  left: 255px;\r\n  width: 1px;\r\n  background: ${({ theme }) => theme.colors.background[3]};\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container, Tabs, Paper, Title, Divider, Group, Button, Switch, Space, TextInput, Popover, Text } from '@mantine/core';\r\nimport { TrendingUp, Shuffle, Box } from 'react-feather';\r\nimport { useProductionContext } from '../../../contexts/production';\r\nimport ProductionTab from './ProductionTab';\r\nimport InputsTab from './InputsTab';\r\nimport RecipesTab from './RecipesTab';\r\nimport { usePrevious } from '../../../hooks/usePrevious';\r\n\r\nconst PlannerOptions = () => {\r\n  const ctx = useProductionContext();\r\n  const [popoverOpened, setPopoverOpened] = useState(false);\r\n\r\n  const prevShareLink = usePrevious(ctx.shareLink);\r\n  useEffect(() => {\r\n    if (ctx.shareLink && ctx.shareLink !== prevShareLink) {\r\n      navigator.clipboard.writeText(ctx.shareLink);\r\n      setPopoverOpened(true);\r\n    }\r\n  }, [ctx.shareLink, prevShareLink]);\r\n\r\n  const handleLinkInputClicked = () => {\r\n    if (ctx.shareLink) {\r\n      navigator.clipboard.writeText(ctx.shareLink);\r\n      setPopoverOpened(true);\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <Paper style={{ marginBottom: '20px', paddingTop: '10px' }}>\r\n        <Title order={2}>Control Panel</Title>\r\n        <Divider style={{ marginTop: '5px', marginBottom: '15px' }} />\r\n        <Group style={{ marginBottom: '15px' }}>\r\n          <Button\r\n            onClick={() => { ctx.calculate(); }}\r\n            disabled={ctx.autoCalculate}\r\n            style={{ marginRight: '15px', width: '125px' }}\r\n          >\r\n            Calculate\r\n          </Button>\r\n          <Switch\r\n            size='md'\r\n            label='Auto-calculate (disable if things get laggy)'\r\n            checked={ctx.autoCalculate}\r\n            onChange={(e) => { ctx.setAutoCalculate(e.currentTarget.checked); }}\r\n          />\r\n        </Group>\r\n        <Group style={{ marginBottom: '15px' }}>\r\n          <Button\r\n            color='positive'\r\n            onClick={() => { ctx.generateShareLink(); }}\r\n            loading={ctx.shareLinkLoading}\r\n            style={{ width: '125px' }}\r\n          >\r\n            Save & Share\r\n          </Button>\r\n          <Popover\r\n            opened={popoverOpened}\r\n            onClose={() => setPopoverOpened(false)}\r\n            position='right'\r\n            withArrow\r\n            styles={{\r\n              root: {\r\n                flex: '1 1 auto !important',\r\n              },\r\n              inner: {\r\n                padding: '10px 16px',\r\n              },\r\n            }}\r\n            target={\r\n              <TextInput\r\n                value={ctx.shareLink}\r\n                placeholder='Save factory to generate a link'\r\n                readOnly={true}\r\n                onClick={() => { handleLinkInputClicked(); }}\r\n                styles={{\r\n                  root: {\r\n                    flex: '1 1 auto !important',\r\n                  },\r\n                }}\r\n              />\r\n            }\r\n          >\r\n            <Text>Link copied!</Text>\r\n          </Popover>\r\n        </Group>\r\n        <Space />\r\n        <Group style={{ marginBottom: '15px' }} position='right'>\r\n          <Button\r\n            color='danger'\r\n            onClick={() => { ctx.dispatch({ type: 'RESET_FACTORY' }) }}\r\n          >\r\n            Reset ALL Factory Options\r\n          </Button>\r\n        </Group>\r\n      </Paper>\r\n      <Tabs grow variant='outline'>\r\n        <Tabs.Tab label='Production' icon={<TrendingUp size={18} />}>\r\n          <TabContainer fluid>\r\n            <ProductionTab />\r\n          </TabContainer>\r\n        </Tabs.Tab>\r\n        <Tabs.Tab label='Inputs' icon={<Shuffle size={18} />}>\r\n          <TabContainer fluid>\r\n            <InputsTab />\r\n          </TabContainer>\r\n        </Tabs.Tab>\r\n        <Tabs.Tab label='Recipes' icon={<Box size={18} />}>\r\n          <TabContainer fluid>\r\n            <RecipesTab />\r\n          </TabContainer>\r\n        </Tabs.Tab>\r\n      </Tabs>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlannerOptions;\r\n\r\nconst TabContainer = styled(Container)`\r\n  padding: 15px 15px;\r\n  background: ${({ theme }) => theme.colors.background[1]}\r\n`;\r\n","import { MantineThemeOverride } from '@mantine/core';\r\n// import { gradientFromColor } from './utilities/color';\r\n\r\nconst defaultFont = \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\";\r\n\r\nconst baseSat = '77%';\r\nconst baseLight = '63%';\r\nconst selectSat = '58%';\r\nconst selectLight = '58%';\r\n\r\n\r\nexport const graphColors = {\r\n  // nodes\r\n  resource: { base: `hsl(31, ${baseSat}, ${baseLight})`, selected: `hsl(31, ${selectSat}, ${selectLight})` },\r\n  input: { base: `hsl(0, ${baseSat}, ${baseLight})`, selected: `hsl(0, ${selectSat}, ${selectLight})` },\r\n  handGathered: { base: `hsl(261, ${baseSat}, ${baseLight})`, selected: `hsl(261, ${selectSat}, ${selectLight})` },\r\n  sideProduct: { base: `hsl(311, ${baseSat}, ${baseLight})`, selected: `hsl(311, ${selectSat}, ${selectLight})` },\r\n  finalProduct: { base: `hsl(128, ${baseSat}, ${baseLight})`, selected: `hsl(128, ${selectSat}, ${selectLight})` },\r\n  recipe: { base: `hsl(197, ${baseSat}, ${baseLight})`, selected: `hsl(197, ${selectSat}, ${selectLight})` },\r\n  nuclear: { base: `hsl(50, ${baseSat}, ${baseLight})`, selected: `hsl(50, ${selectSat}, ${selectLight})` },\r\n\r\n  // edges\r\n  edge: { line: '#999999', label: '#eeeeee' },\r\n  incoming: { line: `hsl(31, ${baseSat}, ${baseLight})`, label: `hsl(31, ${baseSat}, ${baseLight})` },\r\n  outgoing: { line: `hsl(128, ${baseSat}, ${baseLight})`, label: `hsl(128, ${baseSat}, ${baseLight})` },\r\n}\r\n\r\nexport const theme: MantineThemeOverride = {\r\n  primaryColor: 'primary',\r\n  colors: {\r\n    'primary': [\"#fcebde\", \"#f9d8be\", \"#f7c59f\", \"#f4b17f\", \"#f19e60\", \"#ef8b40\", \"#ec7821\", \"#c4631c\", \"#94501e\", \"#673c1c\"],\r\n    'positive': [\"#e9f3ea\", \"#d5e8d6\", \"#c1ddc2\", \"#acd2ae\", \"#98c69a\", \"#83bb86\", \"#6fb072\", \"#58965c\", \"#49744b\", \"#39543a\"],\r\n    'danger': [\"#fdb5b5\", \"#fda3a3\", \"#fc9191\", \"#fc7e7e\", \"#fb6c6c\", \"#fa5959\", \"#fa4747\", \"#f12929\", \"#dc1818\", \"#b21b1b\"],\r\n    'background': [\"#26282b\", \"#373b40\", \"#3f434a\", \"#50565e\", \"#6c7582\", \"#ffffff\", \"#ffffff\", \"#ffffff\", \"#b3b6ba\", \"#ffffff\"],\r\n    'info': Array(10).fill('#3065c7') as any,\r\n  },\r\n  white: '#eee',\r\n  fontFamily: defaultFont,\r\n  radius: { xs: 0, sm: 2, md: 4, lg: 8, xl: 16 },\r\n  headings: {\r\n    fontFamily: defaultFont,\r\n    fontWeight: 700,\r\n    sizes: {\r\n      h1: { fontSize: 36, lineHeight: 1.3 },\r\n      h2: { fontSize: 30, lineHeight: 1.35 },\r\n      h3: { fontSize: 22, lineHeight: 1.4 },\r\n      h4: { fontSize: 18, lineHeight: 1.45 },\r\n      h5: { fontSize: 16, lineHeight: 1.5 },\r\n      h6: { fontSize: 14, lineHeight: 1.5 },\r\n    }\r\n  },\r\n  other: {\r\n    headerHeight: '64px',\r\n    pageLeftMargin: '55px',\r\n    drawerWidth: '620px',\r\n    drawerZIndex: '10',\r\n    tooltipZIndex: '9999',\r\n    scrollbarTrackColor: '#212226',\r\n    scrollbarThumbColor: '#6c6c73',\r\n  },\r\n};\r\n\r\n\r\nexport const styles: any = {\r\n  AppShell: (theme: any) => ({\r\n    root: {\r\n      minHeight: '100vh',\r\n    }\r\n  }),\r\n  Paper: (theme: any) => ({\r\n    root: {\r\n      background: theme.colors.background[1],\r\n      padding: '15px',\r\n    }\r\n  }),\r\n  Text: (theme: any) => ({\r\n    root: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  Title: (theme: any) => ({\r\n    root: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  List: (theme: any) => ({\r\n    item: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  Anchor: (theme: any) => ({\r\n    root: {\r\n      color: theme.colors.primary[6],\r\n    }\r\n  }),\r\n  Select: (theme: any) => ({\r\n    label: {\r\n      color: theme.white,\r\n    },\r\n    item: {\r\n      borderRadius: '0px',\r\n    },\r\n    hovered: {\r\n      background: theme.colors.background[8],\r\n    },\r\n    selected: {\r\n      color: theme.white,\r\n      background: theme.colors.primary[5],\r\n    },\r\n  }),\r\n  TextInput: (theme: any) => ({\r\n    label: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  Checkbox: (theme: any) => ({\r\n    label: {\r\n      cursor: 'pointer',\r\n      color: theme.white,\r\n    },\r\n    input: {\r\n      cursor: 'pointer',\r\n    }\r\n  }),\r\n  Switch: (theme: any) => ({\r\n    label: {\r\n      cursor: 'pointer',\r\n      color: theme.white,\r\n    },\r\n    input: {\r\n      cursor: 'pointer',\r\n      background: theme.colors.background[1],\r\n      borderWidth: '2px',\r\n      '&:checked': {\r\n        background: theme.colors.primary[6],\r\n        borderColor: theme.colors.primary[6],\r\n      }\r\n    }\r\n  }),\r\n  Divider: (theme: any) => ({\r\n    horizontal: {\r\n      borderTopColor: theme.colors.background[3],\r\n    }\r\n  }),\r\n  Button: (theme: any) => ({\r\n    root: {\r\n      color: '#fff',\r\n      '&[disabled]': {\r\n        color: `${theme.white} !important`,\r\n        opacity: 0.5,\r\n        '&:not(.mantine-Button-loading)': {\r\n          backgroundColor: `${theme.colors.primary[6]} !important`,\r\n        }\r\n      }\r\n    }\r\n  }),\r\n  Tabs: (theme: any) => ({\r\n    tabLabel: {\r\n      color: theme.white,\r\n      fontFamily: \"'M PLUS 1 Code', sans-serif\",\r\n      fontSize: '16px',\r\n    },\r\n    tabIcon: {\r\n      color: theme.white,\r\n    },\r\n    tabActive: {\r\n      background: `${theme.colors.background[1]} !important`,\r\n      borderBottomWidth: `0px !important`,\r\n    },\r\n    body: {\r\n      paddingTop: '0px',\r\n      background: theme.colors.background[0],\r\n      borderBottomLeftRadius: '2px',\r\n      borderBottomRightRadius: '2px',\r\n    },\r\n  }),\r\n  Tooltip: (theme: any) => ({\r\n    body: {\r\n      background: theme.colors.background[2],\r\n      border: '1px solid #aaa',\r\n    },\r\n    arrow: {\r\n      background: theme.colors.background[2],\r\n      borderBottom: '1px solid #aaa',\r\n      borderRight: '1px solid #aaa',\r\n    }\r\n  }),\r\n  Popover: (theme: any) => ({\r\n    body: {\r\n      background: theme.colors.background[2],\r\n      borderColor: '#aaa',\r\n    },\r\n    arrow: {\r\n      background: theme.colors.background[2],\r\n      borderColor: '#aaa',\r\n    }\r\n  }),\r\n};\r\n","export function truncateFloat(n: number, places: number = 4) {\r\n  return n.toFixed(places).replace(/\\.?0+$/, '');\r\n}\r\n","import React, { forwardRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Title, Text, Divider, List, useMantineTheme, Paper } from '@mantine/core';\r\nimport { buildings, items, recipes } from '../../data';\r\nimport { truncateFloat } from '../../utilities/number';\r\nimport { NODE_TYPE } from '../../utilities/production-solver';\r\nimport { NodeData } from '../../containers/ProductionPlanner/PlannerResults/ProductionGraphTab';\r\nimport Portal from '../Portal';\r\n\r\ninterface Props {\r\n  currentNode: any | null,\r\n}\r\n\r\nconst GraphTooltip = forwardRef<HTMLDivElement, Props>((props, ref) => {\r\n  const { currentNode } = props;\r\n  const theme = useMantineTheme();\r\n\r\n  function renderInner() {\r\n    const data = currentNode.data() as NodeData;\r\n    if (data.type === NODE_TYPE.RECIPE) {\r\n      return renderRecipeInfo(data);\r\n    }\r\n    if (data.type === NODE_TYPE.RESOURCE) {\r\n      if (data.key === 'Desc_Water_C') {\r\n        return renderWaterExtractorInfo(data);\r\n      } else if (data.key === 'Desc_LiquidOil_C') {\r\n        return renderOilExtractorInfo(data);\r\n      } else if (data.key === 'Desc_NitrogenGas_C') {\r\n        return null;\r\n      }\r\n      return renderMinerInfo(data);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function renderRecipeInfo(data: NodeData) {\r\n    const recipeInfo = recipes[data.key];\r\n    const primaryProduct = recipeInfo.products[0];\r\n\r\n    const totalBuildings = Math.ceil(data.multiplier);\r\n    const clockPercentage = data.multiplier / totalBuildings * 100;\r\n    const itemsPerMinPerBuilding = primaryProduct.perMinute * data.multiplier / totalBuildings;\r\n\r\n    return (\r\n      <Tooltip>\r\n        <TooltipTitle order={3}>Recipe: [{recipeInfo.name}]</TooltipTitle>\r\n        <TooltipDivider />\r\n        <TooltipText>\r\n          <b>Buildings:</b> {totalBuildings}x {buildings[recipeInfo.producedIn].name}\r\n        </TooltipText>\r\n        <TooltipText>\r\n          <b>Clock speed:</b> {truncateFloat(clockPercentage)}% each\r\n        </TooltipText>\r\n        <TooltipText>\r\n          <b>Items per min:</b> {truncateFloat(itemsPerMinPerBuilding)} each\r\n        </TooltipText>\r\n        <TooltipDivider />\r\n        <TooltipText><b>Inputs:</b></TooltipText>\r\n        <List listStyleType='none' withPadding>\r\n          {\r\n            recipeInfo.ingredients.map((ingredient) => (\r\n              <List.Item>\r\n                <TooltipText>{items[ingredient.itemClass].name}: {truncateFloat(ingredient.perMinute * data.multiplier)} / min</TooltipText>\r\n              </List.Item>\r\n            ))\r\n          }\r\n        </List>\r\n        <TooltipText><b>Outputs:</b></TooltipText>\r\n        <List listStyleType='none' withPadding>\r\n          {\r\n            recipeInfo.products.map((product) => (\r\n              <List.Item>\r\n                <TooltipText>{items[product.itemClass].name}: {truncateFloat(product.perMinute * data.multiplier)} / min</TooltipText>\r\n              </List.Item>\r\n            ))\r\n          }\r\n        </List>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  function renderMinerInfo(data: NodeData) {\r\n    const itemInfo = items[data.key];\r\n    const baseNumMiners = data.multiplier / 60;\r\n    return (\r\n      <Tooltip>\r\n        <TooltipTitle order={3}>Resource: [{itemInfo.name}]</TooltipTitle>\r\n        <TooltipDivider />\r\n        <TooltipText><b>Miners required (assuming normal nodes):</b></TooltipText>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>100%</th>\r\n              <th>150%</th>\r\n              <th>200%</th>\r\n              <th>250%</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th>Mk. 1</th>\r\n              <td>{truncateFloat(baseNumMiners, 2)}x</td>\r\n              <td>{truncateFloat(baseNumMiners / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(baseNumMiners / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(baseNumMiners / 2.5, 2)}x</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Mk. 2</th>\r\n              <td>{truncateFloat(0.5 * baseNumMiners, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumMiners / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumMiners / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumMiners / 2.5, 2)}x</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Mk. 3</th>\r\n              <td>{truncateFloat(0.25 * baseNumMiners, 2)}x</td>\r\n              <td>{truncateFloat(0.25 * baseNumMiners / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(0.25 * baseNumMiners / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(0.25 * baseNumMiners / 2.5, 2)}x</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  function renderWaterExtractorInfo(data: NodeData) {\r\n    const itemInfo = items[data.key];\r\n    return (\r\n      <Tooltip>\r\n        <TooltipTitle order={3}>Resource: [{itemInfo.name}]</TooltipTitle>\r\n        <TooltipDivider />\r\n        <TooltipText><b>Extractors required:</b> {truncateFloat(data.multiplier / 120, 2)}x Water Extractor</TooltipText>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  function renderOilExtractorInfo(data: NodeData) {\r\n    const itemInfo = items[data.key];\r\n    const baseNumExtractors = data.multiplier / 120;\r\n    return (\r\n      <Tooltip>\r\n        <TooltipTitle order={3}>Resource: [{itemInfo.name}]</TooltipTitle>\r\n        <TooltipDivider />\r\n        <TooltipText><b>Extractors required:</b></TooltipText>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>100%</th>\r\n              <th>150%</th>\r\n              <th>200%</th>\r\n              <th>250%</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th>Impure</th>\r\n              <td>{truncateFloat(2.0 * baseNumExtractors, 2)}x</td>\r\n              <td>{truncateFloat(2.0 * baseNumExtractors / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(2.0 * baseNumExtractors / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(2.0 * baseNumExtractors / 2.5, 2)}x</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Normal</th>\r\n              <td>{truncateFloat(baseNumExtractors, 2)}x</td>\r\n              <td>{truncateFloat(baseNumExtractors / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(baseNumExtractors / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(baseNumExtractors / 2.5, 2)}x</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Pure</th>\r\n              <td>{truncateFloat(0.5 * baseNumExtractors, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumExtractors / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumExtractors / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumExtractors / 2.5, 2)}x</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Portal ref={ref} createRoot style={{ zIndex: theme.other.tooltipZIndex, pointerEvents: 'none' }}>\r\n      {currentNode ? renderInner() : null}\r\n    </Portal>\r\n  );\r\n});\r\n\r\nexport default GraphTooltip;\r\n\r\nconst Tooltip = styled(Paper)`\r\n  position: relative;\r\n  bottom: 50px;\r\n  background: ${({ theme }) => theme.colors.background[2]};\r\n  border: 1px solid #aaa;\r\n  min-width: 300px;\r\n\r\n  ::before {\r\n    content: '';\r\n    position: absolute;\r\n    left: calc(50% - 10px);\r\n    bottom: -12px;\r\n    width: 20px;\r\n    height: 20px;\r\n    background: ${({ theme }) => theme.colors.background[2]};\r\n    border-bottom: 1px solid #aaa;\r\n    border-right: 1px solid #aaa;\r\n\r\n    transform: rotate(45deg);\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nconst TooltipTitle = styled(Title)`\r\n  font-size: 16px;\r\n`;\r\n\r\nconst TooltipText = styled(Text)`\r\n  font-size: 15px;\r\n`;\r\n\r\nconst TooltipDivider = styled(Divider)`\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  border-top-color: ${({ theme }) => theme.colors.background[4]};\r\n`;\r\n\r\nconst Table = styled.table`\r\n  color: ${({ theme }) => theme.white};\r\n  border-collapse: collapse;\r\n\r\n  & th, td {\r\n    padding: 10px;\r\n    text-align: left;\r\n    font-size: 15px;\r\n  }\r\n\r\n  & td {\r\n    border: 1px solid ${({ theme }) => theme.colors.background[4]};\r\n  }\r\n\r\n  & tr:nth-child(2n) td {\r\n    background: ${({ theme }) => theme.colors.background[3]};\r\n  }\r\n`;\r\n","import React, { useMemo, useRef, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { nanoid } from 'nanoid';\r\nimport Cytoscape, { Stylesheet } from 'cytoscape';\r\nimport klay from 'cytoscape-klay';\r\nimport GraphVisualizer from 'react-cytoscapejs';\r\nimport popper from 'cytoscape-popper';\r\nimport { Text, Container, Center, Group, Loader } from '@mantine/core';\r\nimport { AlertCircle } from 'react-feather';\r\nimport { GraphNode, GraphEdge, NODE_TYPE } from '../../../../utilities/production-solver';\r\nimport { items, recipes, buildings } from '../../../../data';\r\nimport { graphColors } from '../../../../theme';\r\nimport GraphTooltip from '../../../../components/GraphTooltip';\r\nimport { truncateFloat } from '../../../../utilities/number';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\n\r\nCytoscape.use(popper);\r\nCytoscape.use(klay);\r\n\r\nif (process.env.NODE_ENV !== 'development') {\r\n  Cytoscape.warnings(false);\r\n}\r\n\r\nconst layout = {\r\n  name: 'klay',\r\n  padding: 40,\r\n  klay: {\r\n    direction: 'RIGHT',\r\n    edgeRouting: 'ORTHOGONAL',\r\n    nodePlacement: 'LINEAR_SEGMENTS',\r\n    edgeSpacingFactor: 0.2,\r\n    inLayerSpacingFactor: 0.7,\r\n    spacing: 90,\r\n    thoroughness: 10,\r\n  },\r\n};\r\n\r\nconst stylesheet: Stylesheet[] = [\r\n  {\r\n    // ====== BASE ====== //\r\n    selector: 'core',\r\n    style: {\r\n      'active-bg-color': '#000',\r\n      'active-bg-opacity': 0,\r\n      'active-bg-size': 0,\r\n      'selection-box-color': '#000',\r\n      'selection-box-border-color': '#000',\r\n      'selection-box-border-width': 0,\r\n      'selection-box-opacity': 0,\r\n      'outside-texture-bg-color': '#000',\r\n      'outside-texture-bg-opacity': 0,\r\n    },\r\n  },\r\n  {\r\n    selector: 'node',\r\n    style: {\r\n      'label': 'data(label)',\r\n      'text-valign': 'center',\r\n      'text-halign': 'center',\r\n      'height': '30px',\r\n      'width': '150px',\r\n      'text-max-width': '157px',\r\n      'padding-top': '20px',\r\n      'overlay-padding': 0,\r\n      'overlay-opacity': 0,\r\n      'text-wrap': 'wrap',\r\n      'font-size': '14px',\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge',\r\n    style: {\r\n      'label': 'data(label)',\r\n      'width': 1,\r\n      'curve-style': 'bezier',\r\n      'control-point-step-size': 100,\r\n      'target-arrow-shape': 'triangle-backcurve',\r\n      'arrow-scale': 1.2,\r\n      'overlay-padding': 0,\r\n      'overlay-opacity': 0,\r\n      'text-wrap': 'wrap',\r\n      'font-size': '14px',\r\n      'color': graphColors.edge.label,\r\n      'line-color': graphColors.edge.line,\r\n      'target-arrow-color': graphColors.edge.line,\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge.loop',\r\n    style: {\r\n      'loop-direction': '180deg',\r\n      'loop-sweep': '-40deg',\r\n      'edge-distances': 'node-position',\r\n      'source-endpoint': '-15% 50%',\r\n      'target-endpoint': '15% 50%',\r\n    },\r\n  },\r\n\r\n\r\n  // ====== NODES ====== //\r\n  {\r\n    selector: 'node.item-shape',\r\n    style: {\r\n      'shape': 'ellipse',\r\n      'height': '40px',\r\n      'width': '130px',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.recipe-shape',\r\n    style: {\r\n      'shape': 'round-rectangle',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.selected, node.grabbed',\r\n    style: {\r\n      'z-index': 100,\r\n      'height': '45px',\r\n      'width': '195px',\r\n      'text-max-width': '192px',\r\n      'font-size': '16px',\r\n      'font-weight': 'bold',\r\n      'border-width': 2,\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.item-shape.selected, node.item-shape.grabbed',\r\n    style: {\r\n      'height': '55px',\r\n      'width': '170px',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.resource',\r\n    style: { 'background-color': graphColors.resource.base },\r\n  },\r\n  {\r\n    selector: 'node.resource.selected, node.resource.grabbed',\r\n    style: { 'background-color': graphColors.resource.selected },\r\n  },\r\n  {\r\n    selector: 'node.input',\r\n    style: { 'background-color': graphColors.input.base },\r\n  },\r\n  {\r\n    selector: 'node.input.selected, node.input.grabbed',\r\n    style: { 'background-color': graphColors.input.selected },\r\n  },\r\n  {\r\n    selector: 'node.hand-gathered',\r\n    style: { 'background-color': graphColors.handGathered.base },\r\n  },\r\n  {\r\n    selector: 'node.hand-gathered.selected, node.hand-gathered.grabbed',\r\n    style: { 'background-color': graphColors.handGathered.selected },\r\n  },\r\n  {\r\n    selector: 'node.side-product',\r\n    style: { 'background-color': graphColors.sideProduct.base },\r\n  },\r\n  {\r\n    selector: 'node.side-product.selected, node.side-product.grabbed',\r\n    style: { 'background-color': graphColors.sideProduct.selected },\r\n  },\r\n  {\r\n    selector: 'node.final-product',\r\n    style: { 'background-color': graphColors.finalProduct.base },\r\n  },\r\n  {\r\n    selector: 'node.final-product.selected, node.final-product.grabbed',\r\n    style: { 'background-color': graphColors.finalProduct.selected },\r\n  },\r\n  {\r\n    selector: 'node.recipe',\r\n    style: { 'background-color': graphColors.recipe.base },\r\n  },\r\n  {\r\n    selector: 'node.recipe.selected, node.recipe.grabbed',\r\n    style: { 'background-color': graphColors.recipe.selected },\r\n  },\r\n  {\r\n    selector: 'node.nuclear',\r\n    style: { 'background-color': graphColors.nuclear.base },\r\n  },\r\n  {\r\n    selector: 'node.nuclear.selected, node.nuclear.grabbed',\r\n    style: { 'background-color': graphColors.nuclear.selected },\r\n  },\r\n\r\n  \r\n  // ====== EDGES ====== //\r\n  {\r\n    selector: 'edge.selected, edge.grabbed',\r\n    style: {\r\n      'width': 4,\r\n      'font-size': '14px',\r\n      'font-weight': 'bold',\r\n      'text-outline-width': 2,\r\n      'z-index': 100,\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge.selected-incoming, edge.grabbed-incoming',\r\n    style: {\r\n      'color': graphColors.incoming.label,\r\n      'line-color': graphColors.incoming.line,\r\n      'target-arrow-color': graphColors.incoming.line,\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge.selected-outgoing, edge.grabbed-outgoing',\r\n    style: {\r\n      'color': graphColors.outgoing.label,\r\n      'line-color': graphColors.outgoing.line,\r\n      'target-arrow-color': graphColors.outgoing.line,\r\n    },\r\n  },\r\n];\r\n\r\nconst NODE_COLOR_CLASS = {\r\n  [NODE_TYPE.FINAL_PRODUCT]: 'final-product',\r\n  [NODE_TYPE.SIDE_PRODUCT]: 'side-product',\r\n  [NODE_TYPE.INPUT_ITEM]: 'input',\r\n  [NODE_TYPE.HAND_GATHERED_RESOURCE]: 'hand-gathered',\r\n  [NODE_TYPE.RESOURCE]: 'resource',\r\n  [NODE_TYPE.RECIPE]: 'recipe',\r\n};\r\n\r\nfunction getNodeLabel(node: GraphNode) {\r\n  let label = '';\r\n  let amountText = '';\r\n  if (node.type === NODE_TYPE.RECIPE) {\r\n    const recipe = recipes[node.key];\r\n    label = recipe.name;\r\n    amountText = `${truncateFloat(node.multiplier)}x ${buildings[recipe.producedIn].name}`;\r\n  } else {\r\n    const item = items[node.key];\r\n    if (node.type === NODE_TYPE.SIDE_PRODUCT) {\r\n      label = `Side Product:\\n${item.name}`;\r\n    } else {\r\n      label = item.name;\r\n    }\r\n    amountText = `${truncateFloat(node.multiplier)} / min`;\r\n  }\r\n  return `${label}\\n${amountText}`;\r\n}\r\n\r\nfunction getNodeClasses(node: GraphNode) {\r\n  const classes = [];\r\n  if (node.type === NODE_TYPE.RECIPE) {\r\n    classes.push('recipe-shape');\r\n    const recipe = recipes[node.key];\r\n    if (recipe.producedIn === 'Desc_GeneratorNuclear_C') {\r\n      classes.push('nuclear');\r\n    } else {\r\n      classes.push(NODE_COLOR_CLASS[node.type]);\r\n    }\r\n  } else {\r\n    classes.push('item-shape');\r\n    classes.push(NODE_COLOR_CLASS[node.type]);\r\n  }\r\n  return classes;\r\n}\r\n\r\nfunction getEdgeLabel(edge: GraphEdge) {\r\n  const item = items[edge.key];\r\n  const label = item.name;\r\n  const amountText = `${truncateFloat(edge.productionRate)} / min`;\r\n  return `${label}\\n${amountText}`;\r\n}\r\n\r\nfunction _resizeListener(graphRef: React.RefObject<HTMLDivElement | null>) {\r\n  if (graphRef?.current) {\r\n    const bounds = graphRef.current.getBoundingClientRect();\r\n    graphRef.current.style.height = `${window.innerHeight - bounds.top - 40}px`;\r\n  }\r\n}\r\n\r\ninterface PopperRef {\r\n  popper: any,\r\n  nodeId: string,\r\n}\r\n\r\nexport interface NodeData extends GraphNode {\r\n  label: string,\r\n}\r\n\r\nexport interface EdgeData extends GraphEdge {\r\n  source: string,\r\n  target: string,\r\n  label: string,\r\n}\r\n\r\nconst ProductionGraphTab = () => {\r\n  const [doFirstRender, setDoFirstRender] = useState(false);\r\n  const graphRef = useRef<HTMLDivElement | null>(null);\r\n  const cyRef = useRef<Cytoscape.Core | null>(null);\r\n  const popupRef = useRef<HTMLDivElement | null>(null);\r\n  const popperRef = useRef<PopperRef | null>(null);\r\n  const [popupNode, setPopupNode] = useState<any | null>(null);\r\n  const ctx = useProductionContext();\r\n  const resultsGraph = ctx.solverResults?.productionGraph || null;\r\n  const graphError = ctx.solverResults?.error || null;\r\n  const isLoading = ctx.calculating;\r\n\r\n  function setGraphRef(instance: HTMLDivElement | null) {\r\n    if (instance && !graphRef.current) {\r\n      graphRef.current = instance;\r\n      _resizeListener(graphRef);\r\n      setDoFirstRender(true);\r\n    }\r\n  }\r\n\r\n  function setCyRef(instance: Cytoscape.Core | null) {\r\n    if (instance && cyRef.current !== instance) {\r\n      cyRef.current = instance;\r\n      setCyListeners(cyRef.current);\r\n    }\r\n  }\r\n\r\n  function setCyListeners(cy: Cytoscape.Core) {\r\n    cy.on('select', 'node', function (e) {\r\n      e.target.addClass('selected');\r\n      e.target.outgoers('edge').addClass('selected').addClass('selected-outgoing');\r\n      e.target.incomers('edge').addClass('selected').addClass('selected-incoming');\r\n    });\r\n\r\n    cy.on('unselect', 'node', function (e) {\r\n      e.target.removeClass('selected');\r\n      e.target.outgoers('edge').removeClass('selected').removeClass('selected-outgoing');\r\n      e.target.incomers('edge').removeClass('selected').removeClass('selected-incoming');\r\n    });\r\n\r\n    cy.on('grab', 'node', function (e) {\r\n      e.target.addClass('grabbed');\r\n      e.target.outgoers('edge').addClass('grabbed').addClass('grabbed-outgoing');\r\n      e.target.incomers('edge').addClass('grabbed').addClass('grabbed-incoming');\r\n    });\r\n\r\n    cy.on('free', 'node', function (e) {\r\n      e.target.removeClass('grabbed');\r\n      e.target.outgoers('edge').removeClass('grabbed').removeClass('grabbed-outgoing');\r\n      e.target.incomers('edge').removeClass('grabbed').removeClass('grabbed-incoming');\r\n    });\r\n\r\n    cy.on('mouseover', 'node', function (e) {\r\n      const nodeId = e.target.id() as string;\r\n      if (popperRef.current?.nodeId === nodeId) return;\r\n      deactivatePopper(cy);\r\n      activatePopper(cy, e.target);\r\n    });\r\n\r\n    cy.on('mouseout', 'node', function (e) {\r\n      const nodeId = e.target.id() as string;\r\n      if (popperRef.current?.nodeId === nodeId) {\r\n        deactivatePopper(cy);\r\n      }\r\n    });\r\n  }\r\n\r\n  function activatePopper(cy: Cytoscape.Core, node: any) {\r\n    const popper = node.popper({\r\n      content: () => popupRef.current || undefined,\r\n      popper: {\r\n        placement: 'top',\r\n      }\r\n    });\r\n    popperRef.current = { popper, nodeId: node.id() };\r\n    node.on('position', () => { popper.update(); });\r\n    cy.on('pan zoom resize', () => { popper.update(); });\r\n    setPopupNode(node);\r\n  }\r\n\r\n  function deactivatePopper(cy: Cytoscape.Core) {\r\n    if (!popperRef.current) return;\r\n    const node = cy.getElementById(popperRef.current.nodeId);\r\n    node.off('position');\r\n    cy.off('pan zoom resize');\r\n    popperRef.current.popper.destroy();\r\n    popperRef.current = null;\r\n    setPopupNode(null);\r\n  }\r\n\r\n  useEffect(() => {\r\n    function resizeListener() {\r\n      _resizeListener(graphRef);\r\n    }\r\n    window.addEventListener('resize', resizeListener);\r\n    return () => {\r\n      window.removeEventListener('resize', resizeListener);\r\n    }\r\n  }, []);\r\n\r\n  const graphProps = useMemo<any>(() => {\r\n    if (resultsGraph == null) {\r\n      return null;\r\n    }\r\n\r\n    const key = nanoid();\r\n    const elements: any[] = [];\r\n\r\n    Object.entries(resultsGraph.nodes).forEach(([key, node]) => {\r\n      elements.push({\r\n        group: 'nodes',\r\n        data: {\r\n          ...node,\r\n          label: getNodeLabel(node),\r\n        },\r\n        classes: getNodeClasses(node),\r\n      });\r\n    });\r\n    resultsGraph.edges.forEach((edge) => {\r\n      elements.push({\r\n        group: 'edges',\r\n        data: {\r\n          ...edge,\r\n          source: edge.from,\r\n          target: edge.to,\r\n          label: getEdgeLabel(edge),\r\n        },\r\n        classes: edge.from === edge.to ? ['loop'] : undefined,\r\n      });\r\n    });\r\n    \r\n    return { key, elements };\r\n  }, [resultsGraph]);\r\n\r\n  return (\r\n    <>\r\n      <GraphContainer fluid ref={setGraphRef}>\r\n        {\r\n          isLoading && (\r\n            <Center style={{ position: 'absolute', height: '100%', width: '100%' }}>\r\n              <Loader size={50} />\r\n            </Center>\r\n          )\r\n        }\r\n        {\r\n          doFirstRender && !isLoading && (\r\n            graphProps != null\r\n            ? (\r\n                <GraphVisualizer\r\n                  key={graphProps.key}\r\n                  elements={graphProps.elements}\r\n                  layout={layout}\r\n                  stylesheet={stylesheet}\r\n                  boxSelectionEnabled={false}\r\n                  wheelSensitivity={0.13}\r\n                  maxZoom={3.0}\r\n                  minZoom={0.1}\r\n                  style={{ position: 'absolute', height: '100%', width: '100%', overflow: 'hidden' }}\r\n                  cy={setCyRef}\r\n                />\r\n            )\r\n            : (\r\n              <Center style={{ position: 'absolute', height: '100%', width: '100%' }}>\r\n                <Group>\r\n                  <AlertCircle color=\"#eee\" size={85} style={{ position: 'relative', top: '3px' }} />\r\n                  <Group direction='column' style={{ gap: '0px' }}>\r\n                    <Text style={{ fontSize: '28px' }}>\r\n                      Could not build graph\r\n                    </Text>\r\n                      {graphError\r\n                      ? (\r\n                        <Text style={{ maxWidth: '600px', fontSize: '14px' }}>\r\n                            {`ERROR: ${graphError.message}`}<br />\r\n                            {graphError?.helpText || ''}\r\n                        </Text>\r\n                      )\r\n                      : null}\r\n                  </Group>\r\n                </Group>\r\n              </Center>\r\n            )\r\n          )\r\n        }\r\n      </GraphContainer>\r\n      <GraphTooltip ref={popupRef} currentNode={popupNode} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductionGraphTab;\r\n\r\nconst GraphContainer = styled(Container)`\r\n  position: relative;\r\n  min-height: 600px;\r\n  min-width: 800px;\r\n  border: 1px solid #fff;\r\n  border-top-width: 0px;\r\n  margin: 0px;\r\n  padding: 0px;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Title, List, Divider, Text, Container, Group } from '@mantine/core';\r\nimport { AlertCircle } from 'react-feather';\r\nimport { buildings, items } from '../../../../data';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\n\r\nfunction formatFloat(n: number) {\r\n  return n.toLocaleString(undefined, { maximumFractionDigits: 3 });\r\n}\r\n\r\nconst ReportTab = () => {\r\n  const ctx = useProductionContext();\r\n  const report = ctx.solverResults?.report;\r\n\r\n  function renderReport() {\r\n    return (\r\n      <>\r\n        <Title order={2}>Statistics</Title>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Points Produced</SmallerTitle>\r\n        <Text>{formatFloat(report!.pointsProduced)} per min</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Resource Usage Score</SmallerTitle>\r\n        <Text>{formatFloat(report!.resourceEfficiencyScore)}</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Total Build Area</SmallerTitle>\r\n        <Text>{formatFloat(report!.totalBuildArea)} m²</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Estimated Minimal Foundations</SmallerTitle>\r\n        <Text>{formatFloat(report!.estimatedFoundations)} foundations ({formatFloat(report!.estimatedFoundations * 8)} Concrete)</Text>\r\n        <SDivider />\r\n\r\n        <Title order={2} style={{ marginTop: '30px' }}>Power</Title>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Manufacturing</SmallerTitle>\r\n        <Text>{formatFloat(report!.powerUsageEstimate.production)} MW</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Resource Extraction</SmallerTitle>\r\n        <Text>{formatFloat(report!.powerUsageEstimate.extraction)} MW</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Generation</SmallerTitle>\r\n        <Text>{formatFloat(report!.powerUsageEstimate.generators)} MW</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Total {report!.powerUsageEstimate.total < 0 ? 'Production' : 'Usage'}</SmallerTitle>\r\n        <Text>{formatFloat(Math.abs(report!.powerUsageEstimate.total))} MW</Text>\r\n        <SDivider />\r\n\r\n        <Title order={2} style={{ marginTop: '30px' }}>Buildings</Title>\r\n        <SDivider />\r\n        <List listStyleType='none'>\r\n          {renderBuildingsUsed()}\r\n          <List.Item>\r\n            <Title order={3} style={{ marginBottom: '8px' }}>Total</Title>\r\n            <ListWithLine withPadding listStyleType='none'>\r\n              {\r\n                Object.entries(report!.totalMaterialCost)\r\n                  .sort((a, b) => {\r\n                    if (a[1] > b[1]) return -1;\r\n                    if (a[1] < b[1]) return 1;\r\n                    return 0;\r\n                  })\r\n                  .map(([itemKey, count]) => (\r\n                    <List.Item key={itemKey}>\r\n                      <ItemLabel>{items[itemKey].name}</ItemLabel> <Count>x{formatFloat(count)}</Count>\r\n                    </List.Item>\r\n                  ))\r\n              }\r\n            </ListWithLine>\r\n          </List.Item>\r\n        </List>\r\n      </>\r\n    );\r\n  }\r\n\r\n  function renderBuildingsUsed() {\r\n    return Object.entries(report!.buildingsUsed)\r\n      .sort((a, b) => {\r\n        if (a[1].count > b[1].count) return -1;\r\n        if (a[1].count < b[1].count) return 1;\r\n        return 0;\r\n      })\r\n      .map(([buildingKey, usageInfo]) => (\r\n      <List.Item key={buildingKey} style={{ paddingBottom: '10px' }}>\r\n        <Title order={3} style={{ marginBottom: '8px' }}>\r\n          {buildings[buildingKey].name} <Count>x{formatFloat(usageInfo.count)}</Count>\r\n        </Title>\r\n        <ListWithLine withPadding listStyleType='none' style={{ marginBottom: '10px' }}>\r\n          {\r\n            Object.entries(usageInfo.materialCost)\r\n              .sort((a, b) => {\r\n                if (a[1] > b[1]) return -1;\r\n                if (a[1] < b[1]) return 1;\r\n                return 0;\r\n              })\r\n              .map(([itemKey, count]) => (\r\n                <List.Item key={itemKey}>\r\n                  <ItemLabel>{items[itemKey].name}</ItemLabel>  <Count>x{formatFloat(count)}</Count>\r\n                </List.Item>\r\n              ))\r\n          }\r\n        </ListWithLine>\r\n      </List.Item>\r\n    ))\r\n  }\r\n  \r\n  return (\r\n    <ReportContainer fluid>\r\n      {\r\n      !report\r\n        ? (\r\n          <Group style={{ height: '150px', justifyContent: 'flex-start' }}>\r\n            <AlertCircle color=\"#eee\" size={50} />\r\n            <Text style={{ fontSize: '32px' }}>\r\n              No data available\r\n            </Text>\r\n          </Group>\r\n        )\r\n        : renderReport()\r\n      }\r\n    </ReportContainer>\r\n  );\r\n};\r\n\r\nexport default ReportTab;\r\n\r\nconst ReportContainer = styled(Container)`\r\n  padding: 10px;\r\n  padding-bottom: 15px;\r\n`;\r\n\r\nconst SDivider = styled(Divider)`\r\n  margin: 10px 0px;\r\n`;\r\n\r\nconst SmallerTitle = styled(Title)`\r\n  font-size: 19px;\r\n`;\r\n\r\nconst ItemLabel = styled.span`\r\n  font-size: 17px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Count = styled.span`\r\n  font-size: 15px;\r\n  margin-left: 3px;\r\n`;\r\n\r\nconst ListWithLine = styled(List)`\r\n  position: relative;\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0px;\r\n    bottom: 0px;\r\n    left: 12px;\r\n    width: 3px;\r\n    background: ${({ theme }) => theme.colors.background[3]};\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Container, MantineTheme, Tabs, useMantineTheme } from '@mantine/core';\r\nimport { Share2, Edit } from 'react-feather';\r\nimport ProductionGraphTab from './ProductionGraphTab';\r\nimport ReportTab from './ReportTab';\r\nimport { SolverResults } from '../../../utilities/production-solver';\r\nimport Card from '../../../components/Card';\r\n\r\nconst tabSx = (theme: MantineTheme) => ({\r\n  '&.mantine-Tabs-tabControl': {\r\n    minWidth: '200px',\r\n  },\r\n});\r\n\r\nconst PlannerResults = () => {\r\n  const theme = useMantineTheme();\r\n  return (\r\n    <Tabs variant='outline'>\r\n      <Tabs.Tab label='Production Graph' icon={<Share2 size={18} />} sx={tabSx}>\r\n        <Container fluid padding={0}>\r\n          <ProductionGraphTab />\r\n        </Container>\r\n      </Tabs.Tab>\r\n      <Tabs.Tab label='Factory Report' icon={<Edit size={18} />} sx={tabSx}>\r\n        <Card style={{ paddingLeft: '10px', background: theme.colors.background[0] }}>\r\n          <ReportTab  />\r\n        </Card>\r\n      </Tabs.Tab>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default PlannerResults;\r\n","import React from 'react';\r\nimport { Divider, Text, Title } from '@mantine/core';\r\nimport { useLocalStorageValue } from '@mantine/hooks';\r\nimport { useProductionContext } from '../../contexts/production';\r\nimport Drawer from '../Drawer';\r\nimport PlannerOptions from './PlannerOptions';\r\nimport PlannerResults from './PlannerResults';\r\nimport Card from '../../components/Card';\r\n\r\nconst Factory = () => {\r\n  const [drawerOpen, setDrawerOpen] = useLocalStorageValue<'false' | 'true'>({ key: 'drawer-open', defaultValue: 'false' });\r\n  const ctx = useProductionContext();\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ marginBottom: '25px' }}>\r\n        <Title order={2}>\r\n          Welcome back &lt;Engineer ID #{ctx.engineerId}&gt;\r\n        </Title>\r\n        <Text>\r\n          This tool has been created to increase the efficiency of your work towards Project Assembly.<br />\r\n          We hope that you will continue to be effective.\r\n        </Text>\r\n        <Divider style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n        <Text style={{ fontSize: '13px' }}>\r\n          {ctx.ficsitTip}\r\n        </Text>\r\n      </Card>\r\n      <PlannerResults />\r\n      <Drawer open={drawerOpen === 'true'} onToggle={(value) => { setDrawerOpen(value ? 'true' : 'false'); }}>\r\n        <PlannerOptions />\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Factory;\r\n","import React from 'react';\r\nimport { ProductionProvider } from '../../contexts/production';\r\nimport Factory from './Factory';\r\n\r\nconst ProductionPlanner = () => {\r\n  return (\r\n    <ProductionProvider>\r\n      <Factory />\r\n    </ProductionProvider>\r\n  );\r\n};\r\n\r\nexport default ProductionPlanner;\r\n","import React from 'react';\r\n\r\nconst PaypalButton = () => {\r\n  return (\r\n    <form action=\"https://www.paypal.com/donate\" method=\"post\" target=\"_blank\" style={{ opacity: '0.8' }}>\r\n      <input type=\"hidden\" name=\"business\" value=\"EN9ZT88D25SRS\" />\r\n      <input type=\"hidden\" name=\"no_recurring\" value=\"1\" />\r\n      <input type=\"hidden\" name=\"item_name\" value=\"Wow, I didn't expect anyone to click this button! It honestly means a lot! I will put this money towards a nice coffee :P\" />\r\n      <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\r\n      <input type=\"image\" src=\"https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif\" name=\"submit\" title=\"PayPal - The safer, easier way to pay online!\" alt=\"Donate with PayPal button\" />\r\n      <img alt=\"\" src=\"https://www.paypal.com/en_US/i/scr/pixel.gif\" width=\"1\" height=\"1\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PaypalButton;\r\n","import React from 'react';\r\nimport { Anchor, AnchorProps } from '@mantine/core';\r\n\r\nconst ExternalLink = (props: AnchorProps<React.ElementType<any>>) => {\r\n  return <Anchor target='_blank' rel='noopener noreferrer' {...props} />;\r\n};\r\n\r\nexport default ExternalLink;\r\n","import React from 'react';\r\nimport { Title, Text } from '@mantine/core';\r\nimport Card from '../../components/Card';\r\nimport ExternalLink from '../../components/ExternalLink';\r\n\r\ninterface Props {\r\n  children: React.ReactNode,\r\n}\r\n\r\ninterface State {\r\n  hasError: boolean,\r\n}\r\n\r\nclass ErrorBoundary extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromError() {\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch() {\r\n    // TODO: log to reporting service\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <Card>\r\n          <Title>Oh no...</Title>\r\n          <Text>\r\n            Something broke horribly... Sorry about that, but that's why it says BETA at the top :P<br />\r\n            If you don't mind, you can <ExternalLink href='https://github.com/lydianlights/yet-another-factory-planner/issues'>file an issue on github</ExternalLink> or <ExternalLink href='https://discord.gg/p7e9ZzRHCm'>contact me on discord</ExternalLink> letting me know what you were doing, that way I can fix this crash.<br />\r\n            In the meantime, refreshing the page should reset everything and let you get back to work :D\r\n          </Text>\r\n        </Card>\r\n      )\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppShell, Header, Container, useMantineTheme, Anchor } from '@mantine/core';\r\nimport SiteHeader from './SiteHeader';\r\nimport ProductionPlanner from '../ProductionPlanner';\r\nimport PaypalButton from '../../components/PaypalButton';\r\nimport ExternalLink from '../../components/ExternalLink';\r\nimport ErrorBoundary from '../ErrorBoundary';\r\n\r\nconst Main = () => {\r\n  const theme = useMantineTheme();\r\n  return (\r\n    <AppShell\r\n      padding='md'\r\n      header={<SHeader height={theme.other.headerHeight} padding='sm'><SiteHeader /></SHeader>}\r\n    >\r\n      <MainContainer fluid>\r\n        <ErrorBoundary>\r\n          <ProductionPlanner />\r\n        </ErrorBoundary>\r\n        <Footer>\r\n          <FooterContent>\r\n            Made with ♥ by <ExternalLink href='https://github.com/lydianlights'>LydianLights</ExternalLink> -\r\n            Questions or bugs? File an <ExternalLink href='https://github.com/lydianlights/yet-another-factory-planner/issues'>issue on github</ExternalLink> or <ExternalLink href='https://discord.gg/p7e9ZzRHCm'>check out the discord</ExternalLink>\r\n          </FooterContent>\r\n          <PaypalButton />\r\n        </Footer>\r\n      </MainContainer>\r\n    </AppShell>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n\r\nconst SHeader = styled(Header)`\r\n  position: fixed;\r\n  margin: 0px;\r\n  padding: 10px;\r\n  background: ${({ theme }) => theme.colors.primary[6]};\r\n  overflow: hidden;\r\n`;\r\n\r\nconst MainContainer = styled(Container)`\r\n  margin-left: ${({ theme }) => theme.other.pageLeftMargin};\r\n  margin-top: ${({ theme }) => theme.other.headerHeight};\r\n  padding-left: 0px;\r\n`;\r\n\r\nconst Footer = styled(Container)`\r\n  margin-top: 40px;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst FooterContent = styled(Container)`\r\n  padding: 10px 20px;\r\n  color: ${({ theme }) => theme.white};\r\n  /* background: rgba(0, 0, 0, 0.3); */\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/stripe-bg.ddc4de7e.png\";","import { createGlobalStyle } from \"styled-components\";\r\nimport bgImage from './assets/stripe-bg.png';\r\n\r\nconst GlobalStylesheet = createGlobalStyle<any>`\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: ${({ theme }) => theme.fontFamily};\r\n    background: url(${bgImage});\r\n  }\r\n\r\n  #root {\r\n    min-height: 100vh;\r\n  }\r\n  \r\n  html,\r\n  .custom-scrollbar {\r\n    scrollbar-color: ${({ theme }) => `${theme.other.scrollbarThumbColor} ${theme.other.scrollbarTrackColor}`};\r\n\r\n    & > * {\r\n      scrollbar-color: initial; // prevent inheritance\r\n    }\r\n\r\n    ::-webkit-scrollbar {\r\n      width: auto;\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n      background-color: ${({ theme }) => theme.other.scrollbarTrackColor};\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n      background-color: ${({ theme }) => theme.other.scrollbarThumbColor};\r\n    }\r\n\r\n    ::-webkit-scrollbar-corner {\r\n      background-color: ${({ theme }) => theme.other.scrollbarTrackColor};\r\n    }\r\n    \r\n    ::-webkit-scrollbar-button:single-button {\r\n      background-color: ${({ theme }) => theme.other.scrollbarTrackColor};\r\n      display: block;\r\n      height: auto;\r\n      width: auto;\r\n      background-size: 10px;\r\n      background-repeat: no-repeat;\r\n      background-position: center center;\r\n    }\r\n\r\n    // Up\r\n    ::-webkit-scrollbar-button:single-button:vertical:decrement {\r\n      background-image: url(\"data:image/svg+xml;base64,${btoa('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill=\"#eee\"><polygon points=\"50,20 100,75 0,75 Z\"/></svg>')}\");\r\n    }\r\n\r\n    // Down\r\n    ::-webkit-scrollbar-button:single-button:vertical:increment {\r\n      background-image: url(\"data:image/svg+xml;base64,${btoa('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill=\"#eee\"><polygon points=\"50,75 100,20 0,20 Z\"/></svg>')}\");\r\n    }\r\n\r\n    // Left\r\n    ::-webkit-scrollbar-button:single-button:horizontal:decrement {\r\n      background-image: url(\"data:image/svg+xml;base64,${btoa('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill=\"#eee\"><polygon points=\"20,50 75,100 75,0 Z\"/></svg>')}\");\r\n    }\r\n\r\n    // Right\r\n    ::-webkit-scrollbar-button:single-button:horizontal:increment {\r\n      background-image: url(\"data:image/svg+xml;base64,${btoa('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill=\"#eee\"><polygon points=\"75,50 20,100 20,0 Z\"/></svg>')}\");\r\n    }\r\n  }\r\n`;\r\n\r\nexport default GlobalStylesheet;\r\n","import React from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { MantineProvider, useMantineTheme } from '@mantine/core';\r\nimport Main from './containers/Main';\r\nimport { DrawerProvider } from './contexts/drawer';\r\nimport { theme, styles } from './theme';\r\nimport GlobalStylesheet from './global-stylesheet';\r\n\r\nfunction App() {\r\n  return (\r\n    <MantineProvider\r\n      theme={theme}\r\n      styles={styles}\r\n    >\r\n      <ThemeTransfer />\r\n    </MantineProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst ThemeTransfer = () => {\r\n  const mergedTheme = useMantineTheme();\r\n  return (\r\n    <ThemeProvider theme={mergedTheme}>\r\n      <GlobalStylesheet />\r\n      <DrawerProvider>\r\n        <Main />\r\n      </DrawerProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}