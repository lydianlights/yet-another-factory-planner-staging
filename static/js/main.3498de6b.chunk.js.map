{"version":3,"sources":["assets/satisfactory_logo_full_color_small.png","components/SocialIcon/index.tsx","contexts/gameData/consts.ts","api/index.ts","hooks/usePrevious.ts","api/useApi.ts","contexts/gameData/index.tsx","hooks/usePageTitle.ts","api/modules/initialize/useGetInitialize.ts","containers/Main/SiteHeader/index.tsx","assets/stripe-bg.png","contexts/global/index.tsx","hooks/useSessionStorage.ts","utilities/error/GraphError/index.ts","utilities/production-solver/index.ts","contexts/production/legacy-state-decoders/v1_U5.ts","contexts/production/legacy-state-decoders/v2_U5.ts","contexts/production/legacy-state-decoders/v3_U5.ts","contexts/production/reducer.tsx","contexts/production/consts.ts","contexts/production/index.tsx","api/modules/shared-factories/usePostSharedFactory.ts","components/Card/index.tsx","contexts/drawer/index.tsx","components/Portal/index.tsx","containers/Drawer/index.tsx","components/Section/index.tsx","components/TrashButton/index.tsx","containers/ProductionPlanner/PlannerOptions/ProductionTab/index.tsx","components/LabelWithTooltip/index.tsx","containers/ProductionPlanner/PlannerOptions/InputsTab/index.tsx","containers/ProductionPlanner/PlannerOptions/RecipesTab/index.tsx","containers/ProductionPlanner/PlannerOptions/index.tsx","theme.ts","utilities/number/index.ts","components/GraphTooltip/index.tsx","containers/ProductionPlanner/PlannerResults/ProductionGraphTab/index.tsx","containers/ProductionPlanner/PlannerResults/ReportTab/index.tsx","containers/ProductionPlanner/PlannerResults/index.tsx","containers/ProductionPlanner/Factory.tsx","containers/ProductionPlanner/index.tsx","components/PaypalButton/index.tsx","components/ExternalLink/index.tsx","containers/ErrorBoundary/index.tsx","containers/Main/index.tsx","global-stylesheet.ts","App.tsx","index.tsx"],"names":["SocialIcon","props","href","icon","SAnchor","target","rel","styled","Anchor","DEFAULT_GAME_VERSION","SHARE_QUERY_PARAM","GAME_VERSION_OPTIONS","value","label","apiClient","axios","create","baseURL","process","responseType","urlParamsRegex","parseURL","url","data","parsedData","parsedURL","replace","match","key","String","undefined","console","error","get","a","request","method","params","post","usePrevious","ref","useRef","useEffect","current","useApi","apiAction","useState","setData","setError","loading","setLoading","prevLoading","requestHandler","useCallback","req","result","apiError","status","message","useMemo","completedThisFrame","GameDataContext","createContext","useGameDataContext","ctx","useContext","Error","displayName","GameDataProvider","children","gameData","setGameData","gameVersion","setGameVersion","initializer","setInitializer","needToFetchGameData","setNeedToFetchGameData","getInitialize","res","json","pageTitle","versionPart","document","title","URLSearchParams","window","location","search","shareKey","legacyEncoding","sessionVersion","sessionStorage","getItem","sessionState","factoryKey","game_data","factoryConfig","factory_config","sessionStateJSON","JSON","parse","e","history","replaceState","pathname","removeItem","handleSetGameVersion","version","ctxValue","Provider","SiteHeader","HeaderContainer","fluid","src","logo","height","alt","MainTitle","BetaTag","RightAlign","Select","onChange","disabled","style","width","faGithub","fontSize","faDiscord","faTwitter","Container","theme","other","pageLeftMargin","Title","div","Group","GlobalContext","useGlobalContext","TIPS","getTip","seed","Math","floor","Date","getTime","rng","seedrandom","index","length","GlobalContextProvider","useLocalStorage","defaultValue","random","toString","padStart","engineerId","tip","setTip","refreshTip","ficsitTip","serializeJSON","stringify","deserializeJSON","useSessionStorage","getInitialValueInEffect","deserialize","serialize","setValue","setSessionStorageValue","val","Function","setItem","dispatchEvent","CustomEvent","detail","useWindowEvent","event","storageArea","newValue","GraphError","msg","helpText","EPSILON","MAXIMIZE_WEIGHT","RATE_TARGET_KEY","NODE_TYPE","POINTS_ITEM_KEY","ProductionSolver","options","globalWeights","inputs","rateTargets","maximizeTargets","hasPointsTarget","allowedRecipes","allowedItems","scale","this","Object","entries","forEach","recipeKey","recipeInfo","recipes","ingredients","i","itemClass","products","p","resources","Number","weightingOptions","power","complexity","buildings","validateNumber","maxGlobalWeight","max","inputResources","item","itemKey","amount","unlimited","Infinity","weight","type","maxResourceWeight","values","map","inputItems","allowHandGatheredItems","keys","handGatheredItems","perMinTargets","recipeTargets","productionItems","isPoints","mode","recipe","existingTarget","find","t","priority","push","perMinute","sort","b","num","isNaN","timestamp","performance","now","loadGLPK","glpk","productionSolverPass","productionSolution","productionGraph","generateProductionGraph","remainingInputs","inputKey","input","inputNode","nodes","n","usedAmount","multiplier","diff","solution","report","generateProductionReport","computeTime","itemInfo","items","isFicsmas","sinkPoints","targetKey","model","name","objective","direction","GLP_MIN","vars","subjectTo","binaries","doPoints","pointsVars","buildingInfo","producedIn","powerScore","buildingsScore","resourceScore","ingredient","inputInfo","coef","bnds","GLP_LO","ub","lb","pointCoef","product","getItemPoints","intrinsicPoints","targetInfo","GLP_UP","NaN","v","existingVar","ov","binKey","binVars","usedInRecipes","producedFromRecipes","sqrt","outputInfo","solve","msglev","GLP_MSG_OFF","tmlim","time","GLP_OPT","GLP_FEAS","itemProductionTotals","graph","edges","producedBy","usedBy","id","nanoid","productionTotals","j","nextDemand","usageInfo","usageNode","productionInfo","productionNode","outputRecipe","recipeAmount","itemNode","from","to","productionRate","nodeType","pointsProduced","powerUsageEstimate","production","extraction","generators","total","resourceEfficiencyScore","totalBuildArea","estimatedFoundations","buildingsUsed","totalMaterialCost","node","numExtractors","ceil","count","materialCost","buildCost","quantity","buildingKey","area","SEP2","getItemBySlug","slug","itemEntry","getModeBySlug","recipeEntry","getDefaultProductionItem","getDefaultInputItem","ORDERED_RESOURCES","getInitialInputResources","maxExtraction","relativeValue","aIndex","findIndex","r","bIndex","getInitialAllowedRecipes","recipeMap","isAlternate","getInitialState","reducer","state","action","newProductionItems","filter","newItem","nextPriority","newInputItems","newInputResources","active","newWeightingOptions","newAllowedRecipes","newState","config","resourceOptions","stateStr","substring","fields","split","allowedRecipesBits","BigInt","parseInt","productionItemsStrings","str","inputItemsStrings","inputResourcesStrings","weightingOptionsStrings","decodeState_v1_U5","decodeState_v2_U5","decodeState_v3_U5","decodeState_LEGACY","encoding","ProductionContext","useProductionContext","_setCalculating","_","debounce","setCalculating","leading","trailing","_handleCalculateFactory","setSolverResults","solver","exec","results","prevState","log","ProductionProvider","triggerInitialize","useReducer","dispatch","solverResults","calculating","autoCalculate","setAutoCalculate","autoCalculateBool","postSharedFactory","body","handleCalculateFactory","handleSetAutoCalculate","checked","handleGenerateShareLink","shareLink","link","protocol","host","copyToClipboard","calculate","generateShareLink","Card","Paper","colors","primary","DrawerContext","DrawerProvider","rootNode","setRootNode","useMantineTheme","DrawerRoot","topOffset","headerHeight","drawerZIndex","Portal","forwardRef","createRoot","createElement","append","remove","useLayoutEffect","createPortal","Drawer","open","onToggle","fullyClosed","setFullyClosed","tooltipDismissed","setTooltipDismissed","useDrawerContext","showTooltip","DrawerDimmer","onClick","DrawerContainer","onTransitionEnd","DrawerToggle","ToggleLabel","ToggleLabelText","ToggleLabelIcon","Tooltip","TooltipText","TooltipConfirmContainer","TooltipConfirm","stopPropagation","DrawerContent","className","$fullyClosed","drawerWidth","background","UnstyledButton","white","span","info","Text","Section","SectionDescription","TrashButton","Button","color","padding","flex","size","baseModeOptions","priorityOptions","Array","fill","reverse","ProductionTab","itemOptions","opts","unshift","order","modeOptions","selectedItem","io","ItemContainer","Row","placeholder","clearable","searchable","toLowerCase","includes","position","top","TextInput","min","step","currentTarget","Divider","marginTop","marginBottom","LabelWithTooltip","tooltip","Label","withArrow","wrapLines","arrowSize","InputsTab","Checkbox","grow","renderWeightInputs","fontWeight","cleanAltNameRegex","RecipesTab","searchValue","setSearchValue","baseR","altR","baseRecipes","altRecipes","renderRecipeList","recipeList","component","List","Item","renderedBaseRecipes","renderedAltRecipes","renderRecipeOptions","alternates","filteredRecipes","filteredRecipeKeys","listStyleType","spacing","Grid","Col","VDivider","PlannerOptions","popoverOpened","setPopoverOpened","prevShareLink","navigator","clipboard","writeText","paddingTop","marginRight","Switch","Popover","opened","onClose","styles","root","inner","readOnly","Space","Tabs","variant","Tab","TabContainer","defaultFont","baseSat","baseLight","selectSat","selectLight","graphColors","resource","base","selected","handGathered","sideProduct","finalProduct","nuclear","edge","line","incoming","outgoing","primaryColor","fontFamily","radius","xs","sm","md","lg","xl","headings","sizes","h1","lineHeight","h2","h3","h4","h5","h6","tooltipZIndex","scrollbarTrackColor","scrollbarThumbColor","AppShell","minHeight","borderRadius","hovered","cursor","borderWidth","borderColor","horizontal","borderTopColor","opacity","backgroundColor","tabLabel","tabIcon","tabActive","borderBottomWidth","borderBottomLeftRadius","borderBottomRightRadius","border","arrow","borderBottom","borderRight","truncateFloat","places","toFixed","GraphTooltip","currentNode","zIndex","pointerEvents","primaryProduct","totalBuildings","clockPercentage","itemsPerMinPerBuilding","TooltipTitle","TooltipDivider","withPadding","renderRecipeInfo","renderWaterExtractorInfo","baseNumExtractors","Table","renderOilExtractorInfo","baseNumMiners","renderMinerInfo","renderInner","table","Cytoscape","use","popper","klay","warnings","layout","edgeRouting","nodePlacement","edgeSpacingFactor","inLayerSpacingFactor","thoroughness","stylesheet","selector","NODE_COLOR_CLASS","getNodeLabel","amountText","getNodeClasses","classes","getEdgeLabel","_resizeListener","graphRef","bounds","getBoundingClientRect","innerHeight","ProductionGraphTab","doFirstRender","setDoFirstRender","cyRef","popupRef","popperRef","popupNode","setPopupNode","resultsGraph","graphError","isLoading","deactivatePopper","cy","getElementById","nodeId","off","destroy","resizeListener","addEventListener","removeEventListener","graphProps","elements","group","source","GraphContainer","instance","Center","Loader","boxSelectionEnabled","wheelSensitivity","maxZoom","minZoom","overflow","on","addClass","outgoers","incomers","removeClass","content","placement","update","activatePopper","gap","maxWidth","formatFloat","toLocaleString","maximumFractionDigits","ReportTab","ReportContainer","SDivider","SmallerTitle","abs","paddingBottom","Count","ListWithLine","ItemLabel","justifyContent","tabSx","minWidth","PlannerResults","sx","paddingLeft","Factory","drawerOpen","setDrawerOpen","ProductionPlanner","globalCtx","gdCtx","LoadingOverlay","$bgImage","bgImage","initial","animate","exit","transition","duration","motion","PaypalButton","ExternalLink","ErrorBoundary","hasError","React","Component","Main","header","SHeader","MainContainer","Footer","FooterContent","Header","GlobalStylesheet","createGlobalStyle","btoa","App","MantineProvider","ThemeTransfer","mergedTheme","ReactDOM","render"],"mappings":"oVAAe,MAA0B,+D,gBCkB1BA,EATI,SAACC,GAClB,IAAQC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KACd,OACE,cAACC,EAAD,CAASF,KAAMA,EAAMG,OAAO,SAASC,IAAI,sBAAzC,SACGH,GAAQ,QAOTC,EAAeG,YAAOC,KAAV,0EAAGD,CAAH,+FClBLE,EADQ,KAIRC,EAAoB,UAEpBC,EAAuB,CAClC,CAAEC,MAPiB,KAOHC,MAAO,2BACvB,CAAED,MATiB,KASHC,MAAO,sB,gDCNnBC,E,OAAYC,EAAMC,OAAO,CAC7BC,QAASC,wDACTC,aAAc,SAGVC,EAAiB,qBACvB,SAASC,EAASC,EAAaC,GAC7B,IAAMC,EAAU,eAAQD,GAmBxB,MAAO,CAAEE,UAlBSH,EAAII,QAAQN,GAAgB,SAACO,EAAOC,GACpD,IAAMhB,EAAQW,EAAKK,GACnB,MAAqB,kBAAVhB,UACFY,EAAWI,GACXhB,GAEY,kBAAVA,UACFY,EAAWI,GACXC,OAAOjB,UAEFkB,IAAVlB,EACFmB,QAAQC,MAAR,kCAAyCV,EAAzC,sDAA0FK,EAA1F,MAEAI,QAAQC,MAAR,kCAAyCV,EAAzC,6CAAiFK,EAAjF,2BAEKA,MAGWH,cAGf,SAAeS,EAAtB,oC,4CAAO,WAAmBX,EAAaC,GAAhC,mBAAAW,EAAA,+DAC6Bb,EAASC,EAAKC,GAAQ,IAAhDE,EADH,EACGA,UAAWD,EADd,EACcA,WADd,kBAEEV,EAAUqB,QAAQ,CACvBC,OAAQ,MACRd,IAAKG,EACLY,OAAQb,KALL,4C,sBASA,SAAec,EAAtB,oC,4CAAO,WAAoBhB,EAAaC,GAAjC,mBAAAW,EAAA,+DAC6Bb,EAASC,EAAKC,GAAQ,IAAhDE,EADH,EACGA,UAAWD,EADd,EACcA,WADd,kBAEEV,EAAUqB,QAAQ,CACvBC,OAAQ,OACRd,IAAKG,EACLF,KAAMC,KALH,4C,sBCvCA,SAASe,EAAe3B,GAC7B,IAAM4B,EAAMC,mBAIZ,OAHAC,qBAAU,WACRF,EAAIG,QAAU/B,IACb,CAACA,IACG4B,EAAIG,QCHN,SAASC,EAAmGC,GACjH,MAAwBC,mBAAqB,MAA7C,mBAAOvB,EAAP,KAAawB,EAAb,KACA,EAA0BD,mBAA0B,MAApD,mBAAOd,EAAP,KAAcgB,EAAd,KACA,EAA8BF,oBAAkB,GAAhD,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAAcZ,EAAYU,GAE1BG,EAAiBC,sBAAW,uCAAC,WAAOC,GAAP,iBAAApB,EAAA,6DACjCgB,GAAW,GADsB,kBAGVL,EAAUS,GAHA,OAGzBC,EAHyB,OAI/BR,EAAQQ,GACRP,EAAS,MALsB,gDAOzBQ,EAAqB,CACzBC,OAAQ,KAAEA,QAAU,EACpBC,QAAS,KAAEA,SAAW,iBAExBX,EAAQ,MACRC,EAASQ,GAZsB,yBAc/BN,GAAW,GAdoB,4EAAD,sDAiB/B,IAUH,OARYS,mBAAQ,iBAAO,CACzBpC,OACAS,QACAiB,UACAW,oBAAqBX,KAAaE,EAClChB,QAASiB,KACP,CAAC7B,EAAMS,EAAOiB,EAASE,EAAaC,ICPnC,IAAMS,EAAkBC,wBAA0C,MAKlE,SAASC,IACd,IAAMC,EAAMC,qBAAWJ,GACvB,IAAKG,EACH,MAAM,IAAIE,MAAM,2BAElB,OAAOF,EATTH,EAAgBM,YAAc,kBAevB,IAAMC,EAAmB,SAAC,GAA6B,IC1CjCxD,ED0CMyD,EAA0B,EAA1BA,SACjC,EAAgCvB,mBAA0B,MAA1D,mBAAOwB,EAAP,KAAiBC,EAAjB,KACA,EAAsCzB,mBAAS,IAA/C,mBAAO0B,EAAP,KAAoBC,EAApB,KACA,EAAsC3B,mBAAoC,MAA1E,mBAAO4B,EAAP,KAAoBC,EAApB,KACA,EAA8B7B,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAAcZ,EAAYU,GAChC,EAAsDH,oBAAS,GAA/D,mBAAO8B,EAAP,KAA4BC,EAA5B,KACMjB,EAAqBD,mBAAQ,kBAAOV,GAAWA,IAAYE,IAAa,CAACF,EAASE,IAElF2B,EEtCClC,EAAM,uCAAoD,WAAOU,GAAP,iBAAApB,EAAA,sEAC7CD,EAAI,cAAeqB,GAD0B,cACzDyB,EADyD,OAEzDC,EAAOD,EAAIxD,KAF8C,kBAGxDyD,EAAKzD,MAHmD,2CAApD,uDFwCP0D,EAAYtB,mBAAQ,WACxB,IACIuB,EAAc,GAIlB,OAHIV,IACFU,EAAW,WAAOV,EAAP,OAENU,EALM,gCAMZ,CAACV,IC5DuB5D,ED8DdqE,EC7DbvC,qBAAU,WACRyC,SAASC,MAAQxE,IAChB,CAACA,ID6DJ8B,qBAAU,WACR,GAAIkC,EAAqB,CAAC,IAAD,IACvB1B,GAAW,GACX2B,GAAuB,GACvBN,EAAY,MACZI,EAAe,MAEf,IAAMtC,EAAS,IAAIgD,gBAAgBC,OAAOC,SAASC,QAC7CC,EAAWpD,EAAOJ,IAAIvB,GACtBgF,EAAiBrD,EAAOJ,IAAI,KAC5B0D,EAAc,UAAGL,OAAOM,sBAAV,aAAG,EAAuBC,QAAQ,gBAChDC,EAAY,UAAGR,OAAOM,sBAAV,aAAG,EAAuBC,QAAQ,SAEhDJ,EACFX,EAAc3C,QAAQ,CAAE4D,WAAYN,IAC3BC,EACTZ,EAAc3C,QAAQ,CAAEqC,YJlFX,OImFJmB,GAAkBG,EAC3BhB,EAAc3C,QAAQ,CAAEqC,YAAamB,IAErCb,EAAc3C,QAAQ,CAAEqC,YAAaA,GAAe/D,OAIvD,CAACmE,IAEJlC,qBAAU,WACR,GAAIoC,EAAclB,mBAAoB,CAAC,IAAD,UAC9BU,GAAW,UAAAQ,EAAcvD,YAAd,eAAoByE,YAAa,KAC5CC,GAAgB,UAAAnB,EAAcvD,YAAd,eAAoB2E,iBAAkB,KAEtD7D,EAAS,IAAIgD,gBAAgBC,OAAOC,SAASC,QAC7CC,EAAWpD,EAAOJ,IAAIvB,GACtBgF,EAAiBrD,EAAOJ,IAAI,KAC5B0D,EAAc,UAAGL,OAAOM,sBAAV,aAAG,EAAuBC,QAAQ,gBAClDC,EAAsC,KAC1C,IAAK,IAAD,EACIK,EAAgB,UAAGb,OAAOM,sBAAV,aAAG,EAAuBC,QAAQ,SACpDF,GAAkBQ,IACpBL,EAAeM,KAAKC,MAAMF,IAE5B,MAAOG,GACPvE,QAAQC,MAAMsE,GAGhBhB,OAAOiB,QAAQC,aAAa,KAAM,GAAlC,UAAyClB,OAAOC,SAASkB,WACzD,UAAAnB,OAAOM,sBAAP,SAAuBc,WAAW,gBAClC,UAAApB,OAAOM,sBAAP,SAAuBc,WAAW,UAElC,OAAIT,QAAJ,IAAIA,OAAJ,EAAIA,EAAezB,aACjBC,EAAewB,EAAczB,aAE7BC,EADSiB,EJrHI,KIuHJC,GAAkBG,EACZH,EAEAnB,GAAe/D,GAGhC8D,EAAYD,GACZK,EAAe,CACbsB,gBACAR,WACAC,iBACAI,iBAEF5C,GAAW,MAGZ,CAAC4B,IAEJ,IAAM6B,EAAuBtD,uBAAY,SAACuD,GACV,IAAD,IAAzBA,IAAYpC,IACdC,EAAemC,GACf/B,GAAuB,GACvB,UAAAS,OAAOM,sBAAP,SAAuBc,WAAW,gBAClC,UAAApB,OAAOM,sBAAP,SAAuBc,WAAW,YAEnC,CAAClC,IAEEqC,EAAWlD,mBAAQ,WACvB,MAAO,CACLW,WACAI,cACAzB,UACAW,qBACAY,cACAC,eAAgBkC,KAEjB,CAAC/C,EAAoBU,EAAUE,EAAamC,EAAsBjC,EAAazB,IAElF,OACE,cAACY,EAAgBiD,SAAjB,CAA0BlG,MAAOiG,EAAjC,SACGxC,KG5HQ0C,EAzBI,WACjB,IAAM/C,EAAMD,IAEZ,OACE,eAACiD,EAAD,CAAiBC,OAAK,EAAtB,UACE,qBAAKC,IAAKC,EAAMC,OAAQ,GAAIC,IAAI,sBAChC,cAACC,EAAD,4CACA,cAACC,EAAD,qBACA,eAACC,EAAD,WACE,cAACC,EAAA,EAAD,CACE,aAAW,eACXlG,KAAMZ,EACNC,MAAOoD,EAAIQ,YACXkD,SAAU,SAAC9G,GAAYoD,EAAIS,eAAe7D,GAASH,IACnDkH,SAAU3D,EAAIf,QACd2E,MAAO,CAAEC,MAAO,WAElB,cAAC,EAAD,CAAY3H,KAAK,8DAA8DC,KAAM,cAAC,IAAD,CAAiBA,KAAM2H,IAAUC,SAAU,OAChI,cAAC,EAAD,CAAY7H,KAAK,gCAAgCC,KAAM,cAAC,IAAD,CAAiBA,KAAM6H,IAAWD,SAAU,OACnG,cAAC,EAAD,CAAY7H,KAAK,mCAAmCC,KAAM,cAAC,IAAD,CAAiBA,KAAM8H,IAAWF,SAAU,cAQxGf,EAAkBzG,YAAO2H,KAAV,iFAAG3H,CAAH,+CAEJ,qBAAG4H,MAAkBC,MAAMC,kBAItCf,EAAY/G,YAAO+H,KAAV,2EAAG/H,CAAH,oIAUTgH,EAAUhH,IAAOgI,IAAV,yEAAGhI,CAAH,+HAUPiH,EAAajH,YAAOiI,KAAV,4EAAGjI,CAAH,sD,kCC/DD,MAA0B,sC,8BCc5BkI,GAAgB3E,wBAAwC,MAK9D,SAAS4E,KACd,IAAM1E,EAAMC,qBAAWwE,IACvB,IAAKzE,EACH,MAAM,IAAIE,MAAM,yBAElB,OAAOF,EATTyE,GAActE,YAAc,gBAa5B,IACMwE,GAAO,CACX,wBACA,oBACA,0BACA,8BACA,yBACA,sBACA,0BACA,8BACA,yBACA,6BACA,8BACA,iCACA,wDACA,YAGF,SAASC,KACP,IAAMC,EAAOC,KAAKC,OAAM,IAAIC,MAAOC,UAAX,MAClBC,EAAMC,KAAWtH,OAAOgH,IACxBO,EAAQN,KAAKC,MAAMG,IAAQP,GAAKU,QACtC,MAAM,eAAN,OAAsBD,EAAtB,aAAgCT,GAAKS,IAUhC,IAAME,GAAwB,SAAC,GAA6B,IAA3BjF,EAA0B,EAA1BA,SACtC,EAAqBkF,YAAwB,CAAE3H,IAAK,cAAe4H,aAP5DV,KAAKC,MAAsB,IAAhBD,KAAKW,UAAgBC,WAAWC,SAAS,EAAG,OAOvDC,EAAP,oBACA,EAAsB9G,mBAAS8F,MAA/B,mBAAOiB,EAAP,KAAYC,EAAZ,KAEMC,EAAa1G,uBAAY,WAC7B,IAAMwG,EAAMjB,KACZkB,EAAOD,KACN,IAEGhD,EAAWlD,mBAAQ,WACvB,MAAO,CACLqG,UAAWH,EACXD,aACAG,gBAED,CAACH,EAAYG,EAAYF,IAE5B,OACE,cAACpB,GAAc3B,SAAf,CAAwBlG,MAAOiG,EAA/B,SACGxC,K,8BC3DP,SAAS4F,GAAiBrJ,GACxB,IACE,OAAOwF,KAAK8D,UAAUtJ,GACtB,MAAOoB,GACP,MAAM,IAAIkC,MAAM,sEAIpB,SAASiG,GAAgBvJ,GACvB,IACE,OAAOwF,KAAKC,MAAOzF,GACnB,SACA,OAAOA,GAIJ,SAASwJ,GAAT,GAMmB,IAAD,EALvBxI,EAKuB,EALvBA,IAKuB,IAJvB4H,oBAIuB,WAJR1H,EAIQ,MAHvBuI,+BAGuB,aAFvBC,mBAEuB,MAFTH,GAES,MADvBI,iBACuB,MADXN,GACW,EACvB,EAA0BnH,mBACN,qBAAXwC,QAA0B,mBAAoBA,SAAW+E,EAC5DC,EAAW,UAAChF,OAAOM,eAAeC,QAAQjE,UAA/B,aAAuCE,GADtD,OAEM0H,QAFN,IAEMA,IAAgB,IAHxB,mBAAO5I,EAAP,KAAc4J,EAAd,KAMMC,EAAyBpH,uBAC7B,SAACqH,GACKA,aAAeC,SACjBH,GAAS,SAAC7H,GACR,IAAMY,EAASmH,EAAI/H,GAKnB,OAJA2C,OAAOM,eAAegF,QAAQhJ,EAAK2I,EAAUhH,IAC7C+B,OAAOuF,cACL,IAAIC,YAAY,0BAA2B,CAAEC,OAAQ,CAAEnJ,MAAKhB,MAAO8J,EAAI/H,OAElEY,MAGT+B,OAAOM,eAAegF,QAAQhJ,EAAK2I,EAAUG,IAC7CpF,OAAOuF,cACL,IAAIC,YAAY,0BAA2B,CAAEC,OAAQ,CAAEnJ,MAAKhB,MAAO8J,MAErEF,EAASE,MAIb,CAAC9I,IA8BH,OA3BAoJ,aAAe,WAAW,SAACC,GAC8C,IAAD,EAAlEA,EAAMC,cAAgB5F,OAAOM,gBAAkBqF,EAAMrJ,MAAQA,GAC/D4I,EAASF,EAAW,UAACW,EAAME,gBAAP,aAAmBrJ,OAI3CkJ,aAAe,2BAA2B,SAACC,GACrCA,EAAMF,OAAOnJ,MAAQA,GACvB4I,EAASS,EAAMF,OAAOnK,UAI1B8B,qBAAU,gBACaZ,IAAjB0H,QAAwC1H,IAAVlB,GAChC6J,EAAuBjB,KAExB,CAACA,EAAc5I,EAAO6J,IAEzB/H,qBAAU,WACsB,IAAD,EAAzB2H,GACFG,EACEF,EAAW,UAAChF,OAAOM,eAAeC,QAAQjE,UAA/B,aAAuCE,KAAlD,OAAkE0H,QAAlE,IAAkEA,IAAgB,OAIrF,IAEI,MAAW1H,IAAVlB,EAAsB4I,EAAe5I,EAAO6J,GAG/C,I,kFCtGMW,GAAb,oDAEE,WAAYC,EAAaC,GAAoB,IAAD,+BAC1C,cAAMD,IAFRC,cAC4C,EAE1C,EAAKA,SAAWA,EAF0B,EAF9C,uBAAgCpH,QCM1BqH,GAAU,KAEVC,GAAkB,IAGlBC,GAAkB,mBAEXC,GACI,gBADJA,GAEG,eAFHA,GAGC,aAHDA,GAIa,yBAJbA,GAKD,WALCA,GAMH,SAGGC,GAAkB,kBA2FlBC,GAAb,WAWE,WAAmBC,EAAyBvH,GAAqB,IAAD,iCAVxDA,cAUwD,OATxDwH,mBASwD,OARxDC,YAQwD,OAPxDC,iBAOwD,OANxDC,qBAMwD,OALxDC,qBAKwD,OAJxDC,oBAIwD,OAHxDC,kBAGwD,OAFxDC,WAEwD,EAC9DC,KAAKhI,SAAWA,EAEhBgI,KAAKH,eAAiBN,EAAQM,eAC9BG,KAAKF,aAAe,GAEpBG,OAAOC,QAAQF,KAAKH,gBAAgBM,SAAQ,YAA2B,IAAD,mBAAxBC,EAAwB,KACpE,GADoE,KACpE,CACA,IAAMC,EAAa,EAAKrI,SAASsI,QAAQF,GACzCC,EAAWE,YAAYJ,SAAQ,SAACK,GAC9B,EAAKV,aAAaU,EAAEC,YAAa,KAEnCJ,EAAWK,SAASP,SAAQ,SAACQ,GAC3B,EAAKb,aAAaa,EAAEF,YAAa,SAIrCT,KAAKR,cAAgB,CACnBoB,UAAWC,OAAOtB,EAAQuB,iBAAiBF,WAC3CG,MAAOF,OAAOtB,EAAQuB,iBAAiBC,OACvCC,WAAYH,OAAOtB,EAAQuB,iBAAiBE,YAC5CC,UAAWJ,OAAOtB,EAAQuB,iBAAiBG,YAG7CjB,KAAKkB,eAAelB,KAAKR,cAAcoB,WACvCZ,KAAKkB,eAAelB,KAAKR,cAAcuB,OACvCf,KAAKkB,eAAelB,KAAKR,cAAcwB,YACvChB,KAAKkB,eAAelB,KAAKR,cAAcyB,WAEvC,IAAME,EAAkB3E,KAAK4E,IAC3BpB,KAAKR,cAAcoB,UACnBZ,KAAKR,cAAcuB,MACnBf,KAAKR,cAAcwB,WACnBhB,KAAKR,cAAcyB,WAGrBjB,KAAKR,cAAcoB,UAAaZ,KAAKR,cAAcoB,UAAYO,EAzJvC,KA0JxBnB,KAAKR,cAAcuB,MAASf,KAAKR,cAAcuB,MAAQI,EACvDnB,KAAKR,cAAcwB,WAAqBhB,KAAKR,cAAcwB,WAAaG,EAAxC,IAChCnB,KAAKR,cAAcyB,UAAajB,KAAKR,cAAcyB,UAAYE,EAE/DnB,KAAKP,OAAS,GAEdF,EAAQ8B,eAAelB,SAAQ,SAACmB,GAE9B,GADqB,EAAKtJ,SAAS4I,UAAUU,EAAKC,SAClD,CACA,IAAMC,EAASF,EAAKG,UAAYC,IAAWb,OAAOS,EAAKhN,OAEvD,GADA,EAAK4M,eAAeM,GACfA,EAAL,CACA,IAAMG,EAASd,OAAOS,EAAKK,QAC3B,EAAKT,eAAeS,GACpB,EAAKlC,OAAO6B,EAAKC,SAAW,CAC1BC,SACAG,SACAC,KAAMxC,SAIV,IAAMyC,EAAoBrF,KAAK4E,IAAL,MAAA5E,KAAI,aAAQyD,OAAO6B,OAAO9B,KAAKP,QAAQsC,KAAI,SAACvB,GAAD,OAAOA,EAAEmB,YAC9E1B,OAAO6B,OAAO9B,KAAKP,QAAQU,SAAQ,SAACK,GAAQA,EAAEmB,QAAUE,KAExDtC,EAAQyC,WAAW7B,SAAQ,SAACmB,GAC1B,GAAKA,EAAKC,QAAV,CACA,IAAMC,EAASF,EAAKG,UAAYC,IAAWb,OAAOS,EAAKhN,OACvD,EAAK4M,eAAeM,GACfA,IACA,EAAK/B,OAAO6B,EAAKC,SAOpB,EAAK9B,OAAO6B,EAAKC,SAASC,QAAUA,EANpC,EAAK/B,OAAO6B,EAAKC,SAAW,CAC1BC,SACAG,OAAQ,EACRC,KAAMxC,SAORG,EAAQ0C,wBACVhC,OAAOiC,KAAKlC,KAAKhI,SAASmK,mBAAmBhC,SAAQ,SAACmB,GACpD,EAAK7B,OAAO6B,GAAQ,CAClBE,OAAQE,IACRC,OAAQ,IACRC,KAAMxC,OAKZY,KAAKP,OAAL,YAA6B,CAC3B+B,OAAQE,IACRC,OAAQ,IACRC,KAAMxC,IAGRY,KAAKN,YAAc,GACnBM,KAAKL,gBAAkB,GACvBK,KAAKJ,iBAAkB,EACvBI,KAAKD,MAAQ,EAEb,IAAMqC,EAA6B,GAC7BC,EAA6B,GAqFnC,GApFA9C,EAAQ+C,gBAAgBnC,SAAQ,SAACmB,GAC/B,GAAKA,EAAKC,QAAV,CACA,IAAMC,EAASX,OAAOS,EAAKhN,OAE3B,GADA,EAAK4M,eAAeM,GACfA,EAAL,CACA,GAAI,EAAK/B,OAAO6B,EAAKC,SAAU,MAAM,IAAIzC,GAAW,gBAAiB,mGACrE,IAAMyD,EAAWjB,EAAKC,UAAYlC,GAIlC,OAHIkD,IACF,EAAK3C,iBAAkB,GAEjB0B,EAAKkB,MACX,IAAK,aACH,EAAKzC,OAASyB,EACVY,EAAcd,EAAKC,SACrBa,EAAcd,EAAKC,SAASjN,OAASkN,EAErCY,EAAcd,EAAKC,SAAW,CAC5BjN,MAAOkN,EACPiB,OAAQ,KACRF,YAGJ,MACF,IAAK,WACH,IAAMG,EAAiB,EAAK/C,gBAAgBgD,MAAK,SAACC,GAAD,OAAOA,EAAEtN,MAAQgM,EAAKC,WACnEmB,EACEA,EAAeG,SAAWrB,IAC5BkB,EAAeG,SAAWrB,GAG5B,EAAK7B,gBAAgBmD,KAAK,CACxBxN,IAAKgM,EAAKC,QACVsB,SAAUrB,IAGd,MACF,QACE,IAAMpB,EAAYkB,EAAKkB,KACjBnC,EAAa,EAAKrI,SAASsI,QAAQF,GACzC,IAAIC,EAyBF,MAAM,IAAIvB,GAAW,gCAAiC,uEAxBtD,IAAK,EAAKe,eAAeO,GACvB,MAAM,IAAItB,GAAW,gCAAiC,yEAExD,IAAM/K,EAASsM,EAAWK,SAASiC,MAAK,SAAChC,GAAD,OAAOA,EAAEF,YAAca,EAAKC,WACpE,EAAKxB,OAAShM,EAAOgP,UAAYvB,EAC7BY,EAAcd,EAAKC,SACrBa,EAAcd,EAAKC,SAASjN,OAASP,EAAOgP,UAAYvB,EAExDY,EAAcd,EAAKC,SAAW,CAC5BjN,MAAOP,EAAOgP,UAAYvB,EAC1BiB,OAAQ,KACRF,UAAU,GAGVF,EAAcjC,GAChBiC,EAAcjC,GAAW9L,OAASkN,EAElCa,EAAcjC,GAAa,CACzB9L,MAAOkN,EACPiB,OAAQrC,EACRmC,UAAU,SASH,IAAfvC,KAAKD,QACPC,KAAKD,MAAQ,GAGfC,KAAKL,gBACFqD,MAAK,SAACpN,EAAGqN,GACR,GAAIrN,EAAEiN,SAAWI,EAAEJ,SAAU,OAAQ,EACrC,GAAIjN,EAAEiN,SAAWI,EAAEJ,SAAU,OAAO,EACpC,MAAM,IAAI/D,GAAW,kCAAmC,qFAG5DkB,KAAKN,YAAL,2BACK0C,GACAC,GAEwC,IAAzCpC,OAAOiC,KAAKlC,KAAKN,aAAa3C,QAAgD,IAAhCiD,KAAKL,gBAAgB5C,OACrE,MAAM,IAAI+B,GAAW,iBAAkB,0CApM7C,mDAwME,SAAuBoE,GACrB,GAAIrC,OAAOsC,MAAMD,GACf,MAAM,IAAIpE,GAAW,8BAA+B,uCAC/C,GAAIoE,EAAM,EACf,MAAM,IAAIpE,GAAW,iCAAkC,yCA5M7D,yDAgNE,6HACQsE,EAAYC,YAAYC,MADhC,kBAGuBC,eAHvB,cAGUC,EAHV,gBAIqCxD,KAAKyD,qBAAqBtE,GAAiBa,KAAKP,OAAQ+D,GAJ7F,OAIUE,EAJV,OAKQC,EAAkB3D,KAAK4D,wBAAwBF,GALvD,eAOyB1D,KAAKL,iBAP9B,2DASM,IAFS5L,EAPf,QAQY8P,EAA0B,GARtC,aASW,0BAAOC,EAAP,KAAiBC,EAAjB,KACGC,EAAY/D,OAAO6B,OAAO6B,EAAgBM,OAAOtB,MAAK,SAACuB,GAAD,OAAOA,EAAE5O,MAAQwO,KACzEK,EAAa,EACbH,IACFG,EAAaH,EAAUI,YAEzB,IAAMC,EAAON,EAAMvC,OAAS2C,EACxBE,EAAOpF,KACT4E,EAAgBC,GAAhB,2BACKC,GADL,IAEEvC,OAAQ6C,MAVd,MAAgCpE,OAAOC,QAAQF,KAAKP,QAApD,eAA8D,IATpE,iBAuB6BO,KAAKyD,qBAAqB1P,EAAOuB,IAAKuO,EAAiBL,GAvBpF,QAwBM,IADMc,EAvBZ,OAwBM,MAAgCrE,OAAOC,QAAQoE,GAA/C,eAA2D,EAAD,oBAA9ChP,EAA8C,KAAzC8O,EAAyC,KACpDV,EAAmBpO,GACrBoO,EAAmBpO,IAAQ8O,EAE3BV,EAAmBpO,GAAO8O,EAG9BT,EAAkB3D,KAAK4D,wBAAwBF,GA/BrD,oJAkCsD,IAA9CzD,OAAOiC,KAAKyB,EAAgBM,OAAOlH,OAlC3C,uBAmCY,IAAI+B,GAAW,oBAAqB,6HAnChD,eAqCUyF,EAASvE,KAAKwE,yBAAyBb,GArCjD,kBAuCW,CACLA,kBACAY,SACAnB,YACAqB,YAAapB,YAAYC,MAAQF,EACjC1N,MAAO,OA5Cb,2DA+CW,CACLiO,gBAAiB,KACjBY,OAAQ,KACRnB,YACAqB,YAAapB,YAAYC,MAAQF,EACjC1N,MAAM,EAAD,KApDX,wEAhNF,iFAyQE,SAAsB6L,GACpB,IAAMmD,EAAW1E,KAAKhI,SAAS2M,MAAMpD,GACrC,OAAOmD,EAASE,UAAY,EAAIF,EAASG,aA3Q7C,yEA8QE,WAAmCC,EAAmBjB,EAAyBL,GAA/E,0JACQuB,EAAY,CAChBC,KAAM,aACNC,UAAW,CACTD,KAAM,QACNE,UAAW1B,EAAK2B,QAChBC,KAAM,IAERC,UAAW,GACXC,SAAU,IAGNC,EAAYT,IAAc3F,IAAmBa,KAAKN,YAAL,iBAAsCoF,IAAczF,GACjGmG,EAAoB,GAb5B,MAewCvF,OAAOC,QAAQF,KAAKhI,SAASsI,SAfrE,kEAecF,EAfd,KAeyBC,EAfzB,KAgBSL,KAAKH,eAAeO,GAhB7B,sDAiBUqF,EAAezF,KAAKhI,SAASiJ,UAAUZ,EAAWqF,YAClDC,EAAaF,EAAa1E,MAAQ,EAAI0E,EAAa1E,MAAQf,KAAKR,cAAcuB,MAAQ,EACtF6E,EAAiB5F,KAAKR,cAAcyB,UACtC4E,EAAgB,EApBxB,eAsB6BxF,EAAWE,aAtBxC,IAsBI,2BAAWuF,EAAsC,SACzCC,EAAY/F,KAAKP,OAAOqG,EAAWrF,cAEvCoF,GAAiBE,EAAUpE,OAASmE,EAAW/C,UAAY/C,KAAKR,cAAcoB,WAzBtF,8BA8CI,GAhBAmE,EAAME,UAAUG,KAAKtC,KAAK,CACxBkC,KAAM5E,EACN4F,KAAML,EAAaE,EAAgBD,IAIjCd,IAAc3F,IACZa,KAAKN,YAAYU,IACnB2E,EAAMM,UAAUvC,KAAK,CACnBkC,KAAK,GAAD,OAAK5E,EAAL,sBACJgF,KAAM,CAAC,CAAEJ,KAAM5E,EAAW4F,KAAM,IAChCC,KAAM,CAAErE,KAAM4B,EAAK0C,OAAQC,GAAI,EAAGC,GAAIpG,KAAKN,YAAYU,GAAW9L,SAKpEiR,EAAU,CACRc,EAAY,EADJ,eAEUhG,EAAWK,UAFrB,IAEZ,2BAAW4F,EAAgC,QACpCtG,KAAKP,OAAO6G,EAAQ7F,YAAcT,KAAKP,OAAO6G,EAAQ7F,WAAWmB,OAASxC,KAC7EiH,GAAaC,EAAQvD,UAAY/C,KAAKuG,cAAcD,EAAQ7F,WAAa,KAJjE,6CAOaJ,EAAWE,aAPxB,IAOZ,2BAAWuF,EAAsC,QAC1C9F,KAAKP,OAAOqG,EAAWrF,YAAcT,KAAKP,OAAOqG,EAAWrF,WAAWmB,OAASxC,KACnFiH,GAAaP,EAAW/C,UAAY/C,KAAKuG,cAAcT,EAAWrF,WAAa,KATvE,8BAYZ+E,EAAW1C,KAAK,CAAEkC,KAAM5E,EAAW4F,KAAMK,IA1D/C,mCA+DE,GAAId,EAAU,CAEZ,IADIiB,EAAkB,EACtB,MAAmCvG,OAAOC,QAAQ2D,GAAlD,eAAqE,EAAD,oBAAxDtC,EAAwD,MAA/CwE,EAA+C,MACpDnE,OAASxC,KACrBoH,GAAmBxG,KAAKuG,cAAchF,GAAWwE,EAAUvE,QAG/D,GAAIsD,IAAc3F,GAAiB,CACjC,UAAoCc,OAAOC,QAAQF,KAAKN,aAAxD,eAAuE,EAAD,oBAA1D6B,EAA0D,KAAjDkF,EAAiD,KAChElF,IAAYlC,KACdmH,GAAmBxG,KAAKuG,cAAchF,GAAWkF,EAAWnS,OAGhEyQ,EAAMM,UAAUvC,KAAK,CACnBkC,KAAM,iCACNI,KAAMI,EACNS,KAAM,CAAErE,KAAM4B,EAAKkD,OAAQP,IAAKnG,KAAKN,YAAL,gBAAkCpL,MAAQkS,EAAiBJ,GAAIO,YAExF7B,IAAczF,IACvBmG,EAAWrF,SAAQ,SAACyG,GAClB,IAAMC,EAAc9B,EAAME,UAAUG,KAAKzC,MAAK,SAACmE,GAAD,OAAQA,EAAG9B,OAAS4B,EAAE5B,QAChE6B,EACFA,EAAYb,MAAQY,EAAEZ,KAAO9G,GAE7B6F,EAAME,UAAUG,KAAKtC,KAAK,CACxBkC,KAAM4B,EAAE5B,KACRgB,KAAMY,EAAEZ,KAAO9G,QAzF3B,aAiGO,0BAAOqC,EAAP,KAAgBmD,EAAhB,KACH,IAAK,EAAK5E,aAAayB,GAAU,iBACjC,IAnGJ,EAmGU6D,EAAc,GAEd2B,EAAM,UAAMxF,EAAN,QACNyF,EAAiB,GAtG3B,eAwG4BtC,EAASuC,eAxGrC,IAwGI,2BAAgD,CAAC,IAAtC7G,EAAqC,QAC9C,GAAK,EAAKP,eAAeO,GAAzB,CACA,IACMrM,EADa,EAAKiE,SAASsI,QAAQF,GACfG,YAAYoC,MAAK,SAACnC,GAAD,OAAOA,EAAEC,YAAcc,KAClE6D,EAAKtC,KAAK,CAAEkC,KAAM5E,EAAW4F,KAAMjS,EAAOgP,YAErC,EAAK/K,SAASmK,kBAAkBZ,IACnCyF,EAAQlE,KAAK,CAAEkC,KAAM5E,EAAW4F,MAAO,MA/G/C,mDAmH4BtB,EAASwC,qBAnHrC,yBAmHe9G,EAnHf,QAoHM,IAAK,EAAKP,eAAeO,GAAY,iBACrC,IACMrM,EADa,EAAKiE,SAASsI,QAAQF,GACfM,SAASiC,MAAK,SAAChC,GAAD,OAAOA,EAAEF,YAAcc,KAEzDsF,EAAczB,EAAKzC,MAAK,SAACiE,GAAD,OAAOA,EAAE5B,OAAS5E,KAC5CyG,EACFA,EAAYb,MAAQjS,EAAOgP,UAE3BqC,EAAKtC,KAAK,CAAEkC,KAAM5E,EAAW4F,MAAOjS,EAAOgP,aAT/C,2BAAsD,IAnH1D,8BA+II,GAfI+B,IAAc3F,IACZ,EAAKK,cAAcwB,WAAa,GAAKgG,EAAQjK,OAAS,IACxDgI,EAAMO,SAAUxC,KAAKiE,GACrBhC,EAAME,UAAUG,KAAKtC,KAAK,CAAEkC,KAAM+B,EAAQf,KAAM,EAAKxG,cAAcwB,aACnE+D,EAAMM,UAAUvC,KAAK,CACnBkC,KAAK,GAAD,OAAK+B,EAAL,eACJ3B,KAAK,CACH,CAAEJ,KAAM+B,EAAQf,KA7fH,IA6f8BxJ,KAAK2K,KAAK,EAAKpH,SADxD,OAECiH,GAELf,KAAM,CAAErE,KAAM4B,EAAK0C,OAAQC,GAAIQ,IAAKP,GAAI,MAK1B,IAAhBhB,EAAKrI,OAAc,iBAEvB,GAAI8G,EAAgBtC,GAAU,CAC5B,IAAMwE,EAAYlC,EAAgBtC,GAC9BwE,EAAUvE,SAAWE,KACvBqD,EAAMM,UAAUvC,KAAK,CACnBkC,KAAK,GAAD,OAAKzD,EAAL,wBACJ6D,OACAa,KAAM,CAAErE,KAAM4B,EAAKkD,OAAQP,GAAIJ,EAAUvE,OAAQ4E,GAAIO,YAKtD,GAAI7B,IAAc3F,IAAmB,EAAKO,YAAY6B,GAAU,CACnE,IAAM6F,EAAa,EAAK1H,YAAY6B,GACpCwD,EAAMM,UAAUvC,KAAK,CACnBkC,KAAK,GAAD,OAAKzD,EAAL,6BACJ6D,OACAa,KAAM,CAAErE,KAAM4B,EAAKkD,OAAQP,IAAKiB,EAAW9S,MAAO8R,GAAIO,YAIjD7B,IAAcvD,GACrBwD,EAAMM,UAAUvC,KAAK,CACnBkC,KAAK,GAAD,OAAKzD,EAAL,6BACJ6D,OACAa,KAAM,CAAErE,KAAM4B,EAAKkD,OAAQP,GAAI,EAAGC,GAAIO,OAGxCvB,EAAKjF,SAAQ,SAACyG,GACZ,IAAMC,EAAc9B,EAAME,UAAUG,KAAKzC,MAAK,SAACmE,GAAD,OAAQA,EAAG9B,OAAS4B,EAAE5B,QAChE6B,EACFA,EAAYb,MAAQY,EAAEZ,KAAO9G,GAE7B6F,EAAME,UAAUG,KAAKtC,KAAK,CACxBkC,KAAM4B,EAAE5B,KACRgB,KAAMY,EAAEZ,KAAO9G,SAOrB6F,EAAMM,UAAUvC,KAAK,CACnBkC,KAAK,GAAD,OAAKzD,EAAL,6BACJ6D,OACAa,KAAM,CAAErE,KAAM4B,EAAKkD,OAAQP,GAAI,EAAGC,GAAIO,QA7L9C,MAiGoC1G,OAAOC,QAAQF,KAAKhI,SAAS2M,OAjGjE,mKAkMyBnB,EAAK6D,MAAMtC,EAAO,CAAEuC,OAAQ9D,EAAK+D,YAAaC,MAvjBtD,IAqXjB,cAkMQlD,EAlMR,QAmMemD,KAxjBE,GAqXjB,uBAoMU,IAAI3I,GAAW,YAAa,8KApMtC,WAsMMwF,EAASrN,OAAOE,SAAWqM,EAAKkE,SAAWpD,EAASrN,OAAOE,SAAWqM,EAAKmE,SAtMjF,oBAuMQ7C,IAAc3F,GAvMtB,uBAwMY,IAAIL,GAAW,cAAe,2HAxM1C,cA0MY,IAAIA,GAAW,wBAAyB,2JA1MpD,eA+MQ7H,EAA6B,GACnCgJ,OAAOC,QAAQoE,EAASrN,OAAOmO,MAAMjF,SAAQ,YAAiB,IAAD,mBAAd7K,EAAc,KAAT8I,EAAS,KACvDA,EAAMa,IACJ,EAAKjH,SAASsI,QAAQhL,KACxB2B,EAAO3B,GAAO8I,MAnNtB,kBAuNSnH,GAvNT,iDA9QF,gGAweE,SAAgCyM,GAO9B,IAPwF,IAAD,OACjFkE,EAA6C,GAC7CC,EAAyB,CAC7B5D,MAAO,GACP6D,MAAO,IAGT,MAAsC7H,OAAOC,QAAQwD,GAArD,eAA0E,CAArE,IAAqE,EAArE,sBAAOtD,EAAP,KAAkBgE,EAAlB,KACG/D,EAAaL,KAAKhI,SAASsI,QAAQF,GAD+B,eAGlDC,EAAWK,UAHuC,IAGxE,2BAA2C,CAAC,IAAjC4F,EAAgC,QACnC9E,EAAS4C,EAAakC,EAAQvD,UAC/B6E,EAAqBtB,EAAQ7F,aAChCmH,EAAqBtB,EAAQ7F,WAAa,CACxCsH,WAAY,GACZC,OAAQ,KAGZJ,EAAqBtB,EAAQ7F,WAAWsH,WAAWjF,KAAK,CAAE1C,YAAWoB,YAXC,mDAc/CnB,EAAWE,aAdoC,IAcxE,2BAAiD,CAAC,IAAvCuF,EAAsC,QACzCtE,EAAS4C,EAAa0B,EAAW/C,UAClC6E,EAAqB9B,EAAWrF,aACnCmH,EAAqB9B,EAAWrF,WAAa,CAC3CsH,WAAY,GACZC,OAAQ,KAGZJ,EAAqB9B,EAAWrF,WAAWuH,OAAOlF,KAAK,CAAE1C,YAAWoB,YAtBE,8BAyBxEqG,EAAM5D,MAAM7D,GAAa,CACvB6H,GAAIC,eACJ5S,IAAK8K,EACLwB,KAAMxC,GACNgF,cAIJ,IAxCuF,iBAwClF,0BAAO7C,EAAP,KAAgB4G,EAAhB,KACKJ,EAAuBI,EAAvBJ,WAAYC,EAAWG,EAAXH,OAChBxH,EAAI,EAAG4H,EAAI,EACfC,EACA,KAAO7H,EAAIwH,EAAOjL,QAAQ,CAIxB,IAHA,IAAMuL,EAAYN,EAAOxH,GACnB+H,EAAYV,EAAM5D,MAAMqE,EAAUlI,WAEjCgI,EAAIL,EAAWhL,QAAQ,CAAC,IAAD,EACtByL,EAAiBT,EAAWK,GAC5BK,EAAiBZ,EAAM5D,MAAMuE,EAAepI,WAE5CsI,EAAY,UAAG,EAAKhJ,YAAY6B,UAApB,aAAG,EAA2BkB,OAChD,GAAIiG,GAAgBA,IAAiBF,EAAepI,UAAW,CAC7D,IAAMgH,EAAa,EAAK1H,YAAY6B,GAE9BxN,EADa,EAAKiE,SAASsI,QAAQoI,GACfhI,SAASiC,MAAK,SAAChC,GAAD,OAAOA,EAAEF,YAAcc,KACzDoH,EAAevB,EAAW9S,MAAQP,EAAOgP,UAC/CyF,EAAehH,QAAUmH,EAEzB,IAAIC,EAAWf,EAAM5D,MAAM1C,GACtBqH,EASHf,EAAM5D,MAAM1C,GAAS6C,YAAcuE,GARnCC,EAAW,CACTX,GAAIC,eACJ5S,IAAKiM,EACLK,KAAMxC,GACNgF,WAAYuE,GAEdd,EAAM5D,MAAM1C,GAAWqH,GAIzBf,EAAMC,MAAMhF,KAAK,CACfxN,IAAKiM,EACLsH,KAAMJ,EAAeR,GACrBa,GAAIF,EAASX,GACbc,eAAgBJ,IAIpB,GAAIH,EAAehH,OAASvC,GAC1BmJ,QADF,CAyBA,GApBIE,EAAU9G,QAAUgH,EAAehH,QACrCqG,EAAMC,MAAMhF,KAAK,CACfxN,IAAKiM,EACLsH,KAAMJ,EAAeR,GACrBa,GAAIP,EAAUN,GACdc,eAAgBT,EAAU9G,SAE5BgH,EAAehH,QAAU8G,EAAU9G,OACnC8G,EAAU9G,OAAS,IAEnBqG,EAAMC,MAAMhF,KAAK,CACfxN,IAAKiM,EACLsH,KAAMJ,EAAeR,GACrBa,GAAIP,EAAUN,GACdc,eAAgBP,EAAehH,SAEjC8G,EAAU9G,QAAUgH,EAAehH,OACnCgH,EAAehH,OAAS,GAGtB8G,EAAU9G,OAASvC,GAAS,CAC9BuB,IACA,SAAS6H,EAEXD,KAEF,MAGF,KAAO5H,EAAIwH,EAAOjL,QAAQ,CACxB,IAAMuL,EAAYN,EAAOxH,GACnB+H,EAAYV,EAAM5D,MAAMqE,EAAUlI,WACxC,GAAIkI,EAAU9G,OAASvC,IAAW,EAAKQ,OAAO8B,GAAU,CACtD,IAAIqH,EAAWf,EAAM5D,MAAM1C,GAC3B,GAAKqH,EAUHA,EAASxE,YAAckE,EAAU9G,WAVpB,CACb,IAAMuE,EAAY,EAAKtG,OAAO8B,GAC9BqH,EAAW,CACTX,GAAIC,eACJ5S,IAAKiM,EACLK,KAAMmE,EAAUnE,KAChBwC,WAAYkE,EAAU9G,QAExBqG,EAAM5D,MAAM1C,GAAWqH,EAIzBf,EAAMC,MAAMhF,KAAK,CACfxN,IAAKiM,EACLsH,KAAMD,EAASX,GACfa,GAAIP,EAAUN,GACdc,eAAgBT,EAAU9G,SAE5B8G,EAAU9G,OAAS,EAErBhB,IAGF,KAAO4H,EAAIL,EAAWhL,QAAQ,CAC5B,IAAMyL,EAAiBT,EAAWK,GAC5BK,EAAiBZ,EAAM5D,MAAMuE,EAAepI,WAClD,GAAIoI,EAAehH,OAASvC,GAAS,CACnC,IAAI2J,EAAWf,EAAM5D,MAAM1C,GAC3B,GAAKqH,EAeHA,EAASxE,YAAcoE,EAAehH,WAfzB,CACb,IAAIwH,EAAW5J,IACX,EAAKM,YAAY6B,IAAY,EAAK5B,gBAAgBgD,MAAK,SAACC,GAAD,OAAOA,EAAEtN,MAAQiM,MAEjE,EAAK3B,iBAAmB,EAAK2G,cAAchF,GAAW,KAD/DyH,EAAW5J,IAIbwJ,EAAW,CACTX,GAAIC,eACJ5S,IAAKiM,EACLK,KAAMoH,EACN5E,WAAYoE,EAAehH,QAE7BqG,EAAM5D,MAAM1C,GAAWqH,EAIzBf,EAAMC,MAAMhF,KAAK,CACfxN,IAAKiM,EACLsH,KAAMJ,EAAeR,GACrBa,GAAIF,EAASX,GACbc,eAAgBP,EAAehH,SAEjCgH,EAAehH,OAAS,EAE1B4G,MApIJ,MAA0CnI,OAAOC,QAAQ0H,GAAzD,eAAiF,IAwIjF,OAAOC,IAxpBX,sCA2pBE,SAAiClE,GAgB/B,IAfA,IAAMY,EAAiB,CACrB0E,eAAgB,EAChBC,mBAAoB,CAClBC,WAAY,EACZC,WAAY,EACZC,WAAY,EACZC,MAAO,GAETC,wBAAyB,EACzBC,eAAgB,EAChBC,qBAAsB,EACtBC,cAAe,GACfC,kBAAmB,IAGrB,MAA0B1J,OAAOC,QAAQyD,EAAgBM,OAAzD,eAAiE,CAA5D,0BAAO3O,EAAP,KAAYsU,EAAZ,KACH,GAAIA,EAAKhI,OAASxC,IAqClB,GAAIwK,EAAKhI,OAASxC,GAChBmF,EAAO0E,gBAAkBW,EAAKxF,WAAapE,KAAKuG,cAAcjR,QACzD,GAAIsU,EAAKhI,OAASxC,GAAoB,CAC3CmF,EAAOgF,yBAA2BK,EAAKxF,WAAapE,KAAKP,OAAOnK,GAAKqM,OACrE,IAAIZ,EAAQ,EACZ,GAAY,iBAARzL,EAAwB,CAC1ByL,EAAQ6I,EAAKxF,WAAa,IAAMpE,KAAKhI,SAASiJ,UAAd,iBAA4CF,MAE5E,IAAM8I,EAAgBrN,KAAKsN,KAAKF,EAAKxF,WAAa,KAClDG,EAAOmF,cAAP,iBAA2C,CACzCK,MAAOF,EACPG,aAAc,IANU,qBAQDhK,KAAKhI,SAASiJ,UAAd,iBAA4CgJ,WAR3C,IAQ1B,2BAAgF,CAAC,IAAtEnE,EAAqE,QACxEtE,EAASqI,EAAgB/D,EAAWoE,SAC1C3F,EAAOmF,cAAP,iBAAyCM,aAAalE,EAAWrF,WAAae,EACzE+C,EAAOoF,kBAAkB7D,EAAWrF,WAGvC8D,EAAOoF,kBAAkB7D,EAAWrF,YAAce,EAFlD+C,EAAOoF,kBAAkB7D,EAAWrF,WAAae,GAZ3B,mCAkBT,qBAARlM,EACTyL,EAAQ6I,EAAKxF,WAAa,IAAMpE,KAAKhI,SAASiJ,UAAd,eAA0CF,MACzD,uBAARzL,IAGTyL,EAAQ6I,EAAKxF,WAAa,IAAMpE,KAAKhI,SAASiJ,UAAd,gBAA2CF,OAE7EwD,EAAO2E,mBAAmBE,YAAcrI,EACxCwD,EAAO2E,mBAAmBI,OAASvI,OApErC,CACE,IACMoJ,EADanK,KAAKhI,SAASsI,QAAQhL,GACVoQ,WACzBD,EAAezF,KAAKhI,SAASiJ,UAAUkJ,GACvCpJ,EAAQ6I,EAAKxF,WAAaqB,EAAa1E,MACzCA,EAAQ,EACVwD,EAAO2E,mBAAmBG,aAAetI,EAEzCwD,EAAO2E,mBAAmBC,YAAcpI,EAE1CwD,EAAO2E,mBAAmBI,OAASvI,EACnCwD,EAAOiF,gBAAkBhN,KAAKsN,KAAKF,EAAKxF,YAAcqB,EAAa2E,KAC9D7F,EAAOmF,cAAcS,GAMxB5F,EAAOmF,cAAcS,GAAaJ,OAASvN,KAAKsN,KAAKF,EAAKxF,YAL1DG,EAAOmF,cAAcS,GAAe,CAClCJ,MAAOvN,KAAKsN,KAAKF,EAAKxF,YACtB4F,aAAc,IAfgB,qBAqBTvE,EAAawE,WArBJ,IAqBlC,2BAAiD,CAAC,IAAvCnE,EAAsC,QACzCtE,EAAShF,KAAKsN,KAAKF,EAAKxF,YAAc0B,EAAWoE,SAClD3F,EAAOmF,cAAcS,GAAaH,aAAalE,EAAWrF,WAG7D8D,EAAOmF,cAAcS,GAAaH,aAAalE,EAAWrF,YAAce,EAFxE+C,EAAOmF,cAAcS,GAAaH,aAAalE,EAAWrF,WAAae,EAIpE+C,EAAOoF,kBAAkB7D,EAAWrF,WAGvC8D,EAAOoF,kBAAkB7D,EAAWrF,YAAce,EAFlD+C,EAAOoF,kBAAkB7D,EAAWrF,WAAae,GA7BnB,gCA0EtC,OAFA+C,EAAOkF,qBAAuBjN,KAAKsN,KAAUvF,EAAOiF,eAAiB,GAA7B,GAEjCjF,MAtvBX,KC3GA,IAIM8F,GAAO,IAEb,SAASC,GAAcC,EAAc5F,GACnC,GAAa,WAAT4F,EACF,OAAOlL,GAET,IAAMmL,EAAYvK,OAAOC,QAAQyE,GAAOhC,MAAK,oDAAsB4H,OAASA,KAC5E,GAAIC,EACF,OAAOA,EAAU,GAEnB,MAAM,IAAI5S,MAAM,qBAGlB,SAAS6S,GAAcF,EAAcjK,GACnC,GAAa,eAATiK,EAAuB,MAAO,aAClC,GAAa,aAATA,EAAqB,MAAO,WAChC,IAAMG,EAAczK,OAAOC,QAAQI,GAASqC,MAAK,oDAA0B4H,OAASA,KACpF,GAAIG,EACF,OAAOA,EAAY,GAErB,MAAM,IAAI9S,MAAM,uBCxBlB,IAIMyS,GAAO,IAEb,SAASC,GAAcC,EAAc5F,GACnC,GAAa,WAAT4F,EACF,OAAOlL,GAET,IAAMmL,EAAYvK,OAAOC,QAAQyE,GAAOhC,MAAK,oDAAsB4H,OAASA,KAC5E,GAAIC,EACF,OAAOA,EAAU,GAEnB,MAAM,IAAI5S,MAAM,qBAGlB,SAAS6S,GAAcF,EAAcjK,GACnC,GAAa,eAATiK,EAAuB,MAAO,aAClC,GAAa,aAATA,EAAqB,MAAO,WAChC,IAAMG,EAAczK,OAAOC,QAAQI,GAASqC,MAAK,oDAA0B4H,OAASA,KACpF,GAAIG,EACF,OAAOA,EAAY,GAErB,MAAM,IAAI9S,MAAM,uBCxBlB,IAIMyS,GAAO,IAEb,SAASC,GAAcC,EAAc5F,GACnC,GAAa,WAAT4F,EACF,OAAOlL,GAET,IAAMmL,EAAYvK,OAAOC,QAAQyE,GAAOhC,MAAK,oDAAsB4H,OAASA,KAC5E,GAAIC,EACF,OAAOA,EAAU,GAEnB,MAAM,IAAI5S,MAAM,qBAGlB,SAAS6S,GAAcF,EAAcjK,GACnC,GAAa,eAATiK,EAAuB,MAAO,aAClC,GAAa,aAATA,EAAqB,MAAO,WAChC,IAAMG,EAAczK,OAAOC,QAAQI,GAASqC,MAAK,oDAA0B4H,OAASA,KACpF,GAAIG,EACF,OAAOA,EAAY,GAErB,MAAM,IAAI9S,MAAM,uBCrBlB,SAAS+S,KACP,MAAQ,CACNrV,IAAK4S,eACL3G,QAAS,GACTiB,KAAM,aACNlO,MAAO,MAIX,SAASsW,KACP,MAAQ,CACNtV,IAAK4S,eACL3G,QAAS,GACTjN,MAAO,KACPqN,OAAQ,IACRF,WAAW,GAIf,IAAMoJ,GAAoB,CACxB,iBACA,mBACA,eACA,cACA,iBACA,mBACA,gBACA,mBACA,oBACA,oBACA,qBACA,gBAGF,SAASC,GAAyBlK,GAChC,OAAOX,OAAOC,QAAQU,GACnBmB,KAAI,YAAkB,IAAD,mBAAfzM,EAAe,KAAVL,EAAU,KAChBX,EAAQ,IACRmN,GAAY,EAMhB,MALY,iBAARnM,EACFmM,GAAY,EAEZnN,EAAQiB,OAAON,EAAK8V,eAEf,CACLzV,IAAKA,EACLiM,QAASjM,EACThB,QACAqN,OAAQpM,OAAON,EAAK+V,eACpBvJ,gBAGHuB,MAAK,SAACpN,EAAGqN,GACR,IAAIgI,EAASJ,GAAkBK,WAAU,SAACC,GAAD,OAAOA,IAAMvV,EAAE2L,YACxC,IAAZ0J,IAAeA,EAASvJ,KAC5B,IAAI0J,EAASP,GAAkBK,WAAU,SAACC,GAAD,OAAOA,IAAMlI,EAAE1B,WAExD,OADgB,IAAZ6J,IAAeA,EAAS1J,KACrBuJ,EAASG,GAAU,EAAI,KAapC,SAASC,GAAyB/K,GAChC,IAAMgL,EAAgC,GAItC,OAHArL,OAAOC,QAAQI,GAASH,SAAQ,YAAkB,IAAD,mBAAf7K,EAAe,KAAVL,EAAU,KAC/CqW,EAAUhW,IAAQL,EAAKsW,eAElBD,EAGF,SAASE,GAAgBxT,GAC9B,MAAO,CACL1C,IAAK4S,eACL5F,gBAAiB,GACjBN,WAAY,GACZX,eAAgByJ,GAAyB9S,EAAS4I,WAClDqB,wBAAwB,EACxBnB,iBAvBK,CACLF,UAAW,OACXG,MAAO,IACPC,WAAY,IACZC,UAAW,KAoBXpB,eAAgBwL,GAAyBrT,EAASsI,UA4B/C,SAASmL,GAAQC,EAAuBC,GAC7C,OAAQA,EAAO/J,MACb,IAAK,gBACH,OAAO4J,GAAgBG,EAAO3T,UAEhC,IAAK,sBACH,IAAM4T,EAAkB,uBACnBF,EAAMpJ,iBADa,CAEtBqI,OAEF,OAAO,2BAAKe,GAAZ,IAAmBpJ,gBAAiBsJ,IAEtC,IAAK,yBACH,IAAMA,EAAqBF,EAAMpJ,gBAC9BuJ,QAAO,SAACrL,GAAD,OAAOA,EAAElL,MAAQqW,EAAOrW,OAClC,OAAO,2BAAKoW,GAAZ,IAAmBpJ,gBAAiBsJ,IAEtC,IAAK,sBACH,IAAMA,EAAqBF,EAAMpJ,gBAC9BP,KAAI,SAACT,GAEF,IAAIwK,EADN,OAAIxK,EAAKhM,MAAQqW,EAAO1W,KAAKK,MAGzBwW,EADgB,eAAdxK,EAAKkB,MAAuC,aAAdlB,EAAKkB,KAC9B,eAAQlB,GAELqJ,MAEJpJ,QAAUoK,EAAO1W,KAAKsM,QACvBuK,GAEFxK,KAEX,OAAO,2BAAKoK,GAAZ,IAAmBpJ,gBAAiBsJ,IAEtC,IAAK,6BACH,IAAMA,EAAqBF,EAAMpJ,gBAC9BP,KAAI,SAACT,GACJ,GAAIA,EAAKhM,MAAQqW,EAAO1W,KAAKK,IAAK,CAChC,IAAMwW,EAAO,eAAQxK,GAErB,OADAwK,EAAQxX,MAAQqX,EAAO1W,KAAKuM,OACrBsK,EAET,OAAOxK,KAEX,OAAO,2BAAKoK,GAAZ,IAAmBpJ,gBAAiBsJ,IAEtC,IAAK,2BACH,IAAMA,EAAqBF,EAAMpJ,gBAC9BP,KAAI,SAACT,GACJ,GAAIA,EAAKhM,MAAQqW,EAAO1W,KAAKK,IAAK,CAChC,IAAMwW,EAAO,eAAQxK,GAwBrB,OAvBAwK,EAAQtJ,KAAOmJ,EAAO1W,KAAKuN,KACvBsJ,EAAQtJ,OAASlB,EAAKkB,OACH,eAAjBsJ,EAAQtJ,KACVsJ,EAAQxX,MAAQ,KACU,aAAjBwX,EAAQtJ,KAAsB,WAEvC,IADA,IAAIuJ,ECnLQ,GDoLLA,GAAgBA,EAAe,GAAG,CAGvC,MADwBL,EAAMpJ,gBAAgBK,MAAK,SAACnC,GAAD,MAAkB,aAAXA,EAAEgC,MAAuBhC,EAAElM,QAAUiB,OAAOwW,MAEpG,MAEFA,IAGAD,EAAQxX,MADNyX,EAAe,EACDxW,OAAOwW,GAEvB,UC/LU,IDkL2B,GAehB,eAAdzK,EAAKkB,MAAuC,aAAdlB,EAAKkB,OAC5CsJ,EAAQxX,MAAQ,MAGbwX,EAET,OAAOxK,KAEX,OAAO,2BAAKoK,GAAZ,IAAmBpJ,gBAAiBsJ,IAEtC,IAAK,iBACH,IAAMI,EAAa,uBACdN,EAAM1J,YADQ,CAEjB4I,OAEF,OAAO,2BAAKc,GAAZ,IAAmB1J,WAAYgK,IAEjC,IAAK,oBACH,IAAMA,EAAgBN,EAAM1J,WACzB6J,QAAO,SAACrL,GAAD,OAAOA,EAAElL,MAAQqW,EAAOrW,OAClC,OAAO,2BAAKoW,GAAZ,IAAmB1J,WAAYgK,IAEjC,IAAK,oBACH,IAAMA,EAAgBN,EAAM1J,WACzBD,KAAI,SAACvB,GAAD,OAAOA,EAAElL,MAAQqW,EAAO1W,KAAKK,IAAMqW,EAAO1W,KAAOuL,KACxD,OAAO,2BAAKkL,GAAZ,IAAmB1J,WAAYgK,IAEjC,IAAK,wBACH,IAAMC,EAAoBP,EAAMrK,eAC7BU,KAAI,SAACvB,GAAD,OAAOA,EAAElL,MAAQqW,EAAO1W,KAAKK,IAAMqW,EAAO1W,KAAOuL,KACxD,OAAO,2BAAKkL,GAAZ,IAAmBrK,eAAgB4K,IAErC,IAAK,8BACH,IAAMA,EAAoBnB,GAAyBa,EAAO3T,SAAS4I,WACnE,OAAO,2BAAK8K,GAAZ,IAAmBrK,eAAgB4K,IAErC,IAAK,qBACH,IAAMA,EAAoBP,EAAMrK,eAC7BU,KAAI,SAAC9M,GAAD,mBAAC,eAAeA,GAAhB,IAAsBX,MAAO,IAAKmN,WAAW,OACpD,OAAO,2BAAKiK,GAAZ,IAAmBrK,eAAgB4K,IAErC,IAAK,gCACH,OAAO,2BAAKP,GAAZ,IAAmBzJ,uBAAwB0J,EAAOO,SAEpD,IAAK,2BACH,IAAMC,EAAmB,eAAQR,EAAO1W,MACxC,OAAO,2BAAKyW,GAAZ,IAAmB5K,iBAAkBqL,IAEvC,IAAK,0BACH,IAAMA,EA3KH,CACLvL,UAAW,OACXG,MAAO,IACPC,WAAY,IACZC,UAAW,KAwKHgL,EAAoBP,EAAMrK,eAC7BU,KAAI,SAACvB,GAAD,mBAAC,eAAYA,GAAb,IAAgBmB,OAAQpM,OAAOoW,EAAO3T,SAAS4I,UAAUJ,EAAEe,SAASyJ,oBAC3E,OAAO,2BAAKU,GAAZ,IAAmB5K,iBAAkBqL,EAAqB9K,eAAgB4K,IAE5E,IAAK,oBACH,IAAMG,EAAiB,eAAQV,EAAM7L,gBAErC,OADAuM,EAAkBT,EAAOrW,KAAOqW,EAAOO,OAChC,2BAAKR,GAAZ,IAAmB7L,eAAgBuM,IAErC,IAAK,0BACH,IAAMA,EAAiB,eAAQV,EAAM7L,gBAIrC,OAHA8L,EAAOrL,QAAQH,SAAQ,SAACC,GACtBgM,EAAkBhM,GAAauL,EAAOO,UAEjC,2BAAKR,GAAZ,IAAmB7L,eAAgBuM,IAErC,IAAK,2BACH,IACE,IAAMC,EAA2Bb,GAAgBG,EAAO3T,UA8BxD,OA7BAqU,EAAS/J,gBAAmBqJ,EAAOW,OAAOhK,gBAA0BP,KAAI,SAACvB,GAAD,mBAAC,eACpEmK,MADmE,IAEtEpJ,QAASf,EAAEe,QACXiB,KAAMhC,EAAEgC,KACRlO,MAAOiB,OAAOiL,EAAElM,YAElB+X,EAASrK,WAAc2J,EAAOW,OAAOtK,WAAqBD,KAAI,SAACvB,GAAD,mBAAC,eAC1DoK,MADyD,IAE5DrJ,QAASf,EAAEe,QACXjN,MAAOiB,OAAOiL,EAAElM,OAChBqN,OAAQpM,OAAOiL,EAAEmB,QACjBF,UAAWjB,EAAEiB,eAEf4K,EAAShL,eAAelB,SAAQ,SAACgL,GAC/B,IAAMoB,EAAmBZ,EAAOW,OAAOjL,eAAyBsB,MAAK,SAACnC,GAAD,OAAO2K,EAAE5J,UAAYf,EAAEe,WAC5F4J,EAAE7W,MAAQiB,OAAOgX,EAAgBjY,OACjC6W,EAAExJ,OAASpM,OAAOgX,EAAgB5K,QAClCwJ,EAAE1J,UAAY8K,EAAgB9K,aAEhC4K,EAASpK,uBAAyB0J,EAAOW,OAAOrK,uBAChDoK,EAASvL,iBAAiBF,UAAYrL,OAAOoW,EAAOW,OAAOxL,iBAAiBF,WAC5EyL,EAASvL,iBAAiBC,MAAQxL,OAAOoW,EAAOW,OAAOxL,iBAAiBC,OACxEsL,EAASvL,iBAAiBE,WAAazL,OAAOoW,EAAOW,OAAOxL,iBAAiBE,YAC7EqL,EAASvL,iBAAiBG,UAAY1L,OAAOoW,EAAOW,OAAOxL,iBAAiBG,WAC3E0K,EAAOW,OAAOzM,eAAyBM,SAAQ,SAAC7K,GACX,MAAhC+W,EAASxM,eAAevK,KAC1B+W,EAASxM,eAAevK,IAAO,MAG5B+W,EACP,MAAOrS,GAEP,OADAvE,QAAQC,MAAMsE,GACPwR,GAAgBG,EAAO3T,UAGlC,IAAK,4BACH,IACE,OAsBR,SAA4BwU,EAAkBxU,GAC5C,IAAMsC,EAAUkS,EAASC,UAAU,EAAG,GACtC,GAAgB,UAAZnS,EACF,OHnSG,SAA2BkS,EAAkBxU,GAClD,IAAMqU,EAA2Bb,GAAgBxT,GAE3C0U,EAASF,EAASG,MA5Bb,KA6BX,GA/B+B,UA+B3BD,EAAO,GAAiC,MAAM,IAAI9U,MAAM,oBAC5D,GAAsB,IAAlB8U,EAAO3P,OAAc,MAAM,IAAInF,MAAM,6BAEzC,IAAMiI,EAAiBI,OAAOiC,KAAKmK,EAASxM,gBACzCgM,QAAO,SAACzL,GAEP,OADmBpI,EAASsI,QAAQF,GACrBwE,YACbyH,EAASxM,eAAeO,IAAa,GAC9B,MAKPwM,EAAqBC,OAAO,KAAD,OAAMH,EAAO,KAC3CtP,SAAS,GACTC,SAASwC,EAAe9C,OAAQ,KAChC4P,MAAM,IACN5K,KAAI,SAACkB,GAAD,QAAS6J,SAAS7J,MACzBpD,EACGmD,MAAK,SAACpN,EAAGqN,GACR,OAAIrN,EAAIqN,GAAW,EACfrN,EAAIqN,EAAU,EACX,KAER9C,SAAQ,SAAC7K,EAAKkL,GACb6L,EAASxM,eAAevK,KAASsX,EAAmBpM,MAGxD,IAAMuM,EAAyBL,EAAO,GAAGC,MAxD9B,KAyDPI,EAAuB,IACzBA,EAAuB5M,SAAQ,SAAC6M,GAC9B,IAAMlL,EAASkL,EAAIL,MAAMtC,IACzB,GAAsB,IAAlBvI,EAAO/E,OAAc,MAAM,IAAInF,MAAM,kCACzCyU,EAAS/J,gBAAgBQ,KAAK,CAC5BxN,IAAK4S,eACL3G,QAAS+I,GAAcxI,EAAO,GAAI9J,EAAS2M,OAC3CnC,KAAMiI,GAAc3I,EAAO,GAAI9J,EAASsI,SACxChM,MAAOwN,EAAO,QAKpB,IAAMmL,EAAoBP,EAAO,GAAGC,MAtEzB,KAuEPM,EAAkB,IACpBA,EAAkB9M,SAAQ,SAAC6M,GACzB,IAAMlL,EAASkL,EAAIL,MAAMtC,IACzB,GAAsB,IAAlBvI,EAAO/E,OAAc,MAAM,IAAInF,MAAM,6BACzCyU,EAASrK,WAAWc,KAAK,CACvBxN,IAAK4S,eACL3G,QAAS+I,GAAcxI,EAAO,GAAI9J,EAAS2M,OAC3CrQ,MAAOwN,EAAO,GACdH,OAAQG,EAAO,GACfL,YAAaqL,SAAShL,EAAO,SAKnC,IAAMoL,EAAwBR,EAAO,GAAGC,MArF7B,KAsFXN,EAAShL,eAAelB,SAAQ,SAACoM,EAAiB/L,GAChD,IAAMsB,EAASoL,EAAsB1M,GAAGmM,MAAMtC,IAC9C,GAAsB,IAAlBvI,EAAO/E,OAAc,MAAM,IAAInF,MAAM,iCACzC2U,EAAgBjY,MAAQwN,EAAO,GAC/ByK,EAAgB5K,OAASG,EAAO,GAChCyK,EAAgB9K,YAAcqL,SAAShL,EAAO,OAGhDuK,EAASpK,yBAA2B6K,SAASJ,EAAO,IAEpD,IAAMS,EAA0BT,EAAO,GAAGC,MAAMtC,IAChD,GAAuC,IAAnC8C,EAAwBpQ,OAAc,MAAM,IAAInF,MAAM,mCAM1D,OALAyU,EAASvL,iBAAiBF,UAAYuM,EAAwB,GAC9Dd,EAASvL,iBAAiBC,MAAQoM,EAAwB,GAC1Dd,EAASvL,iBAAiBE,WAAamM,EAAwB,GAC/Dd,EAASvL,iBAAiBG,UAAY,IAE/BoL,EGoNEe,CAAkBZ,EAAUxU,GAC9B,GAAgB,UAAZsC,EACT,OFrSG,SAA2BkS,EAAkBxU,GAClD,IAAMqU,EAA2Bb,GAAgBxT,GAE3C0U,EAASF,EAASG,MA5Bb,KA6BX,GA/B+B,UA+B3BD,EAAO,GAAiC,MAAM,IAAI9U,MAAM,oBAC5D,GAAsB,IAAlB8U,EAAO3P,OAAc,MAAM,IAAInF,MAAM,6BAEzC,IAAMgV,EAAqBC,OAAO,KAAD,OAAMH,EAAO,KAC3CtP,SAAS,GACTC,SAAS4C,OAAOiC,KAAKmK,EAASxM,gBAAgB9C,OAAQ,KACtD4P,MAAM,IACN5K,KAAI,SAACkB,GAAD,QAAS6J,SAAS7J,MACzBhD,OAAOiC,KAAKmK,EAASxM,gBAClBmD,MAAK,SAACpN,EAAGqN,GACR,OAAIrN,EAAIqN,GAAW,EACfrN,EAAIqN,EAAU,EACX,KAER9C,SAAQ,SAAC7K,EAAKkL,GACb6L,EAASxM,eAAevK,KAASsX,EAAmBpM,MAGxD,IAAMuM,EAAyBL,EAAO,GAAGC,MA9C9B,KA+CPI,EAAuB,IACzBA,EAAuB5M,SAAQ,SAAC6M,GAC9B,IAAMlL,EAASkL,EAAIL,MAAMtC,IACzB,GAAsB,IAAlBvI,EAAO/E,OAAc,MAAM,IAAInF,MAAM,kCACzCyU,EAAS/J,gBAAgBQ,KAAK,CAC5BxN,IAAK4S,eACL3G,QAAS+I,GAAcxI,EAAO,GAAI9J,EAAS2M,OAC3CnC,KAAMiI,GAAc3I,EAAO,GAAI9J,EAASsI,SACxChM,MAAOwN,EAAO,QAKpB,IAAMmL,EAAoBP,EAAO,GAAGC,MA5DzB,KA6DPM,EAAkB,IACpBA,EAAkB9M,SAAQ,SAAC6M,GACzB,IAAMlL,EAASkL,EAAIL,MAAMtC,IACzB,GAAsB,IAAlBvI,EAAO/E,OAAc,MAAM,IAAInF,MAAM,6BACzCyU,EAASrK,WAAWc,KAAK,CACvBxN,IAAK4S,eACL3G,QAAS+I,GAAcxI,EAAO,GAAI9J,EAAS2M,OAC3CrQ,MAAOwN,EAAO,GACdH,OAAQG,EAAO,GACfL,YAAaqL,SAAShL,EAAO,SAKnC,IAAMoL,EAAwBR,EAAO,GAAGC,MA3E7B,KA4EXN,EAAShL,eAAelB,SAAQ,SAACoM,EAAiB/L,GAChD,IAAMsB,EAASoL,EAAsB1M,GAAGmM,MAAMtC,IAC9C,GAAsB,IAAlBvI,EAAO/E,OAAc,MAAM,IAAInF,MAAM,iCACzC2U,EAAgBjY,MAAQwN,EAAO,GAC/ByK,EAAgB5K,OAASG,EAAO,GAChCyK,EAAgB9K,YAAcqL,SAAShL,EAAO,OAGhDuK,EAASpK,yBAA2B6K,SAASJ,EAAO,IAEpD,IAAMS,EAA0BT,EAAO,GAAGC,MAAMtC,IAChD,GAAuC,IAAnC8C,EAAwBpQ,OAAc,MAAM,IAAInF,MAAM,mCAM1D,OALAyU,EAASvL,iBAAiBF,UAAYuM,EAAwB,GAC9Dd,EAASvL,iBAAiBC,MAAQoM,EAAwB,GAC1Dd,EAASvL,iBAAiBE,WAAamM,EAAwB,GAC/Dd,EAASvL,iBAAiBG,UAAY,IAE/BoL,EEgOEgB,CAAkBb,EAAUxU,GAC9B,GAAgB,UAAZsC,EACT,ODvSG,SAA2BkS,EAAkBxU,GAClD,IAAMqU,EAA2Bb,GAAgBxT,GAE3C0U,EAASF,EAASG,MA5Bb,KA6BX,GA/B+B,UA+B3BD,EAAO,GAAiC,MAAM,IAAI9U,MAAM,oBAC5D,GAAsB,IAAlB8U,EAAO3P,OAAc,MAAM,IAAInF,MAAM,6BAEzC,IAAMgV,EAAqBC,OAAO,KAAD,OAAMH,EAAO,KAC3CtP,SAAS,GACTC,SAAS4C,OAAOiC,KAAKmK,EAASxM,gBAAgB9C,OAAQ,KACtD4P,MAAM,IACN5K,KAAI,SAACkB,GAAD,QAAS6J,SAAS7J,MACzBhD,OAAOiC,KAAKmK,EAASxM,gBAClBmD,MAAK,SAACpN,EAAGqN,GACR,OAAIrN,EAAIqN,GAAW,EACfrN,EAAIqN,EAAU,EACX,KAER9C,SAAQ,SAAC7K,EAAKkL,GACb6L,EAASxM,eAAevK,KAASsX,EAAmBpM,MAGxD,IAAMuM,EAAyBL,EAAO,GAAGC,MA9C9B,KA+CPI,EAAuB,IACzBA,EAAuB5M,SAAQ,SAAC6M,GAC9B,IAAMlL,EAASkL,EAAIL,MAAMtC,IACzB,GAAsB,IAAlBvI,EAAO/E,OAAc,MAAM,IAAInF,MAAM,kCACzCyU,EAAS/J,gBAAgBQ,KAAK,CAC5BxN,IAAK4S,eACL3G,QAAS+I,GAAcxI,EAAO,GAAI9J,EAAS2M,OAC3CnC,KAAMiI,GAAc3I,EAAO,GAAI9J,EAASsI,SACxChM,MAAOwN,EAAO,QAKpB,IAAMmL,EAAoBP,EAAO,GAAGC,MA5DzB,KA6DPM,EAAkB,IACpBA,EAAkB9M,SAAQ,SAAC6M,GACzB,IAAMlL,EAASkL,EAAIL,MAAMtC,IACzB,GAAsB,IAAlBvI,EAAO/E,OAAc,MAAM,IAAInF,MAAM,6BACzCyU,EAASrK,WAAWc,KAAK,CACvBxN,IAAK4S,eACL3G,QAAS+I,GAAcxI,EAAO,GAAI9J,EAAS2M,OAC3CrQ,MAAOwN,EAAO,GACdH,OAAQG,EAAO,GACfL,YAAaqL,SAAShL,EAAO,SAKnC,IAAMoL,EAAwBR,EAAO,GAAGC,MA3E7B,KA4EXN,EAAShL,eAAelB,SAAQ,SAACoM,EAAiB/L,GAChD,IAAMsB,EAASoL,EAAsB1M,GAAGmM,MAAMtC,IAC9C,GAAsB,IAAlBvI,EAAO/E,OAAc,MAAM,IAAInF,MAAM,iCACzC2U,EAAgBjY,MAAQwN,EAAO,GAC/ByK,EAAgB5K,OAASG,EAAO,GAChCyK,EAAgB9K,YAAcqL,SAAShL,EAAO,OAGhDuK,EAASpK,yBAA2B6K,SAASJ,EAAO,IAEpD,IAAMS,EAA0BT,EAAO,GAAGC,MAAMtC,IAChD,GAAuC,IAAnC8C,EAAwBpQ,OAAc,MAAM,IAAInF,MAAM,mCAM1D,OALAyU,EAASvL,iBAAiBF,UAAYuM,EAAwB,GAC9Dd,EAASvL,iBAAiBC,MAAQoM,EAAwB,GAC1Dd,EAASvL,iBAAiBE,WAAamM,EAAwB,GAC/Dd,EAASvL,iBAAiBG,UAAYkM,EAAwB,GAEvDd,ECkOEiB,CAAkBd,EAAUxU,GAEnC,MAAM,IAAIJ,MAAM,mBA/BL2V,CAAmB5B,EAAO6B,SAAU7B,EAAO3T,UAClD,MAAOgC,GAEP,OADAvE,QAAQC,MAAMsE,GACPwR,GAAgBG,EAAO3T,UAGlC,IAAK,4BACH,IAEE,OAAO2T,EAAOnS,aACd,MAAOQ,GAEP,OADAvE,QAAQC,MAAMsE,GACPwR,GAAgBG,EAAO3T,UAGlC,QACE,OAAO0T,GE1RN,IAAM+B,GAAoBjW,wBAA4C,MAKtE,SAASkW,KACd,IAAMhW,EAAMC,qBAAW8V,IACvB,IAAK/V,EACH,MAAM,IAAIE,MAAM,6BAElB,OAAOF,EATT+V,GAAkB5V,YAAc,oBAahC,IAAM8V,GAAkBC,KAAEC,UAAS,SAACvZ,EAAgBwZ,GAClDA,EAAexZ,KACd,IAAK,CAAEyZ,SAAS,EAAOC,UAAU,IAE9BC,GAA0BL,KAAEC,SAAF,uCAAW,WACzCnC,EACA1T,EACAkW,EACAJ,GAJyC,iBAAAlY,EAAA,6DAMzC+X,IAAgB,EAAMG,GANmB,SAQjCK,EAAS,IAAI7O,GAAiBoM,EAAO1T,GARJ,SASjBmW,EAAOC,OATU,OASjCC,EATiC,OAUvCH,GAAiB,SAACI,GAChB,OAAKA,GAAaA,EAAUlL,UAAYiL,EAAQjL,WAC9C3N,QAAQ8Y,IAAR,uBAA4BF,EAAQ5J,YAApC,OACO4J,GAEFC,KAf8B,gDAkBvCJ,EAAiB,CACfvK,gBAAiB,KACjBY,OAAQ,KACRnB,UAAWC,YAAYC,MACvBmB,YAAa,EACb/O,MAAM,EAAD,KAvBgC,yBA0BvCiY,IAAgB,EAAOG,GA1BgB,4EAAX,4DA4B7B,IAAK,CAAEC,SAAS,EAAMC,UAAU,IAWtBQ,GAAqB,SAAC,GAAoF,IAAD,EAAjFxW,EAAiF,EAAjFA,SAAUE,EAAuE,EAAvEA,YAAaE,EAA0D,EAA1DA,YAAaqW,EAA6C,EAA7CA,kBAAmB1W,EAA0B,EAA1BA,SAC1F,EAA0B2W,qBAAWjD,GAASD,GAAgBxT,IAA9D,mBAAO0T,EAAP,KAAciD,EAAd,KACML,EAAYrY,EAAYyV,GAC9B,EAA0ClV,mBAA+B,MAAzE,mBAAOoY,EAAP,KAAsBV,EAAtB,KAEA,EAAsC1X,oBAAS,GAA/C,mBAAOqY,EAAP,KAAoBf,EAApB,KACA,EAA0ChQ,GAAoC,CAAExI,IAAK,iBAAkB4H,aAAc,SAArH,mBAAO4R,EAAP,KAAsBC,EAAtB,KACMC,EAAsC,SAAlBF,EAEpBpX,EAAM0E,KAEN6S,ECvFC3Y,EAAM,uCAAsD,WAAOU,GAAP,mBAAApB,EAAA,6DAC3DsZ,EAAO,CACXvV,cAAe,CACbzB,YAAalB,EAAIkB,YACjBoK,gBAAiBtL,EAAI2C,cAAc2I,gBAAgBP,KAAI,SAACvB,GAAD,MAAQ,CAC7De,QAASf,EAAEe,QACXiB,KAAMhC,EAAEgC,KACRlO,MAAOuM,OAAOL,EAAElM,WAElB0N,WAAYhL,EAAI2C,cAAcqI,WAAWD,KAAI,SAACvB,GAAD,MAAQ,CACnDe,QAASf,EAAEe,QACXjN,MAAOuM,OAAOL,EAAElM,OAChBqN,OAAQd,OAAOL,EAAEmB,QACjBF,UAAWjB,EAAEiB,cAEfJ,eAAgBrK,EAAI2C,cAAc0H,eAAeU,KAAI,SAACvB,GAAD,MAAQ,CAC3De,QAASf,EAAEe,QACXjN,MAAOuM,OAAOL,EAAElM,OAChBqN,OAAQd,OAAOL,EAAEmB,QACjBF,UAAWjB,EAAEiB,cAEfQ,uBAAwBjL,EAAI2C,cAAcsI,uBAC1CnB,iBAAkB,CAChBF,UAAWC,OAAO7J,EAAI2C,cAAcmH,iBAAiBF,WACrDG,MAAOF,OAAO7J,EAAI2C,cAAcmH,iBAAiBC,OACjDC,WAAYH,OAAO7J,EAAI2C,cAAcmH,iBAAiBE,YACtDC,UAAWJ,OAAO7J,EAAI2C,cAAcmH,iBAAiBG,YAEvDpB,eAAgBI,OAAOiC,KAAKlL,EAAI2C,cAAckG,gBAAgBgM,QAAO,SAACvW,GAAD,OAAS0B,EAAI2C,cAAckG,eAAevK,QA5BlD,SA+B/CU,EAAK,iBAAkBkZ,GA/BwB,cA+B3DzW,EA/B2D,OAgC3DC,EAAOD,EAAIxD,KAhCgD,kBAiC1DyD,EAAKzD,MAjCqD,2CAAtD,uDDyFPka,EAAyBpY,uBAAY,WACzCW,EAAI+F,aACJwQ,GAAwBvC,EAAO1T,EAAUkW,EAAkBJ,KAC1D,CAACpW,EAAKM,EAAU0T,IAEb0D,EAAyB,SAACC,GAC9BN,EAAiBM,EAAU,OAAS,SAChCA,GACFF,KAIEG,EAA0B,WAC9BL,EAAkBpZ,QAAQ,CAAE8D,cAAe+R,EAAOxT,iBAG9CqX,EAA4BlY,mBAAQ,WAAO,IAAD,IAC1CmY,EAAO,GACLla,GAAM,UAAA2Z,EAAkBha,YAAlB,eAAwBK,OAAxB,OAA+B8C,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAae,UAIxD,OAHI7D,IACFka,EAAI,UAAMxW,OAAOC,SAASwW,SAAtB,aAAmCzW,OAAOC,SAASyW,MAAnD,OAA0D1W,OAAOC,SAASkB,SAA1E,YAAsF/F,EAAtF,YAA2GkB,IAE1G,CACLka,OACAG,mBAAkB,UAACV,EAAkBha,YAAnB,aAAC,EAAwBK,KAC3CqB,QAASsY,EAAkBtY,WAE5B,QAACyB,QAAD,IAACA,OAAD,EAACA,EAAae,SAAd,UAAwB8V,EAAkBha,YAA1C,aAAwB,EAAwBK,IAAK2Z,EAAkBtY,UAE1EP,qBAAU,WACJqY,KACF,OAAIrW,QAAJ,IAAIA,OAAJ,EAAIA,EAAauB,eACfgV,EAAS,CAAE/M,KAAM,2BAA4B0K,OAAQlU,EAAYuB,cAAe3B,cAC3E,OAAII,QAAJ,IAAIA,OAAJ,EAAIA,EAAagB,gBACtBuV,EAAS,CAAE/M,KAAM,4BAA6B4L,SAAUpV,EAAYgB,eAAgBpB,cAC/E,OAAII,QAAJ,IAAIA,OAAJ,EAAIA,EAAaoB,cACtBmV,EAAS,CAAE/M,KAAM,4BAA6BpI,aAAY,OAAEpB,QAAF,IAAEA,OAAF,EAAEA,EAAaoB,aAAcxB,aAEvF2W,EAAS,CAAE/M,KAAM,gBAAiB5J,aAEpCmX,OAGD,CAACV,IAEJrY,qBAAU,WACJ4Y,GAAqBV,IAAc5C,GACrCyD,MAED,CAACH,EAAmBG,EAAwBb,EAAW5C,IAE1DtV,qBAAU,WACN,IACE4C,OAAOM,eAAegF,QAAQ,eAAgBpG,GAC9Cc,OAAOM,eAAegF,QAAQ,QAASxE,KAAK8D,UAAU8N,IACtD,MAAO1R,GACPvE,QAAQC,MAAMsE,MAGjB,CAAC0R,IAEJ,IAAMnR,EAAWlD,mBAAQ,WACvB,MAAO,CACLqU,QACAiD,WACA3W,WACA6W,cACAD,gBACAgB,UAAWT,EACXL,cAAeE,EACfD,iBAAkBK,EAClBS,kBAAmBP,EACnBC,eAGD,CACD7D,EACA1T,EACA6W,EACAD,EACAO,EACAH,EACAO,IAGF,OACE,cAAC9B,GAAkBjT,SAAnB,CAA4BlG,MAAOiG,EAAnC,SACGxC,K,UErLQ+X,GALG7b,YAAO8b,MAAV,0DAAG9b,CAAH,mDAEY,qBAAG4H,MAAkBmU,OAAOC,QAAQ,M,8BCIlDC,GAAgB1Y,wBAAwC,MACrE0Y,GAAcrY,YAAc,gBAiBrB,IAAMsY,GAAiB,SAACxc,GAC7B,IAAQoE,EAAapE,EAAboE,SACR,EAAgCvB,mBAAgC,MAAhE,mBAAO4Z,EAAP,KAAiBC,EAAjB,KACMxU,EAAQyU,cASd,OACE,eAACJ,GAAc1V,SAAf,CAAwBlG,MAAO,CAAE8b,YAAjC,UACE,cAACG,GAAD,CAAYra,IAThB,SAAgBA,GACdma,GAAY,SAAC/B,GACX,OAAIA,IAAcpY,EAAYA,EACvBoY,MAMkBkC,UAAW3U,EAAMC,MAAM2U,eAC/C1Y,MAKDwY,GAAatc,IAAOgI,IAAV,yEAAGhI,CAAH,8GAEP,qBAAGuc,aAIC,qBAAG3U,MAAkBC,MAAM4U,gBCHzBC,GAxCAC,sBAA+B,SAACjd,EAAOuC,GACpD,IAAQ6B,EAA+CpE,EAA/CoE,SAAUqY,EAAqCzc,EAArCyc,SAAUS,EAA2Bld,EAA3Bkd,WAAYvb,EAAe3B,EAAf2B,IAAKgG,EAAU3H,EAAV2H,MACvCvH,EAASoC,iBAA2B0C,SAASiY,cAAc,QAkCjE,OAhCKD,IACH9c,EAAOsC,QAAU+Z,GAAY,MAG/Bha,qBAAU,WAUR,OATIya,GAAc9c,EAAOsC,UACnBiF,GACF2E,OAAOC,QAAQ5E,GAAO6E,SAAQ,YAAmB,IAAD,mBAAhB7K,EAAgB,KAAXhB,EAAW,KAC9CP,EAAOsC,QAASiF,MAAMhG,GAAchB,KAGxCuE,SAASqW,KAAK6B,OAAOhd,EAAOsC,UAGvB,WACDwa,GAAc9c,EAAOsC,SACvBtC,EAAOsC,QAAQ2a,YAIlB,IAEHC,2BAAgB,WACV/a,IACiB,oBAARA,EACTA,EAAInC,EAAOsC,SAEXH,EAAIG,QAAUtC,EAAOsC,WAGxB,CAACH,EAAKnC,IAEJA,EAAOsC,QACL6a,uBAAanZ,EAAUhE,EAAOsC,QAASf,GADlB,QC+Bf6b,GAhEA,SAACxd,GACd,IAAQyd,EAA6Bzd,EAA7Byd,KAAMC,EAAuB1d,EAAvB0d,SAAUtZ,EAAapE,EAAboE,SACxB,EAAsCvB,oBAAU4a,GAAhD,mBAAOE,EAAP,KAAoBC,EAApB,KACA,EAAgDtU,YAAkC,CAAE3H,IAAK,oBAAqB4H,aAAc,UAA5H,mBAAOsU,EAAP,KAAyBC,EAAzB,KACM/Z,EFHD,WACL,IAAMA,EAAMC,qBAAWuY,IACvB,IAAKxY,EACH,MAAM,IAAIE,MAAM,yBAElB,OAAOF,EEFKga,GAENC,EAAmC,UAArBH,EAoBpB,OAlBApb,qBAAU,WACJgb,GACFK,EAAoB,UAErB,CAACL,EAAMK,IAEVrb,qBAAU,WACJgb,GACFG,GAAe,KAEhB,CAACH,IASF,eAAC,GAAD,CAAQhB,SAAU1Y,EAAI0Y,SAAtB,UACE,cAACwB,GAAD,CAAcR,OAAQA,GAAQO,EAAaE,QAAS,WAAUT,IAAF,OAAUC,QAAV,IAAUA,MAAYD,OAClF,eAACU,GAAD,CAAiBV,OAAQA,EAAMW,gBATnC,WACOX,GACHG,GAAe,IAOf,UACE,eAACS,GAAD,CAAcH,QAAS,WAAgB,OAARR,QAAQ,IAARA,MAAYD,IAA3C,UACE,eAACa,GAAD,WACE,eAACC,GAAD,WAAkBd,EAAO,QAAU,OAAnC,oBACA,cAACe,GAAD,UAEIf,EACI,cAAC,KAAD,IACA,cAAC,KAAD,SAKRO,GACE,eAACS,GAAD,WACE,cAACC,GAAD,yCAGA,cAACC,GAAD,UACE,cAACC,GAAD,CAAgBV,QAAS,SAAC7X,GAAayX,EAAoB,QAASzX,EAAEwY,mBAAtE,6BAQV,cAACC,GAAD,CAAeC,UAAU,mBAAmB,eAActB,EAAMuB,aAAcrB,EAAa3W,OAAK,EAAhG,SACG5C,WASL6Z,GAAe3d,IAAOgI,IAAV,2EAAGhI,CAAH,yJASL,qBAAGmd,KAAkB,GAAM,KAEpB,qBAAGA,KAAkB,OAAS,UAG5CU,GAAkB7d,IAAOgI,IAAV,8EAAGhI,CAAH,oLAGX,gBAAGmd,EAAH,EAAGA,KAAMvV,EAAT,EAASA,MAAT,OAAsBuV,EAAO,MAAH,WAAevV,EAAMC,MAAM8W,gBACpD,qBAAG/W,MAAkBC,MAAM8W,eAEtB,qBAAG/W,MAAkBmU,OAAO6C,WAAW,MAMjDb,GAAe/d,IAAOgI,IAAV,2EAAGhI,CAAH,+KASF,qBAAG4H,MAAkBmU,OAAOC,QAAQ,MAIlC,qBAAGpU,MAAkBmU,OAAOC,QAAQ,MAIhDgC,GAAche,YAAO6e,MAAV,0EAAG7e,CAAH,6kBAYD,qBAAG4H,MAAkBmU,OAAOC,QAAQ,MACzC,qBAAGpU,MAAkBkX,QAI5Bf,IACc,qBAAGnW,MAAkBmU,OAAOC,QAAQ,MAUpC,qBAAGpU,MAAkBmU,OAAOC,QAAQ,KAIhD+B,IACc,qBAAGnW,MAAkBmU,OAAOC,QAAQ,MAWtC,qBAAGpU,MAAkBmU,OAAOC,QAAQ,KAIhD+B,IACc,qBAAGnW,MAAkBmU,OAAOC,QAAQ,MAKlDiC,GAAkBje,IAAO+e,KAAV,8EAAG/e,CAAH,6FAQfke,GAAkBle,IAAO+e,KAAV,8EAAG/e,CAAH,2CAMfme,GAAUne,YAAO8b,MAAV,sEAAG9b,CAAH,6VAiBG,qBAAG4H,MAAkBmU,OAAOiD,KAAK,MAW/B,qBAAGpX,MAAkBmU,OAAOiD,KAAK,MAO7CZ,GAAcpe,YAAOif,KAAV,0EAAGjf,CAAH,8BAKXqe,GAA0Bre,IAAOgI,IAAV,sFAAGhI,CAAH,uDAMvBse,GAAsBte,YAAO6e,MAAV,6EAAG7e,CAAH,8DAEd,qBAAG4H,MAAkBkX,SAI1BN,GAAgBxe,YAAO2H,KAAV,6EAAG3H,CAAH,wJACH,qBAAG0e,aAAkC,SAAW,a,0FC/OnDQ,GAAUlf,YAAO6b,IAAV,8DAAG7b,CAAH,4FACJ,qBAAG4H,MAAkBmU,OAAO6C,WAAW,MAEjC,qBAAGhX,MAAkBmU,OAAO6C,WAAW,MAIhDO,GAAqBnf,YAAOif,KAAV,kFAAGjf,CAAH,yB,UCAhBof,GARK,SAAC1f,GACnB,OACE,cAAC2f,GAAA,EAAD,2BAAa3f,GAAb,IAAoB4f,MAAM,SAASjY,MAAK,4BAAa,OAAL3H,QAAK,IAALA,OAAA,EAAAA,EAAO2H,QAAS,IAAxB,IAA6BC,MAAO,OAAQT,OAAQ,OAAQ0Y,QAAS,MAAOC,KAAM,aAA1H,SACE,cAAC,KAAD,CAAQC,KAAM,SCGdC,GAAkB,CACtB,CAAErf,MAAO,aAAcC,MAAO,iBAC9B,CAAED,MAAO,WAAYC,MAAO,oBAGxBqf,GAAkBC,MTfI,ISgB3BC,KAAK,IACH/R,KAAI,SAAC6L,EAAGpN,GAAJ,MAAW,CAAElM,MAAM,GAAD,OAAKkM,EAAI,GAAKjM,MAAM,aAAD,OAAeiM,EAAI,OAC5DuT,UAwIYC,GAtIO,WACpB,IAAMtc,EAAMgW,KAENuG,EAAc5c,mBAAQ,WAC1B,IAAM6c,EAAOjU,OAAOiC,KAAKxK,EAAIM,SAAS2M,OACnCkH,QAAO,SAACvW,GAAD,OAAgE,IAAvDoC,EAAIM,SAAS2M,MAAMrP,GAAK4R,oBAAoBnK,SAAiBrF,EAAIM,SAAS4I,UAAUtL,MACpGyM,KAAI,SAACzM,GAAD,MAAU,CACbhB,MAAOgB,EACPf,MAAOmD,EAAIM,SAAS2M,MAAMrP,GAAK0P,SAEhChC,MAAK,SAACpN,EAAGqN,GACR,OAAOrN,EAAErB,MAAQ0O,EAAE1O,MAAQ,GAAK,KAQpC,OALA2f,EAAKC,QAAQ,CACX7f,MAAO+K,GACP9K,MAAO,gCAGF2f,IACN,CAACxc,EAAIM,WAkGR,OACE,mCACE,eAACmb,GAAD,WACE,cAACnX,EAAA,EAAD,CAAOoY,MAAO,EAAd,8BACA,cAAChB,GAAD,8OAnGG1b,EAAIgU,MAAMpJ,gBAAgBP,KAAI,SAAC9M,GACpC,IAAMof,EAAW,UAAOV,IACxB,GAAI1e,EAAKsM,QAAS,CAChB,IAAMmD,EAAWhN,EAAIM,SAAS2M,MAAM1P,EAAKsM,WACd,OAARmD,QAAQ,IAARA,OAAA,EAAAA,EAAUwC,sBAAuB,IACzC/G,SAAQ,SAACC,GAClB,IAAMC,EAAa3I,EAAIM,SAASsI,QAAQF,GAClCrM,EAAM,OAAGsM,QAAH,IAAGA,OAAH,EAAGA,EAAYK,SAASiC,MAAK,SAAChC,GAAD,OAAOA,EAAEF,YAAcxL,EAAKsM,WACrE,GAAIxN,EAAQ,CACV,IAAMiR,EAAON,EAASM,OAAS3E,EAAW2E,KAAO,cAAgB3E,EAAW2E,KAAK5P,QAAQ,cAAe,IACxGif,EAAYvR,KAAK,CAAExO,MAAO8L,EAAW7L,MAAM,GAAD,OAAKyQ,EAAL,aAAcjR,EAAOgP,UAArB,eAIhD,IAAMuR,EAAeL,EAAYtR,MAAK,SAAC4R,GAAD,OAAQA,EAAGjgB,QAAUW,EAAKsM,WAChE,OACE,eAACiT,GAAD,WACE,eAACC,GAAD,WACE,cAACtZ,EAAA,EAAD,CACEuZ,YAAY,iBACZngB,MAAM,OACNogB,WAAS,EACTC,YAAU,EACV/I,OAAQ,SAACvX,EAAOgN,GAAU,IAAD,EACvB,SAAIgT,GAAgBhgB,IAAUggB,EAAa/f,WAGnC,UAAC+M,EAAK/M,aAAN,aAAC,EAAYsgB,cAAcC,SAASxgB,EAAMugB,iBAEpD5f,KAAMgf,EACN3f,MAAOW,EAAKsM,QAAUtM,EAAKsM,QAAU,GACrCnG,SAAU,SAAC9G,GACToD,EAAIiX,SAAS,CACX/M,KAAM,sBACN3M,KAAM,CAAEK,IAAKL,EAAKK,IAAKiM,QAAUjN,MAGrCgH,MAAO,CAAEmY,KAAM,cAEjB,cAAC,GAAD,CAAa5B,QAAS,WAAQna,EAAIiX,SAAS,CAAE/M,KAAM,yBAA0BtM,IAAKL,EAAKK,OAAWgG,MAAO,CAAEyZ,SAAU,WAAYC,IAAK,aAExI,eAACP,GAAD,WAEkB,aAAdxf,EAAKuN,KAED,cAACrH,EAAA,EAAD,CACE5G,MAAM,WACNU,KAAM2e,GACNtf,MAAOW,EAAKX,MACZ8G,SAAU,SAAC9G,GACToD,EAAIiX,SAAS,CACX/M,KAAM,6BACN3M,KAAM,CAAEK,IAAKL,EAAKK,IAAKkM,OAASlN,MAGpCgH,MAAO,CAAEC,MAAO,WAIlB,cAAC0Z,GAAA,EAAD,CACE1gB,MAAM,SACNme,UAAU,aACV9Q,KAAK,SACLsT,IAAI,IACJC,KAAK,IACL7gB,MAAOW,EAAKX,MACZ8G,SAAU,SAACpB,GACTtC,EAAIiX,SAAS,CACX/M,KAAM,6BACN3M,KAAM,CAAEK,IAAKL,EAAKK,IAAKkM,OAAQxH,EAAEob,cAAc9gB,UAGnDgH,MAAO,CAAEC,MAAO,WAIxB,cAACJ,EAAA,EAAD,CACE5G,MAAM,OACNU,KAAMof,EACN/f,MAAOW,EAAKuN,KACZpH,SAAU,SAAC9G,GACToD,EAAIiX,SAAS,CACX/M,KAAM,2BACN3M,KAAM,CAAEK,IAAKL,EAAKK,IAAKkN,KAAOlO,MAGlCgH,MAAO,CAAEC,MAAO,cAGpB,cAAC8Z,EAAA,EAAD,CAAS/Z,MAAO,CAAEga,UAAW,OAAQC,aAAc,YAzEjCtgB,EAAKK,QAuFzB,cAACge,GAAA,EAAD,CAAQzB,QAAS,WAAQna,EAAIiX,SAAS,CAAE/M,KAAM,yBAA9C,iCAUF6S,GAAMxgB,YAAOiI,KAAV,wEAAGjI,CAAH,wBAIHugB,GAAgBvgB,IAAOgI,IAAV,kFAAGhI,CAAH,yB,8BClIJuhB,GApBU,SAAC7hB,GACxB,IAAQY,EAAmBZ,EAAnBY,MAAOkhB,EAAY9hB,EAAZ8hB,QAEf,OACE,eAACC,GAAD,WACGnhB,EAAO,IACR,cAAC,KAAD,CACEA,MAAOkhB,EACPE,WAAS,EACTpC,MAAM,OACNhY,MAAO,IACPqa,WAAS,EACTC,UAAW,EANb,SAQE,cAAC,KAAD,CAAMnC,KAAM,WAQdgC,GAAQzhB,IAAOgI,IAAV,8EAAGhI,CAAH,uCCgOI6hB,GAtPG,WAChB,IAAMpe,EAAMgW,KAENuG,EAAc5c,mBAAQ,kBAAM4I,OAAOiC,KAAKxK,EAAIM,SAAS2M,OACxDkH,QAAO,SAACvW,GAAD,OAAgE,IAAvDoC,EAAIM,SAAS2M,MAAMrP,GAAK4R,oBAAoBnK,QAAiE,IAAjDrF,EAAIM,SAAS2M,MAAMrP,GAAK2R,cAAclK,SAAiBrF,EAAIM,SAAS4I,UAAUtL,MAC1JyM,KAAI,SAACzM,GAAD,MAAU,CACbhB,MAAOgB,EACPf,MAAOmD,EAAIM,SAAS2M,MAAMrP,GAAK0P,SAEhChC,MAAK,SAACpN,EAAGqN,GACR,OAAOrN,EAAErB,MAAQ0O,EAAE1O,MAAQ,GAAK,OAC9B,CAACmD,EAAIM,WA4LX,OACE,qCACE,eAACmb,GAAD,WACE,cAACnX,EAAA,EAAD,CAAOoY,MAAO,EAAd,yBACA,cAAChB,GAAD,0GA7LG1b,EAAIgU,MAAM1J,WAAWD,KAAI,SAAC9M,GAC/B,IAAMqf,EAAeL,EAAYtR,MAAK,SAAC4R,GAAD,OAAQA,EAAGjgB,QAAUW,EAAKsM,WAChE,OACE,eAAC,GAAD,WACE,eAAC,GAAD,WACE,cAACpG,EAAA,EAAD,CACEuZ,YAAY,iBACZngB,MAAM,OACNogB,WAAS,EACTC,YAAU,EACV/I,OAAQ,SAACvX,EAAOgN,GAAU,IAAD,EACvB,SAAIgT,GAAgBhgB,IAAUggB,EAAa/f,WAGnC,UAAC+M,EAAK/M,aAAN,aAAC,EAAYsgB,cAAcC,SAASxgB,EAAMugB,iBAEpD5f,KAAMgf,EACN3f,MAAOW,EAAKsM,QAAUtM,EAAKsM,QAAU,GACrCnG,SAAU,SAAC9G,GACToD,EAAIiX,SAAS,CACX/M,KAAM,oBACN3M,KAAK,2BAAMA,GAAP,IAAasM,QAAUjN,OAG/BgH,MAAO,CAAEmY,KAAM,cAEjB,cAAC,GAAD,CAAa5B,QAAS,WAAQna,EAAIiX,SAAS,CAAE/M,KAAM,oBAAqBtM,IAAKL,EAAKK,OAAWgG,MAAO,CAAEyZ,SAAU,WAAYC,IAAK,aAEnI,eAAC,GAAD,WACE,cAACC,GAAA,EAAD,CACE1gB,MAAM,SACNme,UAAU,aACV9Q,KAAK,SACLsT,IAAI,IACJC,KAAK,IACL9Z,SAAUpG,EAAKwM,UACfnN,MAAOW,EAAKX,MACZ8G,SAAU,SAACpB,GACTtC,EAAIiX,SAAS,CACX/M,KAAM,oBACN3M,KAAK,2BAAMA,GAAP,IAAaX,MAAO0F,EAAEob,cAAc9gB,aAI9C,cAACyhB,GAAA,EAAD,CACErD,UAAU,QACVne,MAAM,YACN8a,QAASpa,EAAKwM,UACdrG,SAAU,WACR1D,EAAIiX,SAAS,CACX/M,KAAM,oBACN3M,KAAK,2BAAMA,GAAP,IAAawM,WAAYxM,EAAKwM,eAGtCnG,MAAO,CAAEyZ,SAAU,WAAYC,IAAK,aAGxC,cAACK,EAAA,EAAD,CAAS/Z,MAAO,CAAEga,UAAW,OAAQC,aAAc,YAtDjCtgB,EAAKK,QA8LzB,cAACge,GAAA,EAAD,CAAQzB,QAAS,WAAQna,EAAIiX,SAAS,CAAE/M,KAAM,oBAA9C,4BAIF,eAACuR,GAAD,WACE,cAACnX,EAAA,EAAD,CAAOoY,MAAO,EAAd,+BACA,cAAChB,GAAD,mLAxIN,WACE,IAAMtS,EAAmBpJ,EAAIgU,MAAM5K,iBACnC,OACE,qCACE,eAAC5E,EAAA,EAAD,CAAO8Z,MAAI,EAAX,UACE,cAACf,GAAA,EAAD,CACE1gB,MAAO,cAAC,GAAD,CAAkBA,MAAM,sBAAsBkhB,QAAQ,mEAC7D/C,UAAU,aACV9Q,KAAK,SACLsT,IAAI,IACJC,KAAK,IACL7gB,MAAOwM,EAAiBF,UACxBxF,SAAU,SAACpB,GACTtC,EAAIiX,SAAS,CACX/M,KAAM,2BACN3M,KAAK,2BAAM6L,GAAP,IAAyBF,UAAW5G,EAAEob,cAAc9gB,aAI9D,cAAC2gB,GAAA,EAAD,CACE1gB,MAAO,cAAC,GAAD,CAAkBA,MAAM,mBAAmBkhB,QAAQ,kEAC1D/C,UAAU,aACV9Q,KAAK,SACLsT,IAAI,IACJC,KAAK,IACL7gB,MAAOwM,EAAiBC,MACxB3F,SAAU,SAACpB,GACTtC,EAAIiX,SAAS,CACX/M,KAAM,2BACN3M,KAAK,2BAAM6L,GAAP,IAAyBC,MAAO/G,EAAEob,cAAc9gB,gBAK5D,eAAC4H,EAAA,EAAD,CAAO8Z,MAAI,EAAC1a,MAAO,CAAEga,UAAW,QAAhC,UACE,cAACL,GAAA,EAAD,CACE1gB,MAAO,cAAC,GAAD,CAAkBA,MAAM,aAAakhB,QAAQ,wIACpD/C,UAAU,aACV9Q,KAAK,SACLsT,IAAI,IACJC,KAAK,IACL7gB,MAAOwM,EAAiBE,WACxB5F,SAAU,SAACpB,GACTtC,EAAIiX,SAAS,CACX/M,KAAM,2BACN3M,KAAK,2BAAM6L,GAAP,IAAyBE,WAAYhH,EAAEob,cAAc9gB,aAI/D,cAAC2gB,GAAA,EAAD,CACE1gB,MAAO,cAAC,GAAD,CAAkBA,MAAM,YAAYkhB,QAAQ,mKACnD7T,KAAK,SACLsT,IAAI,IACJC,KAAK,IACL7gB,MAAOwM,EAAiBG,UACxB7F,SAAU,SAACpB,GACTtC,EAAIiX,SAAS,CACX/M,KAAM,2BACN3M,KAAK,2BAAM6L,GAAP,IAAyBG,UAAWjH,EAAEob,cAAc9gB,mBAiF/D2hB,GACD,cAAC3C,GAAA,EAAD,CAAQC,MAAM,SAAS1B,QAAS,WAAQna,EAAIiX,SAAS,CAAE/M,KAAM,0BAA2B5J,SAAUN,EAAIM,YAAesD,MAAO,CAAEga,UAAW,QAAzI,kCAIF,eAACnC,GAAD,WACE,cAACnX,EAAA,EAAD,CAAOoY,MAAO,EAAd,2BACA,cAAChB,GAAD,6RAGA,eAAClX,EAAA,EAAD,CAAOZ,MAAO,CAAEia,aAAc,QAA9B,UACE,cAACjC,GAAA,EAAD,CAAQC,MAAM,SAAS1B,QAAS,WAAQna,EAAIiX,SAAS,CAAE/M,KAAM,8BAA+B5J,SAAUN,EAAIM,YAA1G,gCAGA,cAACsb,GAAA,EAAD,CAAQC,MAAM,SAAS1B,QAAS,WAAQna,EAAIiX,SAAS,CAAE/M,KAAM,wBAA7D,6BAIF,cAACmU,GAAA,EAAD,CACExhB,MAAM,8DACN8a,QAAS3X,EAAIgU,MAAMzJ,uBACnB7G,SAAU,SAACpB,GAAQtC,EAAIiX,SAAS,CAAE/M,KAAM,gCAAiCsK,OAAQlS,EAAEob,cAAc/F,WACjG/T,MAAO,CAAEia,aAAc,UA7FtB7d,EAAIgU,MAAMrK,eAAeU,KAAI,SAAC9M,GAAD,OAClC,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAACie,EAAA,EAAD,CAAM5X,MAAO,CAAE4a,WAAY,QAA3B,SAAsCxe,EAAIM,SAAS2M,MAAM1P,EAAKsM,SAASyD,SAEzE,eAAC,GAAD,WACE,cAACiQ,GAAA,EAAD,CACE1gB,MAAM,SACNme,UAAU,aACV9Q,KAAK,SACLsT,IAAI,IACJC,KAAK,IACL7gB,MAAOW,EAAKX,MACZ8G,SAAU,SAACpB,GACTtC,EAAIiX,SAAS,CACX/M,KAAM,wBACN3M,KAAK,2BAAMA,GAAP,IAAaX,MAAO0F,EAAEob,cAAc9gB,WAG5C+G,SAAUpG,EAAKwM,UACfnG,MAAO,CAAEmY,KAAM,cAEjB,cAACsC,GAAA,EAAD,CACExhB,MAAM,YACN8a,QAASpa,EAAKwM,UACdrG,SAAU,SAACpB,GACTtC,EAAIiX,SAAS,CACX/M,KAAM,wBACN3M,KAAK,2BAAMA,GAAP,IAAawM,UAAWzH,EAAEob,cAAc/F,aAGhD/T,MAAO,CAAEyZ,SAAU,WAAYC,IAAK,OAAQvB,KAAM,cAEpD,cAACwB,GAAA,EAAD,CACE1gB,MAAM,SACNme,UAAU,aACV9Q,KAAK,SACLsT,IAAI,IACJC,KAAK,IACL7gB,MAAOW,EAAK0M,OACZvG,SAAU,SAACpB,GACTtC,EAAIiX,SAAS,CACX/M,KAAM,wBACN3M,KAAK,2BAAMA,GAAP,IAAa0M,OAAQ3H,EAAEob,cAAc9gB,WAG7CgH,MAAO,CAAEmY,KAAM,kBAGnB,cAAC4B,EAAA,EAAD,CAAS/Z,MAAO,CAAEga,UAAW,OAAQC,aAAc,YAhDjCtgB,EAAKK,eAsGzBmf,GAAMxgB,YAAOiI,KAAV,oEAAGjI,CAAH,wBAIHugB,GAAgBvgB,IAAOgI,IAAV,8EAAGhI,CAAH,yB,wCC/PbkiB,GAAoB,eA6GXC,GA3GI,WACjB,IAAM1e,EAAMgW,KACZ,EAAsClX,mBAAS,IAA/C,mBAAO6f,EAAP,KAAoBC,EAApB,KAEA,EAAoCjf,mBAAQ,WAC1C,IAAMkf,EAA0C,GAC1CC,EAAyC,GAiB/C,OAhBAvW,OAAOC,QAAQxI,EAAIM,SAASsI,SACzBH,SAAQ,YAAkB,IAAD,mBAAf7K,EAAe,KAAVL,EAAU,KACpBA,EAAKsW,YACPiL,EAAK1T,KAAK,CACRxN,MACAf,MAAOU,EAAK+P,KAAK5P,QAAQ+gB,GAAmB,MAG9CI,EAAMzT,KAAK,CACTxN,MACAf,MAAOU,EAAK+P,UAIpBuR,EAAMvT,MAAK,SAACpN,EAAGqN,GAAJ,OAAWrN,EAAErB,MAAQ0O,EAAE1O,MAAQ,GAAK,KAC/CiiB,EAAKxT,MAAK,SAACpN,EAAGqN,GAAJ,OAAWrN,EAAErB,MAAQ0O,EAAE1O,MAAQ,GAAK,KACvC,CACLkiB,YAAaF,EACbG,WAAYF,KAEb,CAAC9e,EAAIM,WAvBAye,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,WAyBfC,EAAmB5f,uBAAY,SAAC6f,GACpC,OAAOA,EAAW7U,KAAI,gBAAGzM,EAAH,EAAGA,IAAKf,EAAR,EAAQA,MAAR,MAAqB,CACzCe,MACAf,QACAsiB,UACE,cAACC,GAAA,EAAKC,KAAN,UACE,cAAChB,GAAA,EAAD,CACExhB,MAAOA,EACP8a,QAAS3X,EAAIgU,MAAM7L,eAAevK,GAClC8F,SAAU,WACR1D,EAAIiX,SAAS,CACX/M,KAAM,oBACNtM,MACA4W,QAASxU,EAAIgU,MAAM7L,eAAevK,SAR1BA,SAgBnB,CAACoC,EAAIgU,MAAOhU,EAAIiX,WAEbqI,EAAsB3f,mBAAQ,kBAAMsf,EAAiBF,KAAc,CAACE,IACpEM,EAAqB5f,mBAAQ,kBAAMsf,EAAiBD,KAAa,CAACC,IAExE,SAASO,EAAoBC,GAC3B,IACMC,GADkBD,EAAaF,EAAqBD,GAClBnL,QAAO,qBAAGtX,MAAkBsgB,cAAcC,SAASuB,EAAYxB,kBACjGwC,EAAqBD,EAAgBrV,KAAI,qBAAGzM,OAClD,OACE,qCACE,eAAC4G,EAAA,EAAD,CAAOZ,MAAO,CAAEga,UAAW,MAAOC,aAAc,QAAhD,UACE,cAACjC,GAAA,EAAD,CAAQzB,QAAS,WAAQna,EAAIiX,SAAS,CAAE/M,KAAM,0BAA2BtB,QAAS+W,EAAoBnL,QAAQ,KAA9G,wBAGA,cAACoH,GAAA,EAAD,CAAQzB,QAAS,WAAQna,EAAIiX,SAAS,CAAE/M,KAAM,0BAA2BtB,QAAS+W,EAAoBnL,QAAQ,KAA9G,4BAIF,cAAC4K,GAAA,EAAD,CAAMQ,cAAc,OAAOC,QAAS,EAApC,SACGH,EAAgBrV,KAAI,qBAAG8U,kBAMhC,OACE,mCACE,eAAC1D,GAAD,WACE,cAACnX,EAAA,EAAD,CAAOoY,MAAO,EAAd,qBACA,cAAChB,GAAD,iFAGA,cAAC6B,GAAA,EAAD,CACEP,YAAY,YACZ,aAAW,iBACX7gB,KAAM,cAAC,KAAD,CAAQ6f,KAAM,KACpBpf,MAAO+hB,EACPjb,SAAU,SAACpB,GAAQsc,EAAetc,EAAEob,cAAc9gB,QAClDgH,MAAO,CAAEia,aAAc,UAEzB,eAACiC,GAAA,EAAD,CAAMxB,MAAI,EAAC1a,MAAO,CAAEyZ,SAAU,YAA9B,UACE,eAAC0C,GAAA,EAAD,CAAKzE,KAAM,EAAX,UACE,cAAChX,EAAA,EAAD,CAAOoY,MAAO,EAAd,+BACC8C,GAAoB,MAEvB,eAACO,GAAA,EAAD,CAAKzE,KAAM,EAAX,UACE,cAAChX,EAAA,EAAD,CAAOoY,MAAO,EAAd,0BACC8C,GAAoB,MAEvB,cAACQ,GAAD,aASJA,GAAWzjB,IAAOgI,IAAV,2EAAGhI,CAAH,iFAME,qBAAG4H,MAAkBmU,OAAO6C,WAAW,MCLxC8E,GA7GQ,WACrB,IAAMjgB,EAAMgW,KACZ,EAA0ClX,oBAAS,GAAnD,mBAAOohB,EAAP,KAAsBC,EAAtB,KAEMC,EAAgB7hB,EAAYyB,EAAI6X,UAAUC,MAChDpZ,qBAAU,WACJsB,EAAI6X,UAAUI,iBAAmBjY,EAAI6X,UAAUC,MAAQ9X,EAAI6X,UAAUC,OAASsI,IAChFC,UAAUC,UAAUC,UAAUvgB,EAAI6X,UAAUC,MAC5CqI,GAAiB,MAElB,CAACngB,EAAI6X,UAAWuI,IASnB,OACE,qCACE,eAAC/H,GAAA,EAAD,CAAOzU,MAAO,CAAEia,aAAc,OAAQ2C,WAAY,QAAlD,UACE,cAAClc,EAAA,EAAD,CAAOoY,MAAO,EAAd,2BACA,cAACiB,EAAA,EAAD,CAAS/Z,MAAO,CAAEga,UAAW,MAAOC,aAAc,UAClD,eAACrZ,EAAA,EAAD,CAAOZ,MAAO,CAAEia,aAAc,QAA9B,UACE,cAACjC,GAAA,EAAD,CACEzB,QAAS,WAAQna,EAAIkY,aACrBvU,SAAU3D,EAAIoX,cACdxT,MAAO,CAAE6c,YAAa,OAAQ5c,MAAO,SAHvC,uBAOA,cAAC6c,GAAA,EAAD,CACE1E,KAAK,KACLnf,MAAM,+CACN8a,QAAS3X,EAAIoX,cACb1T,SAAU,SAACpB,GAAQtC,EAAIqX,iBAAiB/U,EAAEob,cAAc/F,eAG5D,eAACnT,EAAA,EAAD,CAAOZ,MAAO,CAAEia,aAAc,QAA9B,UACE,cAACjC,GAAA,EAAD,CACEC,MAAM,WACN1B,QAAS,WAAQna,EAAImY,qBACrBlZ,QAASe,EAAI6X,UAAU5Y,QACvB2E,MAAO,CAAEC,MAAO,SAJlB,0BAQA,cAAC8c,GAAA,EAAD,CACEC,OAAQV,EACRW,QAAS,kBAAMV,GAAiB,IAChC9C,SAAS,QACTY,WAAS,EACT6C,OAAQ,CACNC,KAAM,CACJhF,KAAM,uBAERiF,MAAO,CACLlF,QAAS,cAGbzf,OACE,cAACkhB,GAAA,EAAD,CACE3gB,MAAOoD,EAAI6X,UAAUC,KACrBkF,YAAY,kCACZiE,UAAU,EACV9G,QAAS,WArDjBna,EAAI6X,YACNwI,UAAUC,UAAUC,UAAUvgB,EAAI6X,UAAUC,MAC5CqI,GAAiB,KAoDPW,OAAQ,CACNC,KAAM,CACJhF,KAAM,0BArBhB,SA2BE,cAACP,EAAA,EAAD,gCAGJ,cAAC0F,GAAA,EAAD,IACA,cAAC1c,EAAA,EAAD,CAAOZ,MAAO,CAAEia,aAAc,QAAUR,SAAS,QAAjD,SACE,cAACzB,GAAA,EAAD,CACEC,MAAM,SACN1B,QAAS,WAAQna,EAAIiX,SAAS,CAAE/M,KAAM,gBAAiB5J,SAAUN,EAAIM,YAFvE,4CAQJ,eAAC6gB,GAAA,EAAD,CAAM7C,MAAI,EAAC8C,QAAQ,UAAnB,UACE,cAACD,GAAA,EAAKE,IAAN,CAAUxkB,MAAM,aAAaV,KAAM,cAAC,KAAD,CAAY6f,KAAM,KAArD,SACE,cAACsF,GAAD,CAAcre,OAAK,EAAnB,SACE,cAAC,GAAD,QAGJ,cAACke,GAAA,EAAKE,IAAN,CAAUxkB,MAAM,SAASV,KAAM,cAAC,KAAD,CAAS6f,KAAM,KAA9C,SACE,cAACsF,GAAD,CAAcre,OAAK,EAAnB,SACE,cAAC,GAAD,QAGJ,cAACke,GAAA,EAAKE,IAAN,CAAUxkB,MAAM,UAAUV,KAAM,cAAC,KAAD,CAAK6f,KAAM,KAA3C,SACE,cAACsF,GAAD,CAAcre,OAAK,EAAnB,SACE,cAAC,GAAD,eAUNqe,GAAe/kB,YAAO2H,KAAV,kFAAG3H,CAAH,sCAEF,qBAAG4H,MAAkBmU,OAAO6C,WAAW,M,mICxHjDoG,GAAc,oJAEdC,GAAU,MACVC,GAAY,MACZC,GAAY,MACZC,GAAc,MAGPC,GAAc,CAEzBC,SAAU,CAAEC,KAAK,WAAD,OAAaN,GAAb,aAAyBC,GAAzB,KAAuCM,SAAS,WAAD,OAAaL,GAAb,aAA2BC,GAA3B,MAC/DtV,MAAO,CAAEyV,KAAK,UAAD,OAAYN,GAAZ,aAAwBC,GAAxB,KAAsCM,SAAS,UAAD,OAAYL,GAAZ,aAA0BC,GAA1B,MAC3DK,aAAc,CAAEF,KAAK,YAAD,OAAcN,GAAd,aAA0BC,GAA1B,KAAwCM,SAAS,YAAD,OAAcL,GAAd,aAA4BC,GAA5B,MACpEM,YAAa,CAAEH,KAAK,YAAD,OAAcN,GAAd,aAA0BC,GAA1B,KAAwCM,SAAS,YAAD,OAAcL,GAAd,aAA4BC,GAA5B,MACnEO,aAAc,CAAEJ,KAAK,YAAD,OAAcN,GAAd,aAA0BC,GAA1B,KAAwCM,SAAS,YAAD,OAAcL,GAAd,aAA4BC,GAA5B,MACpE5W,OAAQ,CAAE+W,KAAK,YAAD,OAAcN,GAAd,aAA0BC,GAA1B,KAAwCM,SAAS,YAAD,OAAcL,GAAd,aAA4BC,GAA5B,MAC9DQ,QAAS,CAAEL,KAAK,WAAD,OAAaN,GAAb,aAAyBC,GAAzB,KAAuCM,SAAS,WAAD,OAAaL,GAAb,aAA2BC,GAA3B,MAG9DS,KAAM,CAAEC,KAAM,UAAWxlB,MAAO,WAChCylB,SAAU,CAAED,KAAK,WAAD,OAAab,GAAb,aAAyBC,GAAzB,KAAuC5kB,MAAM,WAAD,OAAa2kB,GAAb,aAAyBC,GAAzB,MAC5Dc,SAAU,CAAEF,KAAK,YAAD,OAAcb,GAAd,aAA0BC,GAA1B,KAAwC5kB,MAAM,YAAD,OAAc2kB,GAAd,aAA0BC,GAA1B,OAGlDtd,GAA8B,CACzCqe,aAAc,UACdlK,OAAQ,CACN,QAAW,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC/G,SAAY,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAChH,OAAU,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC9G,WAAc,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAClH,KAAQ6D,MAAM,IAAIC,KAAK,YAEzBf,MAAO,OACPoH,WAAYlB,GACZmB,OAAQ,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAC1CC,SAAU,CACRP,WAAYlB,GACZ/C,WAAY,IACZyE,MAAO,CACLC,GAAI,CAAEnf,SAAU,GAAIof,WAAY,KAChCC,GAAI,CAAErf,SAAU,GAAIof,WAAY,MAChCE,GAAI,CAAEtf,SAAU,GAAIof,WAAY,KAChCG,GAAI,CAAEvf,SAAU,GAAIof,WAAY,MAChCI,GAAI,CAAExf,SAAU,GAAIof,WAAY,KAChCK,GAAI,CAAEzf,SAAU,GAAIof,WAAY,OAGpC/e,MAAO,CACL2U,aAAc,OACd1U,eAAgB,OAChB6W,YAAa,QACblC,aAAc,KACdyK,cAAe,OACfC,oBAAqB,UACrBC,oBAAqB,YAKZ7C,GAAc,CACzB8C,SAAU,SAACzf,GAAD,MAAiB,CACzB4c,KAAM,CACJ8C,UAAW,WAGfxL,MAAO,SAAClU,GAAD,MAAiB,CACtB4c,KAAM,CACJ5F,WAAYhX,EAAMmU,OAAO6C,WAAW,GACpCW,QAAS,UAGbN,KAAM,SAACrX,GAAD,MAAiB,CACrB4c,KAAM,CACJlF,MAAO1X,EAAMkX,SAGjB/W,MAAO,SAACH,GAAD,MAAiB,CACtB4c,KAAM,CACJlF,MAAO1X,EAAMkX,SAGjB+D,KAAM,SAACjb,GAAD,MAAiB,CACrByF,KAAM,CACJiS,MAAO1X,EAAMkX,SAGjB7e,OAAQ,SAAC2H,GAAD,MAAiB,CACvB4c,KAAM,CACJlF,MAAO1X,EAAMmU,OAAOC,QAAQ,MAGhC9U,OAAQ,SAACU,GAAD,MAAiB,CACvBtH,MAAO,CACLgf,MAAO1X,EAAMkX,OAEfzR,KAAM,CACJka,aAAc,OAEhBC,QAAS,CACP5I,WAAYhX,EAAMmU,OAAO6C,WAAW,IAEtC4G,SAAU,CACRlG,MAAO1X,EAAMkX,MACbF,WAAYhX,EAAMmU,OAAOC,QAAQ,MAGrCgF,UAAW,SAACpZ,GAAD,MAAiB,CAC1BtH,MAAO,CACLgf,MAAO1X,EAAMkX,SAGjBgD,SAAU,SAACla,GAAD,MAAiB,CACzBtH,MAAO,CACLmnB,OAAQ,UACRnI,MAAO1X,EAAMkX,OAEfhP,MAAO,CACL2X,OAAQ,aAGZtD,OAAQ,SAACvc,GAAD,MAAiB,CACvBtH,MAAO,CACLmnB,OAAQ,UACRnI,MAAO1X,EAAMkX,OAEfhP,MAAO,CACL2X,OAAQ,UACR7I,WAAYhX,EAAMmU,OAAO6C,WAAW,GACpC8I,YAAa,MACb,YAAa,CACX9I,WAAYhX,EAAMmU,OAAOC,QAAQ,GACjC2L,YAAa/f,EAAMmU,OAAOC,QAAQ,OAIxCoF,QAAS,SAACxZ,GAAD,MAAiB,CACxBggB,WAAY,CACVC,eAAgBjgB,EAAMmU,OAAO6C,WAAW,MAG5CS,OAAQ,SAACzX,GAAD,MAAiB,CACvB4c,KAAM,CACJlF,MAAO,OACP,cAAe,CACbA,MAAM,GAAD,OAAK1X,EAAMkX,MAAX,eACLgJ,QAAS,GACT,iCAAkC,CAChCC,gBAAgB,GAAD,OAAKngB,EAAMmU,OAAOC,QAAQ,GAA1B,oBAKvB4I,KAAM,SAAChd,GAAD,MAAiB,CACrBogB,SAAU,CACR1I,MAAO1X,EAAMkX,MACboH,WAAY,8BACZ1e,SAAU,QAEZygB,QAAS,CACP3I,MAAO1X,EAAMkX,OAEfoJ,UAAW,CACTtJ,WAAW,GAAD,OAAKhX,EAAMmU,OAAO6C,WAAW,GAA7B,eACVuJ,kBAAkB,kBAEpBlN,KAAM,CACJgJ,WAAY,MACZrF,WAAYhX,EAAMmU,OAAO6C,WAAW,GACpCwJ,uBAAwB,MACxBC,wBAAyB,SAG7BlK,QAAS,SAACvW,GAAD,MAAiB,CACxBqT,KAAM,CACJ2D,WAAYhX,EAAMmU,OAAO6C,WAAW,GACpC0J,OAAQ,kBAEVC,MAAO,CACL3J,WAAYhX,EAAMmU,OAAO6C,WAAW,GACpC4J,aAAc,iBACdC,YAAa,oBAGjBrE,QAAS,SAACxc,GAAD,MAAiB,CACxBqT,KAAM,CACJ2D,WAAYhX,EAAMmU,OAAO6C,WAAW,GACpC+I,YAAa,QAEfY,MAAO,CACL3J,WAAYhX,EAAMmU,OAAO6C,WAAW,GACpC+I,YAAa,WClMZ,SAASe,GAAczY,GAAgC,IAArB0Y,EAAoB,uDAAH,EACxD,OAAO1Y,EAAE2Y,QAAQD,GAAQxnB,QAAQ,SAAU,ICY7C,I,GAmLe0nB,GAnLMlM,sBAAkC,SAACjd,EAAOuC,GAC7D,IAAQ6mB,EAAgBppB,EAAhBopB,YACFlhB,EAAQyU,cACR5Y,EAAMgW,KAyKZ,OACE,cAAC,GAAD,CAAQxX,IAAKA,EAAK2a,YAAU,EAACvV,MAAO,CAAE0hB,OAAQnhB,EAAMC,MAAMqf,cAAe8B,cAAe,QAAxF,SACGF,EAzKL,WACE,IAAM9nB,EAAO8nB,EAAY9nB,OACzB,OAAIA,EAAK2M,OAASxC,GAgBpB,SAA0BnK,GACxB,IAAMoL,EAAa3I,EAAIM,SAASsI,QAAQrL,EAAKK,KACvC4nB,EAAiB7c,EAAWK,SAAS,GAErCyc,EAAiB3gB,KAAKsN,KAAK7U,EAAKmP,YAChCgZ,EAAkBnoB,EAAKmP,WAAa+Y,EAAiB,IACrDE,EAAyBH,EAAena,UAAY9N,EAAKmP,WAAa+Y,EAE5E,OACE,eAAC,GAAD,WACE,eAACG,GAAD,CAAclJ,MAAO,EAArB,sBAAkC/T,EAAW2E,KAA7C,OACA,cAACuY,GAAD,IACA,eAAC,GAAD,WACE,2CADF,IACqBJ,EADrB,KACuCzlB,EAAIM,SAASiJ,UAAUZ,EAAWqF,YAAYV,QAErF,eAAC,GAAD,WACE,6CADF,IACuB2X,GAAcS,GADrC,YAGA,eAAC,GAAD,WACE,+CADF,IACyBT,GAAcU,GADvC,WAGA,cAACE,GAAD,IACA,cAAC,GAAD,UAAa,0CACb,cAACzG,GAAA,EAAD,CAAMQ,cAAc,OAAOkG,aAAW,EAAtC,SAEInd,EAAWE,YAAYwB,KAAI,SAAC+D,GAAD,OACzB,cAACgR,GAAA,EAAKC,KAAN,UACE,eAAC,GAAD,WAAcrf,EAAIM,SAAS2M,MAAMmB,EAAWrF,WAAWuE,KAAvD,KAA+D2X,GAAc7W,EAAW/C,UAAY9N,EAAKmP,YAAzG,mBAKR,cAAC,GAAD,UAAa,2CACb,cAAC0S,GAAA,EAAD,CAAMQ,cAAc,OAAOkG,aAAW,EAAtC,SAEInd,EAAWK,SAASqB,KAAI,SAACuE,GAAD,OACtB,cAACwQ,GAAA,EAAKC,KAAN,UACE,eAAC,GAAD,WAAcrf,EAAIM,SAAS2M,MAAM2B,EAAQ7F,WAAWuE,KAApD,KAA4D2X,GAAcrW,EAAQvD,UAAY9N,EAAKmP,YAAnG,sBApDHqZ,CAAiBxoB,GAEtBA,EAAK2M,OAASxC,GACC,iBAAbnK,EAAKK,IAwGb,SAAkCL,GAChC,IAAMyP,EAAWhN,EAAIM,SAAS2M,MAAM1P,EAAKK,KACzC,OACE,eAAC,GAAD,WACE,eAACgoB,GAAD,CAAclJ,MAAO,EAArB,wBAAoC1P,EAASM,KAA7C,OACA,cAACuY,GAAD,IACA,eAAC,GAAD,WAAa,qDAAb,IAA0CZ,GAAc1nB,EAAKmP,WAAa,IAAK,GAA/E,0BA7GOsZ,CAAyBzoB,GACV,qBAAbA,EAAKK,IAiHpB,SAAgCL,GAC9B,IAAMyP,EAAWhN,EAAIM,SAAS2M,MAAM1P,EAAKK,KACnCqoB,EAAoB1oB,EAAKmP,WAAa,IAC5C,OACE,eAAC,GAAD,WACE,eAACkZ,GAAD,CAAclJ,MAAO,EAArB,wBAAoC1P,EAASM,KAA7C,OACA,cAACuY,GAAD,IACA,cAAC,GAAD,UAAa,uDACb,eAACK,GAAD,WACE,gCACE,+BACE,uBACA,sCACA,sCACA,sCACA,2CAGJ,kCACE,+BACE,wCACA,+BAAKjB,GAAc,EAAMgB,EAAmB,GAA5C,OACA,+BAAKhB,GAAc,EAAMgB,EAAoB,IAAK,GAAlD,OACA,+BAAKhB,GAAc,EAAMgB,EAAoB,EAAK,GAAlD,OACA,+BAAKhB,GAAc,EAAMgB,EAAoB,IAAK,GAAlD,UAEF,+BACE,wCACA,+BAAKhB,GAAcgB,EAAmB,GAAtC,OACA,+BAAKhB,GAAcgB,EAAoB,IAAK,GAA5C,OACA,+BAAKhB,GAAcgB,EAAoB,EAAK,GAA5C,OACA,+BAAKhB,GAAcgB,EAAoB,IAAK,GAA5C,UAEF,+BACE,sCACA,+BAAKhB,GAAc,GAAMgB,EAAmB,GAA5C,OACA,+BAAKhB,GAAc,GAAMgB,EAAoB,IAAK,GAAlD,OACA,+BAAKhB,GAAc,GAAMgB,EAAoB,EAAK,GAAlD,OACA,+BAAKhB,GAAc,GAAMgB,EAAoB,IAAK,GAAlD,mBAtJCE,CAAuB5oB,GACR,uBAAbA,EAAKK,IACP,KAqDb,SAAyBL,GACvB,IAAMyP,EAAWhN,EAAIM,SAAS2M,MAAM1P,EAAKK,KACnCwoB,EAAgB7oB,EAAKmP,WAAa,GACxC,OACE,eAAC,GAAD,WACE,eAACkZ,GAAD,CAAclJ,MAAO,EAArB,wBAAoC1P,EAASM,KAA7C,OACA,cAACuY,GAAD,IACA,cAAC,GAAD,UAAa,2EACb,eAACK,GAAD,WACE,gCACE,+BACE,uBACA,sCACA,sCACA,sCACA,2CAGJ,kCACE,+BACE,uCACA,+BAAKjB,GAAcmB,EAAe,GAAlC,OACA,+BAAKnB,GAAcmB,EAAgB,IAAK,GAAxC,OACA,+BAAKnB,GAAcmB,EAAgB,EAAK,GAAxC,OACA,+BAAKnB,GAAcmB,EAAgB,IAAK,GAAxC,UAEF,+BACE,uCACA,+BAAKnB,GAAc,GAAMmB,EAAe,GAAxC,OACA,+BAAKnB,GAAc,GAAMmB,EAAgB,IAAK,GAA9C,OACA,+BAAKnB,GAAc,GAAMmB,EAAgB,EAAK,GAA9C,OACA,+BAAKnB,GAAc,GAAMmB,EAAgB,IAAK,GAA9C,UAEF,+BACE,uCACA,+BAAKnB,GAAc,IAAOmB,EAAe,GAAzC,OACA,+BAAKnB,GAAc,IAAOmB,EAAgB,IAAK,GAA/C,OACA,+BAAKnB,GAAc,IAAOmB,EAAgB,EAAK,GAA/C,OACA,+BAAKnB,GAAc,IAAOmB,EAAgB,IAAK,GAA/C,mBAzFDC,CAAgB9oB,GAElB,KA0JU+oB,GAAgB,UAO/B5L,GAAUne,YAAO8b,MAAV,4EAAG9b,CAAH,oSAGG,qBAAG4H,MAAkBmU,OAAO6C,WAAW,MAWrC,qBAAGhX,MAAkBmU,OAAO6C,WAAW,MASnDyK,GAAerpB,YAAO+H,KAAV,iFAAG/H,CAAH,qBAIZoe,GAAcpe,YAAOif,KAAV,gFAAGjf,CAAH,qBAIXspB,GAAiBtpB,YAAOohB,KAAV,mFAAGphB,CAAH,8DAGE,qBAAG4H,MAAkBmU,OAAO6C,WAAW,MAGvD+K,GAAQ3pB,IAAOgqB,MAAV,0EAAGhqB,CAAH,+JACA,qBAAG4H,MAAkBkX,SAUR,qBAAGlX,MAAkBmU,OAAO6C,WAAW,MAI7C,qBAAGhX,MAAkBmU,OAAO6C,WAAW,MCtOzDqL,KAAUC,IAAIC,MACdF,KAAUC,IAAIE,MAGZH,KAAUI,UAAS,GAGrB,IAAMC,GAAS,CACbvZ,KAAM,OACNwO,QAAS,GACT6K,KAAM,CACJnZ,UAAW,QACXsZ,YAAa,aACbC,cAAe,kBACfC,kBAAmB,GACnBC,qBAAsB,GACtBpH,QAAS,GACTqH,aAAc,KAIZC,GAA2B,CAC/B,CAEEC,SAAU,OACVxjB,MAAO,CACL,kBAAmB,OACnB,oBAAqB,EACrB,iBAAkB,EAClB,sBAAuB,OACvB,6BAA8B,OAC9B,6BAA8B,EAC9B,wBAAyB,EACzB,2BAA4B,OAC5B,6BAA8B,IAGlC,CACEwjB,SAAU,OACVxjB,MAAO,CACL,MAAS,cACT,cAAe,SACf,cAAe,SACf,OAAU,OACV,MAAS,QACT,iBAAkB,QAClB,cAAe,OACf,kBAAmB,EACnB,kBAAmB,EACnB,YAAa,OACb,YAAa,SAGjB,CACEwjB,SAAU,OACVxjB,MAAO,CACL,MAAS,cACT,MAAS,EACT,cAAe,SACf,0BAA2B,IAC3B,qBAAsB,qBACtB,cAAe,IACf,kBAAmB,EACnB,kBAAmB,EACnB,YAAa,OACb,YAAa,OACb,MAASge,GAAYQ,KAAKvlB,MAC1B,aAAc+kB,GAAYQ,KAAKC,KAC/B,qBAAsBT,GAAYQ,KAAKC,OAG3C,CACE+E,SAAU,YACVxjB,MAAO,CACL,iBAAkB,SAClB,aAAc,SACd,iBAAkB,gBAClB,kBAAmB,WACnB,kBAAmB,YAMvB,CACEwjB,SAAU,kBACVxjB,MAAO,CACL,MAAS,UACT,OAAU,OACV,MAAS,UAGb,CACEwjB,SAAU,oBACVxjB,MAAO,CACL,MAAS,oBAGb,CACEwjB,SAAU,8BACVxjB,MAAO,CACL,UAAW,IACX,OAAU,OACV,MAAS,QACT,iBAAkB,QAClB,YAAa,OACb,cAAe,OACf,eAAgB,IAGpB,CACEwjB,SAAU,oDACVxjB,MAAO,CACL,OAAU,OACV,MAAS,UAGb,CACEwjB,SAAU,gBACVxjB,MAAO,CAAE,mBAAoBge,GAAYC,SAASC,OAEpD,CACEsF,SAAU,gDACVxjB,MAAO,CAAE,mBAAoBge,GAAYC,SAASE,WAEpD,CACEqF,SAAU,aACVxjB,MAAO,CAAE,mBAAoBge,GAAYvV,MAAMyV,OAEjD,CACEsF,SAAU,0CACVxjB,MAAO,CAAE,mBAAoBge,GAAYvV,MAAM0V,WAEjD,CACEqF,SAAU,qBACVxjB,MAAO,CAAE,mBAAoBge,GAAYI,aAAaF,OAExD,CACEsF,SAAU,0DACVxjB,MAAO,CAAE,mBAAoBge,GAAYI,aAAaD,WAExD,CACEqF,SAAU,oBACVxjB,MAAO,CAAE,mBAAoBge,GAAYK,YAAYH,OAEvD,CACEsF,SAAU,wDACVxjB,MAAO,CAAE,mBAAoBge,GAAYK,YAAYF,WAEvD,CACEqF,SAAU,qBACVxjB,MAAO,CAAE,mBAAoBge,GAAYM,aAAaJ,OAExD,CACEsF,SAAU,0DACVxjB,MAAO,CAAE,mBAAoBge,GAAYM,aAAaH,WAExD,CACEqF,SAAU,cACVxjB,MAAO,CAAE,mBAAoBge,GAAY7W,OAAO+W,OAElD,CACEsF,SAAU,4CACVxjB,MAAO,CAAE,mBAAoBge,GAAY7W,OAAOgX,WAElD,CACEqF,SAAU,eACVxjB,MAAO,CAAE,mBAAoBge,GAAYO,QAAQL,OAEnD,CACEsF,SAAU,8CACVxjB,MAAO,CAAE,mBAAoBge,GAAYO,QAAQJ,WAKnD,CACEqF,SAAU,8BACVxjB,MAAO,CACL,MAAS,EACT,YAAa,OACb,cAAe,OACf,qBAAsB,EACtB,UAAW,MAGf,CACEwjB,SAAU,gDACVxjB,MAAO,CACL,MAASge,GAAYU,SAASzlB,MAC9B,aAAc+kB,GAAYU,SAASD,KACnC,qBAAsBT,GAAYU,SAASD,OAG/C,CACE+E,SAAU,gDACVxjB,MAAO,CACL,MAASge,GAAYW,SAAS1lB,MAC9B,aAAc+kB,GAAYW,SAASF,KACnC,qBAAsBT,GAAYW,SAASF,QAK3CgF,IAAgB,sBACnB3f,GAA0B,iBADP,gBAEnBA,GAAyB,gBAFN,gBAGnBA,GAAuB,SAHJ,gBAInBA,GAAmC,iBAJhB,gBAKnBA,GAAqB,YALF,gBAMnBA,GAAmB,UANA,IAStB,SAAS4f,GAAapV,EAAiB5R,GACrC,IAAIzD,EAAQ,GACR0qB,EAAa,GACjB,GAAIrV,EAAKhI,OAASxC,GAAkB,CAClC,IAAMqD,EAASzK,EAASsI,QAAQsJ,EAAKtU,KACrCf,EAAQkO,EAAOuC,KACfia,EAAU,UAAMtC,GAAc/S,EAAKxF,YAAzB,aAAyCpM,EAASiJ,UAAUwB,EAAOiD,YAAYV,UACpF,CACL,IAAM1D,EAAOtJ,EAAS2M,MAAMiF,EAAKtU,KAE/Bf,EADEqV,EAAKhI,OAASxC,GACX,yBAAqBkC,EAAK0D,MAEvB1D,EAAK0D,KAEfia,EAAU,UAAMtC,GAAc/S,EAAKxF,YAAzB,UAEZ,MAAM,GAAN,OAAU7P,EAAV,aAAoB0qB,GAGtB,SAASC,GAAetV,EAAiB5R,GACvC,IAAMmnB,EAAU,GACZvV,EAAKhI,OAASxC,IAChB+f,EAAQrc,KAAK,gBAEa,4BADX9K,EAASsI,QAAQsJ,EAAKtU,KAC1BoQ,WACTyZ,EAAQrc,KAAK,WAEbqc,EAAQrc,KAAKic,GAAiBnV,EAAKhI,SAGrCud,EAAQrc,KAAK,cACbqc,EAAQrc,KAAKic,GAAiBnV,EAAKhI,QAErC,OAAOud,EAGT,SAASC,GAAatF,EAAiB9hB,GACrC,IACMzD,EADOyD,EAAS2M,MAAMmV,EAAKxkB,KACd0P,KACbia,EAAU,UAAMtC,GAAc7C,EAAK/Q,gBAAzB,UAChB,MAAM,GAAN,OAAUxU,EAAV,aAAoB0qB,GAGtB,SAASI,GAAgBC,GACvB,UAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAUjpB,QAAS,CACrB,IAAMkpB,EAASD,EAASjpB,QAAQmpB,wBAChCF,EAASjpB,QAAQiF,MAAMR,OAAvB,UAAmC9B,OAAOymB,YAAcF,EAAOvK,IAAM,GAArE,OAmBJ,IA6Le0K,GA7LY,WAAO,IAAD,IAC/B,EAA0ClpB,oBAAS,GAAnD,mBAAOmpB,EAAP,KAAsBC,EAAtB,KACMN,EAAWnpB,iBAA8B,MACzC0pB,EAAQ1pB,iBAA8B,MACtC2pB,EAAW3pB,iBAA8B,MACzC4pB,EAAY5pB,iBAAyB,MAC3C,EAAkCK,mBAAqB,MAAvD,mBAAOwpB,EAAP,KAAkBC,EAAlB,KACMvoB,EAAMgW,KACNwS,GAAe,UAAAxoB,EAAIkX,qBAAJ,eAAmBjL,kBAAmB,KACrDwc,GAAa,UAAAzoB,EAAIkX,qBAAJ,eAAmBlZ,QAAS,KACzC0qB,EAAY1oB,EAAImX,YAsEtB,SAASwR,EAAiBC,GACnBP,EAAU1pB,UACFiqB,EAAGC,eAAeR,EAAU1pB,QAAQmqB,QAC5CC,IAAI,YACTH,EAAGG,IAAI,mBACPV,EAAU1pB,QAAQ+nB,OAAOsC,UACzBX,EAAU1pB,QAAU,KACpB4pB,EAAa,OAGf7pB,qBAAU,WACR,SAASuqB,IACPtB,GAAgBC,GAGlB,OADAtmB,OAAO4nB,iBAAiB,SAAUD,GAC3B,WACL3nB,OAAO6nB,oBAAoB,SAAUF,MAEtC,IAEH,IAAMG,EAAazpB,mBAAa,WAC9B,GAAoB,MAAhB6oB,EACF,OAAO,KAGT,IAAM5qB,EAAM4S,eACN6Y,EAAkB,GAyBxB,OAvBA9gB,OAAOC,QAAQggB,EAAajc,OAAO9D,SAAQ,YAAkB,IAAD,mBAAVyJ,GAAU,WAC1DmX,EAASje,KAAK,CACZke,MAAO,QACP/rB,KAAK,2BACA2U,GADD,IAEFrV,MAAOyqB,GAAapV,EAAMlS,EAAIM,YAEhCmnB,QAASD,GAAetV,EAAMlS,EAAIM,eAGtCkoB,EAAapY,MAAM3H,SAAQ,SAAC2Z,GAC1BiH,EAASje,KAAK,CACZke,MAAO,QACP/rB,KAAK,2BACA6kB,GADD,IAEFmH,OAAQnH,EAAKjR,KACb9U,OAAQ+lB,EAAKhR,GACbvU,MAAO6qB,GAAatF,EAAMpiB,EAAIM,YAEhCmnB,QAASrF,EAAKjR,OAASiR,EAAKhR,GAAK,CAAC,aAAUtT,OAIzC,CAAEF,MAAKyrB,cACb,CAACb,IAEJ,OACE,qCACE,eAACgB,GAAD,CAAgBvmB,OAAK,EAACzE,IA5H1B,SAAqBirB,GACfA,IAAa7B,EAASjpB,UACxBipB,EAASjpB,QAAU8qB,EACnB9B,GAAgBC,GAChBM,GAAiB,KAwHjB,UAEIQ,GACE,cAACgB,GAAA,EAAD,CAAQ9lB,MAAO,CAAEyZ,SAAU,WAAYja,OAAQ,OAAQS,MAAO,QAA9D,SACE,cAAC8lB,EAAA,EAAD,CAAQ3N,KAAM,OAKlBiM,IAAkBS,IACF,MAAdU,EAEI,cAAC,KAAD,CAEEC,SAAUD,EAAWC,SACrBxC,OAAQA,GACRM,WAAYA,GACZyC,qBAAqB,EACrBC,iBAAkB,IAClBC,QAAS,EACTC,QAAS,GACTnmB,MAAO,CAAEyZ,SAAU,WAAYja,OAAQ,OAAQS,MAAO,OAAQmmB,SAAU,UACxEpB,GA1IhB,SAAkBa,GAOlB,IAAwBb,EANlBa,GAAYtB,EAAMxpB,UAAY8qB,IAChCtB,EAAMxpB,QAAU8qB,GAKIb,EAJLT,EAAMxpB,SAKpBsrB,GAAG,SAAU,QAAQ,SAAU3nB,GAChCA,EAAEjG,OAAO6tB,SAAS,YAClB5nB,EAAEjG,OAAO8tB,SAAS,QAAQD,SAAS,YAAYA,SAAS,qBACxD5nB,EAAEjG,OAAO+tB,SAAS,QAAQF,SAAS,YAAYA,SAAS,wBAG1DtB,EAAGqB,GAAG,WAAY,QAAQ,SAAU3nB,GAClCA,EAAEjG,OAAOguB,YAAY,YACrB/nB,EAAEjG,OAAO8tB,SAAS,QAAQE,YAAY,YAAYA,YAAY,qBAC9D/nB,EAAEjG,OAAO+tB,SAAS,QAAQC,YAAY,YAAYA,YAAY,wBAGhEzB,EAAGqB,GAAG,OAAQ,QAAQ,SAAU3nB,GAC9BA,EAAEjG,OAAO6tB,SAAS,WAClB5nB,EAAEjG,OAAO8tB,SAAS,QAAQD,SAAS,WAAWA,SAAS,oBACvD5nB,EAAEjG,OAAO+tB,SAAS,QAAQF,SAAS,WAAWA,SAAS,uBAGzDtB,EAAGqB,GAAG,OAAQ,QAAQ,SAAU3nB,GAC9BA,EAAEjG,OAAOguB,YAAY,WACrB/nB,EAAEjG,OAAO8tB,SAAS,QAAQE,YAAY,WAAWA,YAAY,oBAC7D/nB,EAAEjG,OAAO+tB,SAAS,QAAQC,YAAY,WAAWA,YAAY,uBAG/DzB,EAAGqB,GAAG,YAAa,QAAQ,SAAU3nB,GAAI,IAAD,EAChCwmB,EAASxmB,EAAEjG,OAAOkU,MACpB,UAAA8X,EAAU1pB,eAAV,eAAmBmqB,UAAWA,IAClCH,EAAiBC,GAYrB,SAAwBA,EAAoB1W,GAC1C,IAAMwU,EAASxU,EAAKwU,OAAO,CACzB4D,QAAS,kBAAMlC,EAASzpB,cAAWb,GACnC4oB,OAAQ,CACN6D,UAAW,SAGflC,EAAU1pB,QAAU,CAAE+nB,SAAQoC,OAAQ5W,EAAK3B,MAC3C2B,EAAK+X,GAAG,YAAY,WAAQvD,EAAO8D,YACnC5B,EAAGqB,GAAG,mBAAmB,WAAQvD,EAAO8D,YACxCjC,EAAarW,GArBXuY,CAAe7B,EAAItmB,EAAEjG,YAGvBusB,EAAGqB,GAAG,WAAY,QAAQ,SAAU3nB,GAAI,IAAD,EAC/BwmB,EAASxmB,EAAEjG,OAAOkU,MACpB,UAAA8X,EAAU1pB,eAAV,eAAmBmqB,UAAWA,GAChCH,EAAiBC,SAuFFQ,EAAWxrB,KAapB,cAAC8rB,GAAA,EAAD,CAAQ9lB,MAAO,CAAEyZ,SAAU,WAAYja,OAAQ,OAAQS,MAAO,QAA9D,SACE,eAACW,EAAA,EAAD,WACE,cAAC,KAAD,CAAaqX,MAAM,OAAOG,KAAM,GAAIpY,MAAO,CAAEyZ,SAAU,WAAYC,IAAK,SACxE,eAAC9Y,EAAA,EAAD,CAAOgJ,UAAU,SAAS5J,MAAO,CAAE8mB,IAAK,OAAxC,UACE,cAAClP,EAAA,EAAD,CAAM5X,MAAO,CAAEG,SAAU,QAAzB,mCAGG0kB,EAEC,eAACjN,EAAA,EAAD,CAAM5X,MAAO,CAAE+mB,SAAU,QAAS5mB,SAAU,QAA5C,2BACe0kB,EAAW/oB,SAAU,wBACrB,OAAV+oB,QAAU,IAAVA,OAAA,EAAAA,EAAYnhB,WAAY,MAG7B,iBAQlB,cAAC,GAAD,CAAc9I,IAAK4pB,EAAU/C,YAAaiD,QAO1CkB,GAAiBjtB,YAAO2H,KAAV,yFAAG3H,CAAH,2HC/dpB,SAASquB,GAAYpe,GACnB,OAAOA,EAAEqe,oBAAe/sB,EAAW,CAAEgtB,sBAAuB,IAG9D,IAiHeC,GAjHG,WAAO,IAAD,EAChB/qB,EAAMgW,KACNnJ,EAAM,UAAG7M,EAAIkX,qBAAP,aAAG,EAAmBrK,OA6FlC,OACE,cAACme,GAAD,CAAiB/nB,OAAK,EAAtB,SAEG4J,EA5FD,qCACE,cAACvI,EAAA,EAAD,CAAOoY,MAAO,EAAd,wBACA,cAACuO,GAAD,IACA,cAACC,GAAD,CAAcxO,MAAO,EAArB,6BACA,eAAClB,EAAA,EAAD,WAAOoP,GAAY/d,EAAQ0E,gBAA3B,cACA,cAAC0Z,GAAD,IACA,cAACC,GAAD,CAAcxO,MAAO,EAArB,kCACA,cAAClB,EAAA,EAAD,UAAOoP,GAAY/d,EAAQgF,2BAC3B,cAACoZ,GAAD,IACA,cAACC,GAAD,CAAcxO,MAAO,EAArB,8BACA,eAAClB,EAAA,EAAD,WAAOoP,GAAY/d,EAAQiF,gBAA3B,YACA,cAACmZ,GAAD,IACA,cAACC,GAAD,CAAcxO,MAAO,EAArB,2CACA,eAAClB,EAAA,EAAD,WAAOoP,GAAY/d,EAAQkF,sBAA3B,iBAAgE6Y,GAA2C,EAA/B/d,EAAQkF,sBAApF,gBACA,cAACkZ,GAAD,IAEA,cAAC3mB,EAAA,EAAD,CAAOoY,MAAO,EAAG9Y,MAAO,CAAEga,UAAW,QAArC,mBACA,cAACqN,GAAD,IACA,cAACC,GAAD,CAAcxO,MAAO,EAArB,2BACA,eAAClB,EAAA,EAAD,WAAOoP,GAAY/d,EAAQ2E,mBAAmBC,YAA9C,SACA,cAACwZ,GAAD,IACA,cAACC,GAAD,CAAcxO,MAAO,EAArB,iCACA,eAAClB,EAAA,EAAD,WAAOoP,GAAY/d,EAAQ2E,mBAAmBE,YAA9C,SACA,cAACuZ,GAAD,IACA,cAACC,GAAD,CAAcxO,MAAO,EAArB,wBACA,eAAClB,EAAA,EAAD,WAAOoP,GAAY/d,EAAQ2E,mBAAmBG,YAA9C,SACA,cAACsZ,GAAD,IACA,eAACC,GAAD,CAAcxO,MAAO,EAArB,mBAA+B7P,EAAQ2E,mBAAmBI,MAAQ,EAAI,aAAe,WACrF,eAAC4J,EAAA,EAAD,WAAOoP,GAAY9lB,KAAKqmB,IAAIte,EAAQ2E,mBAAmBI,QAAvD,SACA,cAACqZ,GAAD,IAEA,cAAC3mB,EAAA,EAAD,CAAOoY,MAAO,EAAG9Y,MAAO,CAAEga,UAAW,QAArC,uBACA,cAACqN,GAAD,IACA,eAAC7L,GAAA,EAAD,CAAMQ,cAAc,OAApB,UA0BGrX,OAAOC,QAAQqE,EAAQmF,eAC3B1G,MAAK,SAACpN,EAAGqN,GACR,OAAIrN,EAAE,GAAGmU,MAAQ9G,EAAE,GAAG8G,OAAe,EACjCnU,EAAE,GAAGmU,MAAQ9G,EAAE,GAAG8G,MAAc,EAC7B,KAERhI,KAAI,mCAAEoI,EAAF,KAAe7B,EAAf,YACL,eAACwO,GAAA,EAAKC,KAAN,CAA6Bzb,MAAO,CAAEwnB,cAAe,QAArD,UACE,eAAC9mB,EAAA,EAAD,CAAOoY,MAAO,EAAG9Y,MAAO,CAAEia,aAAc,OAAxC,UACG7d,EAAIM,SAASiJ,UAAUkJ,GAAanF,KADvC,IAC6C,eAAC+d,GAAD,eAAST,GAAYha,EAAUyB,aAE5E,cAACiZ,GAAD,CAAcxF,aAAW,EAAClG,cAAc,OAAOhc,MAAO,CAAEia,aAAc,QAAtE,SAEItV,OAAOC,QAAQoI,EAAU0B,cACtBhH,MAAK,SAACpN,EAAGqN,GACR,OAAIrN,EAAE,GAAKqN,EAAE,IAAY,EACrBrN,EAAE,GAAKqN,EAAE,GAAW,EACjB,KAERlB,KAAI,mCAAER,EAAF,KAAWwI,EAAX,YACH,eAAC+M,GAAA,EAAKC,KAAN,WACE,cAACkM,GAAD,UAAYvrB,EAAIM,SAAS2M,MAAMpD,GAASyD,OAD1C,KAC6D,eAAC+d,GAAD,eAAST,GAAYvY,QADlExI,UAbV4I,MA/BZ,eAAC2M,GAAA,EAAKC,KAAN,WACE,cAAC/a,EAAA,EAAD,CAAOoY,MAAO,EAAG9Y,MAAO,CAAEia,aAAc,OAAxC,mBACA,cAACyN,GAAD,CAAcxF,aAAW,EAAClG,cAAc,OAAxC,SAEIrX,OAAOC,QAAQqE,EAAQoF,mBACpB3G,MAAK,SAACpN,EAAGqN,GACR,OAAIrN,EAAE,GAAKqN,EAAE,IAAY,EACrBrN,EAAE,GAAKqN,EAAE,GAAW,EACjB,KAERlB,KAAI,mCAAER,EAAF,KAAWwI,EAAX,YACH,eAAC+M,GAAA,EAAKC,KAAN,WACE,cAACkM,GAAD,UAAYvrB,EAAIM,SAAS2M,MAAMpD,GAASyD,OAD1C,IAC4D,eAAC+d,GAAD,eAAST,GAAYvY,QADjExI,iBAgD1B,eAACrF,EAAA,EAAD,CAAOZ,MAAO,CAAER,OAAQ,QAASooB,eAAgB,cAAjD,UACE,cAAC,KAAD,CAAa3P,MAAM,OAAOG,KAAM,KAChC,cAACR,EAAA,EAAD,CAAM5X,MAAO,CAAEG,SAAU,QAAzB,qCAaNinB,GAAkBzuB,YAAO2H,KAAV,iFAAG3H,CAAH,uCAKf0uB,GAAW1uB,YAAOohB,KAAV,0EAAGphB,CAAH,sBAIR2uB,GAAe3uB,YAAO+H,KAAV,8EAAG/H,CAAH,qBAIZgvB,GAAYhvB,IAAO+e,KAAV,2EAAG/e,CAAH,sCAKT8uB,GAAQ9uB,IAAO+e,KAAV,uEAAG/e,CAAH,qCAKL+uB,GAAe/uB,YAAO6iB,MAAV,8EAAG7iB,CAAH,qHASA,qBAAG4H,MAAkBmU,OAAO6C,WAAW,MCtJnDsQ,GAAQ,SAACtnB,GAAD,MAA0B,CACtC,4BAA6B,CAC3BunB,SAAU,WAsBCC,GAlBQ,WACrB,IAAMxnB,EAAQyU,cACd,OACE,eAACuI,GAAA,EAAD,CAAMC,QAAQ,UAAd,UACE,cAACD,GAAA,EAAKE,IAAN,CAAUxkB,MAAM,mBAAmBV,KAAM,cAAC,KAAD,CAAQ6f,KAAM,KAAQ4P,GAAIH,GAAnE,SACE,cAACvnB,EAAA,EAAD,CAAWjB,OAAK,EAACW,MAAO,CAAEkY,QAAS,OAAnC,SACE,cAAC,GAAD,QAGJ,cAACqF,GAAA,EAAKE,IAAN,CAAUxkB,MAAM,iBAAiBV,KAAM,cAAC,KAAD,CAAM6f,KAAM,KAAQ4P,GAAIH,GAA/D,SACE,cAAC,GAAD,CAAM7nB,MAAO,CAAEioB,YAAa,OAAQ1Q,WAAYhX,EAAMmU,OAAO6C,WAAW,IAAxE,SACE,cAAC,GAAD,YCNK2Q,GAZC,WACd,MAAoC1lB,GAAoC,CAAExI,IAAK,cAAe4H,aAAc,UAA5G,mBAAOumB,EAAP,KAAmBC,EAAnB,KACA,OACE,qCACE,cAAC,GAAD,IACA,cAAC,GAAD,CAAQtS,KAAqB,SAAfqS,EAAuBpS,SAAU,SAAC/c,GAAYovB,EAAcpvB,EAAQ,OAAS,UAA3F,SACE,cAAC,GAAD,UC2DOqvB,GA3DW,WACxB,IAAMC,EAAYxnB,KACZynB,EAAQpsB,IAoCd,OACE,qCAjCE,cAAC,GAAD,CAAQoZ,YAAU,EAAlB,SACE,cAAC,kBAAD,WACIgT,EAAM7rB,UACN,eAAC8rB,GAAD,CACEC,SAAUC,EACVC,SAAS,EACTC,QAAS,CAAEnI,QAAS,KACpBoI,KAAM,CAAEpI,QAAS,GACjBqI,WAAY,CAAEC,SAAU,EAAKziB,KAAM,SALrC,UAOE,cAACyf,EAAA,EAAD,CAAQ3N,KAAK,OACb,cAAC1X,EAAA,EAAD,CAAOV,MAAO,CAAEga,UAAW,QAA3B,yCAwBR,eAAC,GAAD,CAAMha,MAAO,CAAEia,aAAc,QAA7B,UACE,eAACvZ,EAAA,EAAD,CAAOoY,MAAO,EAAd,wCACiCwP,EAAUtmB,WAD3C,OAGA,eAAC4V,EAAA,EAAD,0GAC8F,uBAD9F,qDAIA,cAACmC,EAAA,EAAD,CAAS/Z,MAAO,CAAEga,UAAW,OAAQC,aAAc,UACnD,cAACrC,EAAA,EAAD,CAAM5X,MAAO,CAAEG,SAAU,QAAzB,SACGmoB,EAAUlmB,eAvBbmmB,EAAM7rB,SAEN,cAAC,GAAD,CAAoBA,SAAU6rB,EAAM7rB,SAAUE,YAAa2rB,EAAM3rB,YAAaE,YAAayrB,EAAMzrB,YAAaqW,kBAAmBoV,EAAMvsB,mBAAvI,SACE,cAAC,GAAD,MAIC,SA0BLwsB,GAAiBQ,iBAAOrwB,IAAOgI,IAAR,uFAAChI,CAAD,uLAUT,qBAAG8vB,aCpERQ,GAbM,WACnB,OACE,uBAAM5Y,OAAO,gCAAgC7V,OAAO,OAAO/B,OAAO,SAASuH,MAAO,CAAEygB,QAAS,OAA7F,UACE,uBAAOna,KAAK,SAASoD,KAAK,WAAW1Q,MAAM,kBAC3C,uBAAOsN,KAAK,SAASoD,KAAK,eAAe1Q,MAAM,MAC/C,uBAAOsN,KAAK,SAASoD,KAAK,YAAY1Q,MAAM,8HAC5C,uBAAOsN,KAAK,SAASoD,KAAK,gBAAgB1Q,MAAM,QAChD,uBAAOsN,KAAK,QAAQhH,IAAI,8DAA8DoK,KAAK,SAASlM,MAAM,gDAAgDiC,IAAI,8BAC9J,qBAAKA,IAAI,GAAGH,IAAI,+CAA+CW,MAAM,IAAIT,OAAO,UCHvE0pB,GAJM,SAAC7wB,GACpB,OAAO,cAACO,EAAA,EAAD,aAAQH,OAAO,SAASC,IAAI,uBAA0BL,KC0ChD8wB,G,oDAhCb,WAAY9wB,GAAe,IAAD,+BACxB,cAAMA,IACD+X,MAAQ,CACXgZ,UAAU,GAHY,E,sDAW1B,c,oBAIA,WACE,OAAI1kB,KAAK0L,MAAMgZ,SAEX,eAAC,GAAD,WACE,cAAC1oB,EAAA,EAAD,uBACA,eAACkX,EAAA,EAAD,qGACyF,uBADzF,8BAE6B,cAAC,GAAD,CAActf,KAAK,qEAAnB,qCAF7B,OAE+J,cAAC,GAAD,CAAcA,KAAK,gCAAnB,mCAF/J,uEAE0T,uBAF1T,qGAQCoM,KAAKrM,MAAMoE,Y,uCArBpB,WACE,MAAO,CAAE2sB,UAAU,O,GATKC,IAAMC,WCmBnBC,GAvBF,WACX,IAAMhpB,EAAQyU,cACd,OACE,cAACgL,EAAA,EAAD,CACE9H,QAAQ,KACRsR,OAAQ,cAACC,GAAD,CAASjqB,OAAQe,EAAMC,MAAM2U,aAA7B,SAA2C,cAAC,EAAD,MAFrD,SAIE,eAACuU,GAAD,CAAerqB,OAAK,EAApB,UACE,cAAC,GAAD,UACE,cAAC,GAAD,MAEF,eAACsqB,GAAD,WACE,eAACC,GAAD,kCACiB,cAAC,GAAD,CAActxB,KAAK,kCAAnB,0BADjB,iCAE6B,cAAC,GAAD,CAAcA,KAAK,qEAAnB,6BAF7B,OAEuJ,cAAC,GAAD,CAAcA,KAAK,gCAAnB,sCAEvJ,cAAC,GAAD,aASJmxB,GAAU9wB,YAAOkxB,KAAV,mEAAGlxB,CAAH,4EAIG,qBAAG4H,MAAkBmU,OAAOC,QAAQ,MAI9C+U,GAAgB/wB,YAAO2H,KAAV,yEAAG3H,CAAH,sDACF,qBAAG4H,MAAkBC,MAAMC,kBAC5B,qBAAGF,MAAkBC,MAAM2U,gBAIrCwU,GAAShxB,YAAO2H,KAAV,kEAAG3H,CAAH,sHASNixB,GAAgBjxB,YAAO2H,KAAV,yEAAG3H,CAAH,kCAER,qBAAG4H,MAAkBkX,SCYjBqS,GApEUC,YAAH,89BAIH,qBAAGxpB,MAAkBse,aAClB6J,GASC,gBAAGnoB,EAAH,EAAGA,MAAH,gBAAkBA,EAAMC,MAAMuf,oBAA9B,YAAqDxf,EAAMC,MAAMsf,wBAW9D,qBAAGvf,MAAkBC,MAAMsf,uBAI3B,qBAAGvf,MAAkBC,MAAMuf,uBAI3B,qBAAGxf,MAAkBC,MAAMsf,uBAI3B,qBAAGvf,MAAkBC,MAAMsf,sBAWIkK,KAAK,8HAKLA,KAAK,8HAKLA,KAAK,8HAKLA,KAAK,+HC7C/CC,OAXf,WACE,OACE,cAACC,EAAA,EAAD,CACE3pB,MAAOA,GACP2c,OAAQA,GAFV,SAIE,cAAC,GAAD,OAOAiN,GAAgB,WACpB,IAAMC,EAAcpV,cACpB,OACE,eAAC,IAAD,CAAezU,MAAO6pB,EAAtB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,UACE,cAAC,GAAD,UACE,cAAC,EAAD,UACE,cAAC,GAAD,cC1BZC,IAASC,OACP,cAAC,GAAD,IACA/sB,SAAS0nB,eAAe,W","file":"static/js/main.3498de6b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/satisfactory_logo_full_color_small.da5e9783.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Anchor } from '@mantine/core';\r\n\r\ninterface Props {\r\n  href: string;\r\n  icon: React.ReactNode;\r\n}\r\n\r\nconst SocialIcon = (props: Props) => {\r\n  const { href, icon } = props;\r\n  return (\r\n    <SAnchor href={href} target='_blank' rel='noopener noreferrer'>\r\n      {icon || null}\r\n    </SAnchor>\r\n  );\r\n};\r\n\r\nexport default SocialIcon;\r\n\r\nconst SAnchor: any = styled(Anchor)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #f0f0f0;\r\n\r\n  &:hover {\r\n    color: #ddd;\r\n  }\r\n`;\r\n","export const GV_U5 = 'U5';\r\nexport const GV_U6 = 'U6';\r\nexport const DEFAULT_GAME_VERSION = GV_U6;\r\nexport const LEGACY_GAME_VERSION = GV_U5;\r\n\r\nexport const SHARE_QUERY_PARAM = 'factory';\r\n\r\nexport const GAME_VERSION_OPTIONS = [\r\n  { value: GV_U6, label: 'Update 6 (Experimental)' },\r\n  { value: GV_U5, label: 'Update 5 (Stable)' },\r\n];\r\n","import axios from \"axios\";\r\nimport { PlainObject } from \"./types\";\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: process.env.REACT_APP_API_BASE_URL,\r\n  responseType: 'json',\r\n});\r\n\r\nconst urlParamsRegex = /:([a-zA-Z0-9-_]+)/g;\r\nfunction parseURL(url: string, data: PlainObject) {\r\n  const parsedData = { ...data };\r\n  const parsedURL = url.replace(urlParamsRegex, (match, key) => {\r\n    const value = data[key];\r\n    if (typeof value === 'string') {\r\n      delete parsedData[key];\r\n      return value;\r\n    }\r\n    if (typeof value === 'number') {\r\n      delete parsedData[key];\r\n      return String(value);\r\n    }\r\n    if (value === undefined) {\r\n      console.error(`Error while parsing url ${url}. No value provided for required parameter ${match}.`);\r\n    } else {\r\n      console.error(`Error while parsing url ${url}. Datatype provided for parameter ${match} cannot be serialized.`);\r\n    }\r\n    return match;\r\n  });\r\n\r\n  return { parsedURL, parsedData };\r\n}\r\n\r\nexport async function get(url: string, data?: PlainObject) {\r\n  const { parsedURL, parsedData } = parseURL(url, data || {});\r\n  return apiClient.request({\r\n    method: 'GET',\r\n    url: parsedURL,\r\n    params: parsedData,\r\n  });\r\n}\r\n\r\nexport async function post(url: string, data?: PlainObject) {\r\n  const { parsedURL, parsedData } = parseURL(url, data || {});\r\n  return apiClient.request({\r\n    method: 'POST',\r\n    url: parsedURL,\r\n    data: parsedData,\r\n  });\r\n}\r\n\r\nexport default apiClient;\r\n","import { useRef, useEffect } from 'react';\r\n\r\nexport function usePrevious<T>(value: T) {\r\n  const ref = useRef<T>();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n  return ref.current;\r\n}\r\n","import { useCallback, useMemo, useState } from \"react\";\r\nimport { usePrevious } from \"../hooks/usePrevious\";\r\nimport { APIRequestData, APIResponseData, APIError, APIAction } from \"./types\";\r\n\r\nexport function useApi<RES extends APIResponseData = APIResponseData, REQ extends APIRequestData = APIRequestData>(apiAction: APIAction<RES, REQ>) {\r\n  const [data, setData] = useState<RES | null>(null);\r\n  const [error, setError] = useState<APIError | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const prevLoading = usePrevious(loading);\r\n\r\n  const requestHandler = useCallback(async (req: REQ) => {\r\n    setLoading(true);\r\n    try {\r\n      const result = await apiAction(req);\r\n      setData(result);\r\n      setError(null);\r\n    } catch (e: any) {\r\n      const apiError: APIError = {\r\n        status: e.status || 0,\r\n        message: e.message || 'Unknown error',\r\n      }\r\n      setData(null);\r\n      setError(apiError);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const api = useMemo(() => ({\r\n    data,\r\n    error,\r\n    loading,\r\n    completedThisFrame: !loading && !!prevLoading,\r\n    request: requestHandler,\r\n  }), [data, error, loading, prevLoading, requestHandler]);\r\n\r\n  return api;\r\n};\r\n","import React, { createContext, useContext, useState, useEffect, useMemo, useCallback } from 'react';\r\nimport { useGetInitialize } from '../../api/modules/initialize/useGetInitialize';\r\nimport { GameData } from './types';\r\nimport { DEFAULT_GAME_VERSION, LEGACY_GAME_VERSION, SHARE_QUERY_PARAM } from './consts';\r\nimport { usePrevious } from '../../hooks/usePrevious';\r\nimport { FactoryOptions } from '../production/types';\r\nimport { usePageTitle } from '../../hooks/usePageTitle';\r\n\r\n\r\n// TYPE\r\nexport type FactoryInitializer = {\r\n  factoryConfig: any | null,\r\n  shareKey: string | null,\r\n  legacyEncoding: string | null,\r\n  sessionState: FactoryOptions | null,\r\n};\r\n\r\nexport type GameDataContextType = {\r\n  gameData: GameData | null,\r\n  initializer: FactoryInitializer | null,\r\n  loading: boolean,\r\n  completedThisFrame: boolean,\r\n  gameVersion: string,\r\n  setGameVersion: (version: string) => void,\r\n};\r\n\r\n\r\n// CONTEXT\r\nexport const GameDataContext = createContext<GameDataContextType | null>(null);\r\nGameDataContext.displayName = 'GameDataContext';\r\n\r\n\r\n// HELPER HOOK\r\nexport function useGameDataContext() {\r\n  const ctx = useContext(GameDataContext);\r\n  if (!ctx) {\r\n    throw new Error('GameDataContext is null');\r\n  }\r\n  return ctx;\r\n}\r\n\r\n\r\n// PROVIDER\r\ntype PropTypes = { children: React.ReactNode };\r\nexport const GameDataProvider = ({ children }: PropTypes) => {\r\n  const [gameData, setGameData] = useState<GameData | null>(null);\r\n  const [gameVersion, setGameVersion] = useState('');\r\n  const [initializer, setInitializer] = useState<FactoryInitializer | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const prevLoading = usePrevious(loading);\r\n  const [needToFetchGameData, setNeedToFetchGameData] = useState(true);\r\n  const completedThisFrame = useMemo(() => !loading && loading !== prevLoading, [loading, prevLoading]);\r\n\r\n  const getInitialize = useGetInitialize();\r\n\r\n  const pageTitle = useMemo(() => {\r\n    const base = 'Yet Another Factory Planner';\r\n    let versionPart = '';\r\n    if (gameVersion) {\r\n      versionPart = `[${gameVersion}] `;\r\n    }\r\n    return versionPart + base;\r\n  }, [gameVersion]);\r\n\r\n  usePageTitle(pageTitle);\r\n\r\n  useEffect(() => {\r\n    if (needToFetchGameData) {\r\n      setLoading(true);\r\n      setNeedToFetchGameData(false);\r\n      setGameData(null);\r\n      setInitializer(null);\r\n\r\n      const params = new URLSearchParams(window.location.search);\r\n      const shareKey = params.get(SHARE_QUERY_PARAM);\r\n      const legacyEncoding = params.get('f');\r\n      const sessionVersion = window.sessionStorage?.getItem('game-version');\r\n      const sessionState = window.sessionStorage?.getItem('state');\r\n\r\n      if (shareKey) {\r\n        getInitialize.request({ factoryKey: shareKey });\r\n      } else if (legacyEncoding) {\r\n        getInitialize.request({ gameVersion: LEGACY_GAME_VERSION });\r\n      } else if (sessionVersion && sessionState) {\r\n        getInitialize.request({ gameVersion: sessionVersion });\r\n      } else {\r\n        getInitialize.request({ gameVersion: gameVersion || DEFAULT_GAME_VERSION });\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [needToFetchGameData]);\r\n\r\n  useEffect(() => {\r\n    if (getInitialize.completedThisFrame) {\r\n      const gameData = getInitialize.data?.game_data || null;\r\n      const factoryConfig = getInitialize.data?.factory_config || null;\r\n\r\n      const params = new URLSearchParams(window.location.search);\r\n      const shareKey = params.get(SHARE_QUERY_PARAM);\r\n      const legacyEncoding = params.get('f');\r\n      const sessionVersion = window.sessionStorage?.getItem('game-version');\r\n      let sessionState: FactoryOptions | null = null;\r\n      try {\r\n        const sessionStateJSON = window.sessionStorage?.getItem('state');\r\n        if (sessionVersion && sessionStateJSON) {\r\n          sessionState = JSON.parse(sessionStateJSON);\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n\r\n      window.history.replaceState(null, '', `${window.location.pathname}`);\r\n      window.sessionStorage?.removeItem('game-version');\r\n      window.sessionStorage?.removeItem('state');\r\n\r\n      if (factoryConfig?.gameVersion) {\r\n        setGameVersion(factoryConfig.gameVersion);\r\n      } else if (legacyEncoding) {\r\n        setGameVersion(LEGACY_GAME_VERSION);\r\n      } else if (sessionVersion && sessionState) {\r\n        setGameVersion(sessionVersion);\r\n      } else {\r\n        setGameVersion(gameVersion || DEFAULT_GAME_VERSION);\r\n      }\r\n\r\n      setGameData(gameData);\r\n      setInitializer({\r\n        factoryConfig,\r\n        shareKey,\r\n        legacyEncoding,\r\n        sessionState,\r\n      });\r\n      setLoading(false);\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [getInitialize]);\r\n\r\n  const handleSetGameVersion = useCallback((version: string) => {\r\n    if (version !== gameVersion) {\r\n      setGameVersion(version);\r\n      setNeedToFetchGameData(true);\r\n      window.sessionStorage?.removeItem('game-version');\r\n      window.sessionStorage?.removeItem('state');\r\n    }\r\n  }, [gameVersion]);\r\n\r\n  const ctxValue = useMemo(() => {\r\n    return {\r\n      gameData,\r\n      initializer,\r\n      loading,\r\n      completedThisFrame,\r\n      gameVersion,\r\n      setGameVersion: handleSetGameVersion,\r\n    }\r\n  }, [completedThisFrame, gameData, gameVersion, handleSetGameVersion, initializer, loading]);\r\n\r\n  return (\r\n    <GameDataContext.Provider value={ctxValue}>\r\n      {children}\r\n    </GameDataContext.Provider>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\n\r\nexport function usePageTitle(value: string) {\r\n  useEffect(() => {\r\n    document.title = value;\r\n  }, [value])\r\n}\r\n","import { get } from '../..';\r\nimport { useApi } from \"../../useApi\";\r\nimport { GameData } from '../../../contexts/gameData/types';\r\n\r\ninterface GetSharedFactoryRequest {\r\n  factoryKey?: string,\r\n  gameVersion?: string,\r\n}\r\n\r\ninterface GetSharedFactoryResponse {\r\n  factory_config?: any,\r\n  game_data: GameData,\r\n}\r\n\r\nexport function useGetInitialize() {\r\n  return useApi<GetSharedFactoryResponse, GetSharedFactoryRequest>(async (req) => {\r\n    const res = await get('/initialize', req);\r\n    const json = res.data;\r\n    return json.data;\r\n  });\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Title, Container, Group, Select } from '@mantine/core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub, faTwitter, faDiscord } from '@fortawesome/free-brands-svg-icons';\r\nimport logo from '../../../assets/satisfactory_logo_full_color_small.png';\r\nimport SocialIcon from '../../../components/SocialIcon';\r\nimport { DEFAULT_GAME_VERSION, GAME_VERSION_OPTIONS } from '../../../contexts/gameData/consts';\r\nimport { useGameDataContext } from '../../../contexts/gameData';\r\n\r\nconst SiteHeader = () => {\r\n  const ctx = useGameDataContext();\r\n\r\n  return (\r\n    <HeaderContainer fluid>\r\n      <img src={logo} height={42} alt='Satisfactory logo' />\r\n      <MainTitle>[Yet Another Factory Planner]</MainTitle>\r\n      <BetaTag>(BETA)</BetaTag>\r\n      <RightAlign>\r\n        <Select\r\n          aria-label=\"Game version\"\r\n          data={GAME_VERSION_OPTIONS}\r\n          value={ctx.gameVersion}\r\n          onChange={(value) => { ctx.setGameVersion(value || DEFAULT_GAME_VERSION); }}\r\n          disabled={ctx.loading}\r\n          style={{ width: '200px' }}\r\n        />\r\n        <SocialIcon href='https://github.com/lydianlights/yet-another-factory-planner' icon={<FontAwesomeIcon icon={faGithub} fontSize={32} />} />\r\n        <SocialIcon href='https://discord.gg/p7e9ZzRHCm' icon={<FontAwesomeIcon icon={faDiscord} fontSize={32} />} />\r\n        <SocialIcon href='https://twitter.com/LydianLights' icon={<FontAwesomeIcon icon={faTwitter} fontSize={32} />} />\r\n      </RightAlign>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default SiteHeader;\r\n\r\nconst HeaderContainer = styled(Container)`\r\n  display: flex;\r\n  margin-left: ${({ theme }) => theme.other.pageLeftMargin};\r\n  padding: 0px;\r\n`;\r\n\r\nconst MainTitle = styled(Title)`\r\n  position: relative;\r\n  top: 1px;\r\n  font-size: 32px;\r\n  color: #fff;\r\n  margin-left: 25px;\r\n  white-space: nowrap;\r\n  font-family: 'Indie Flower', sans-serif;\r\n`;\r\n\r\nconst BetaTag = styled.div`\r\n  position: relative;\r\n  left: 7px;\r\n  top: 3px;\r\n  font-size: 24px;\r\n  color: #fff;\r\n  font-family: 'Fjalla One', sans-serif;\r\n  transform: rotate(20deg);\r\n`;\r\n\r\nconst RightAlign = styled(Group)`\r\n  display: flex;\r\n  margin-left: auto;\r\n  margin-right: 30px;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/stripe-bg.ddc4de7e.png\";","import { useLocalStorage } from '@mantine/hooks';\r\nimport React, { createContext, useCallback, useContext, useMemo, useState } from 'react';\r\nimport seedrandom from 'seedrandom';\r\n\r\n\r\n// TYPE\r\nexport type GlobalContextType = {\r\n  ficsitTip: string,\r\n  engineerId: string,\r\n  refreshTip: () => void,\r\n};\r\n\r\n\r\n// CONTEXT\r\nexport const GlobalContext = createContext<GlobalContextType | null>(null);\r\nGlobalContext.displayName = 'GlobalContext';\r\n\r\n\r\n// HELPER HOOK\r\nexport function useGlobalContext() {\r\n  const ctx = useContext(GlobalContext);\r\n  if (!ctx) {\r\n    throw new Error('GlobalContext is null');\r\n  }\r\n  return ctx;\r\n}\r\n\r\n\r\nconst ONE_HOUR = 1000 * 60 * 60;\r\nconst TIPS = [\r\n  'Pet the lizard doggo!',\r\n  'Get back to work!',\r\n  'Update 6 now available!',\r\n  'Arachnophobia mode enabled.',\r\n  'FICSIT does not waste.',\r\n  'Linear programming!',\r\n  'Do not pet the spiders.',\r\n  'Just slap some beams on it!',\r\n  'Just 5 more minutes...',\r\n  'Thanks, Jace. Helps a lot!',\r\n  'Thanks, Snutt. Helps a lot!',\r\n  'Check out the new Spire Coast!',\r\n  'ADA says it\\'s my turn to play with the nuke nobelisk.',\r\n  'Harvest.',\r\n];\r\n\r\nfunction getTip() {\r\n  const seed = Math.floor(new Date().getTime() / (0.5 * ONE_HOUR));\r\n  const rng = seedrandom(String(seed));\r\n  const index = Math.floor(rng() * TIPS.length);\r\n  return `FICSIT Tip #${index}: ${TIPS[index]}`;\r\n}\r\n\r\nfunction getDefaultId() {\r\n  return Math.floor(Math.random() * 1e7).toString().padStart(7, '0');\r\n}\r\n\r\n\r\n// PROVIDER\r\ntype PropTypes = { children: React.ReactNode };\r\nexport const GlobalContextProvider = ({ children }: PropTypes) => {\r\n  const [engineerId] = useLocalStorage<string>({ key: 'engineer-id', defaultValue: getDefaultId() });\r\n  const [tip, setTip] = useState(getTip());\r\n\r\n  const refreshTip = useCallback(() => {\r\n    const tip = getTip();\r\n    setTip(tip);\r\n  }, []);\r\n  \r\n  const ctxValue = useMemo(() => {\r\n    return {\r\n      ficsitTip: tip,\r\n      engineerId,\r\n      refreshTip,\r\n    }\r\n  }, [engineerId, refreshTip, tip]);\r\n\r\n  return (\r\n    <GlobalContext.Provider value={ctxValue}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n}\r\n","import { useWindowEvent } from '@mantine/hooks';\r\nimport { useState, useCallback, useEffect } from 'react';\r\n\r\ninterface UseSessionStorage<T> {\r\n  /** Session storage key */\r\n  key: string;\r\n\r\n  /** Default value that will be set if value is not found in session storage */\r\n  defaultValue?: T;\r\n\r\n  /** If set to true, value will be update is useEffect after mount */\r\n  getInitialValueInEffect?: boolean;\r\n\r\n  /** Function to serialize value into string to be save in session storage */\r\n  serialize?(value: T | undefined): string;\r\n\r\n  /** Function to deserialize string value from session storage to value */\r\n  deserialize?(value: string | undefined): T;\r\n}\r\n\r\nfunction serializeJSON<T>(value: T | undefined) {\r\n  try {\r\n    return JSON.stringify(value);\r\n  } catch (error) {\r\n    throw new Error('@mantine/hooks use-session-storage: Failed to serialize the value');\r\n  }\r\n}\r\n\r\nfunction deserializeJSON(value: string | undefined) {\r\n  try {\r\n    return JSON.parse((value as string));\r\n  } catch {\r\n    return value;\r\n  }\r\n}\r\n\r\nexport function useSessionStorage<T = string>({\r\n  key,\r\n  defaultValue = undefined,\r\n  getInitialValueInEffect = false,\r\n  deserialize = deserializeJSON,\r\n  serialize = serializeJSON,\r\n}: UseSessionStorage<T>) {\r\n  const [value, setValue] = useState<T>(\r\n    typeof window !== 'undefined' && 'sessionStorage' in window && !getInitialValueInEffect\r\n      ? deserialize(window.sessionStorage.getItem(key) ?? undefined)\r\n      : ((defaultValue ?? '') as T)\r\n  );\r\n\r\n  const setSessionStorageValue = useCallback(\r\n    (val: T | ((prevState: T) => T)) => {\r\n      if (val instanceof Function) {\r\n        setValue((current) => {\r\n          const result = val(current);\r\n          window.sessionStorage.setItem(key, serialize(result));\r\n          window.dispatchEvent(\r\n            new CustomEvent('mantine-session-storage', { detail: { key, value: val(current) } })\r\n          );\r\n          return result;\r\n        });\r\n      } else {\r\n        window.sessionStorage.setItem(key, serialize(val));\r\n        window.dispatchEvent(\r\n          new CustomEvent('mantine-session-storage', { detail: { key, value: val } })\r\n        );\r\n        setValue(val);\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [key]\r\n  );\r\n\r\n  useWindowEvent('storage', (event) => {\r\n    if (event.storageArea === window.sessionStorage && event.key === key) {\r\n      setValue(deserialize(event.newValue ?? undefined));\r\n    }\r\n  });\r\n\r\n  useWindowEvent('mantine-session-storage', (event) => {\r\n    if (event.detail.key === key) {\r\n      setValue(event.detail.value);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (defaultValue !== undefined && value === undefined) {\r\n      setSessionStorageValue(defaultValue);\r\n    }\r\n  }, [defaultValue, value, setSessionStorageValue]);\r\n\r\n  useEffect(() => {\r\n    if (getInitialValueInEffect) {\r\n      setValue(\r\n        deserialize(window.sessionStorage.getItem(key) ?? undefined) || ((defaultValue ?? '') as T)\r\n      );\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return [value === undefined ? defaultValue : value, setSessionStorageValue] as const;\r\n}\r\n\r\nexport const useSessionStorageValue = useSessionStorage;\r\n","export class GraphError extends Error {\r\n  helpText?: string;\r\n  constructor(msg: string, helpText?: string) {\r\n    super(msg);\r\n    this.helpText = helpText;\r\n  }\r\n}\r\n","import loadGLPK, { GLPK, LP, Var } from 'glpk.js';\r\nimport { nanoid } from 'nanoid';\r\nimport { FactoryOptions, RecipeSelectionMap } from '../../contexts/production/types';\r\nimport { GameData } from '../../contexts/gameData/types';\r\nimport { GraphError } from '../error/GraphError';\r\n\r\nconst EPSILON = 1e-8;\r\nconst MIN_RESOURCE_WEIGHT = 0.0001;\r\nconst MAXIMIZE_WEIGHT = 1e5;\r\nconst ENFORCE_BIN_WEIGHT = 1000;\r\nconst TIME_LIMIT = 3.0;\r\nconst RATE_TARGET_KEY = 'RATE_TARGET_PASS';\r\n\r\nexport const NODE_TYPE = {\r\n  FINAL_PRODUCT: 'FINAL_PRODUCT',\r\n  SIDE_PRODUCT: 'SIDE_PRODUCT',\r\n  INPUT_ITEM: 'INPUT_ITEM',\r\n  HAND_GATHERED_RESOURCE: 'HAND_GATHERED_RESOURCE',\r\n  RESOURCE: 'RESOURCE',\r\n  RECIPE: 'RECIPE',\r\n};\r\n\r\nexport const POINTS_ITEM_KEY = 'POINTS_ITEM_KEY';\r\n\r\ntype Inputs = {\r\n  [key: string]: {\r\n    amount: number,\r\n    weight: number,\r\n    type: string,\r\n  }\r\n};\r\n\r\ntype RateTargets = {\r\n  [key: string]: {\r\n    value: number,\r\n    recipe: string | null,\r\n    isPoints: boolean,\r\n  }\r\n};\r\n\r\ntype MaximizeTargets = { key: string, priority: number };\r\n\r\ntype GlobalWeights = {\r\n  resources: number,\r\n  power: number,\r\n  complexity: number,\r\n  buildings: number\r\n};\r\n\r\ntype ProductionSolution = { [key: string]: number };\r\ntype ProductionAmount = { recipeKey: string, amount: number };\r\ntype ItemProductionTotals = {\r\n  [key: string]: {\r\n    producedBy: ProductionAmount[],\r\n    usedBy: ProductionAmount[],\r\n  }\r\n};\r\n\r\nexport type SolverResults = {\r\n  productionGraph: ProductionGraph | null,\r\n  report: Report | null,\r\n  timestamp: number,\r\n  computeTime: number,\r\n  error: GraphError | null,\r\n};\r\n\r\nexport type Report = {\r\n  pointsProduced: number,\r\n  powerUsageEstimate: {\r\n    production: number,\r\n    extraction: number,\r\n    generators: number,\r\n    total: number,\r\n  },\r\n  resourceEfficiencyScore: number,\r\n  totalBuildArea: number,\r\n  estimatedFoundations: number,\r\n  buildingsUsed: {\r\n    [key: string]: {\r\n      count: number,\r\n      materialCost: {\r\n        [key: string]: number,\r\n      }\r\n    },\r\n  },\r\n  totalMaterialCost: {\r\n    [key: string]: number,\r\n  },\r\n}\r\n\r\nexport type ProductionGraph = {\r\n  nodes: { [key: string]: GraphNode },\r\n  edges: GraphEdge[],\r\n};\r\n\r\nexport type GraphNode = {\r\n  id: string,\r\n  key: string,\r\n  type: string,\r\n  multiplier: number,\r\n};\r\n\r\nexport type GraphEdge = {\r\n  key: string,\r\n  from: string,\r\n  to: string,\r\n  productionRate: number,\r\n};\r\n\r\ntype ItemMap = {\r\n  [key: string]: boolean;\r\n}\r\n\r\nexport class ProductionSolver {\r\n  private gameData: GameData;\r\n  private globalWeights: GlobalWeights;\r\n  private inputs: Inputs;\r\n  private rateTargets: RateTargets;\r\n  private maximizeTargets: MaximizeTargets[];\r\n  private hasPointsTarget: boolean;\r\n  private allowedRecipes: RecipeSelectionMap;\r\n  private allowedItems: ItemMap;\r\n  private scale: number;\r\n\r\n  public constructor(options: FactoryOptions, gameData: GameData) {\r\n    this.gameData = gameData;\r\n\r\n    this.allowedRecipes = options.allowedRecipes;\r\n    this.allowedItems = {};\r\n\r\n    Object.entries(this.allowedRecipes).forEach(([recipeKey, allowed]) => {\r\n      if (!allowed) return;\r\n      const recipeInfo = this.gameData.recipes[recipeKey];\r\n      recipeInfo.ingredients.forEach((i) => {\r\n        this.allowedItems[i.itemClass] = true;\r\n      });\r\n      recipeInfo.products.forEach((p) => {\r\n        this.allowedItems[p.itemClass] = true;\r\n      });\r\n    });\r\n    \r\n    this.globalWeights = {\r\n      resources: Number(options.weightingOptions.resources),\r\n      power: Number(options.weightingOptions.power),\r\n      complexity: Number(options.weightingOptions.complexity),\r\n      buildings: Number(options.weightingOptions.buildings),\r\n    };\r\n\r\n    this.validateNumber(this.globalWeights.resources);\r\n    this.validateNumber(this.globalWeights.power);\r\n    this.validateNumber(this.globalWeights.complexity);\r\n    this.validateNumber(this.globalWeights.buildings);\r\n\r\n    const maxGlobalWeight = Math.max(\r\n      this.globalWeights.resources,\r\n      this.globalWeights.power,\r\n      this.globalWeights.complexity,\r\n      this.globalWeights.buildings\r\n    );\r\n\r\n    this.globalWeights.resources = (this.globalWeights.resources / maxGlobalWeight) + MIN_RESOURCE_WEIGHT;\r\n    this.globalWeights.power = (this.globalWeights.power / maxGlobalWeight);\r\n    this.globalWeights.complexity = 1000 * (this.globalWeights.complexity / maxGlobalWeight);\r\n    this.globalWeights.buildings = (this.globalWeights.buildings / maxGlobalWeight);\r\n\r\n    this.inputs = {};\r\n\r\n    options.inputResources.forEach((item) => {\r\n      const resourceData = this.gameData.resources[item.itemKey];\r\n      if (!resourceData) return;\r\n      const amount = item.unlimited ? Infinity : Number(item.value);\r\n      this.validateNumber(amount);\r\n      if (!amount) return;\r\n      const weight = Number(item.weight);\r\n      this.validateNumber(weight);\r\n      this.inputs[item.itemKey] = {\r\n        amount,\r\n        weight,\r\n        type: NODE_TYPE.RESOURCE,\r\n      }\r\n    });\r\n\r\n    const maxResourceWeight = Math.max(...Object.values(this.inputs).map((i) => i.weight));\r\n    Object.values(this.inputs).forEach((i) => { i.weight /= maxResourceWeight });\r\n\r\n    options.inputItems.forEach((item) => {\r\n      if (!item.itemKey) return;\r\n      const amount = item.unlimited ? Infinity : Number(item.value);\r\n      this.validateNumber(amount);\r\n      if (!amount) return;\r\n      if (!this.inputs[item.itemKey]) {\r\n        this.inputs[item.itemKey] = {\r\n          amount,\r\n          weight: 0,\r\n          type: NODE_TYPE.INPUT_ITEM,\r\n        }\r\n      } else {\r\n        this.inputs[item.itemKey].amount += amount;\r\n      }\r\n    });\r\n\r\n    if (options.allowHandGatheredItems) {\r\n      Object.keys(this.gameData.handGatheredItems).forEach((item) => {\r\n        this.inputs[item] = {\r\n          amount: Infinity,\r\n          weight: 1000,\r\n          type: NODE_TYPE.HAND_GATHERED_RESOURCE,\r\n        };\r\n      });\r\n    }\r\n\r\n    this.inputs['Desc_Gift_C'] = {\r\n      amount: Infinity,\r\n      weight: 1000,\r\n      type: NODE_TYPE.HAND_GATHERED_RESOURCE,\r\n    };\r\n\r\n    this.rateTargets = {};\r\n    this.maximizeTargets = [];\r\n    this.hasPointsTarget = false;\r\n    this.scale = 0;\r\n\r\n    const perMinTargets: RateTargets = {};\r\n    const recipeTargets: RateTargets = {};\r\n    options.productionItems.forEach((item) => {\r\n      if (!item.itemKey) return;\r\n      const amount = Number(item.value);\r\n      this.validateNumber(amount);\r\n      if (!amount) return;\r\n      if (this.inputs[item.itemKey]) throw new GraphError('INVALID INPUT', 'You can\\'t set the same item as both an input and an output. Double check your factory settings.');\r\n      const isPoints = item.itemKey === POINTS_ITEM_KEY;\r\n      if (isPoints) {\r\n        this.hasPointsTarget = true;\r\n      }\r\n      switch (item.mode) {\r\n        case 'per-minute':\r\n          this.scale += amount;\r\n          if (perMinTargets[item.itemKey]) {\r\n            perMinTargets[item.itemKey].value += amount;\r\n          } else {\r\n            perMinTargets[item.itemKey] = {\r\n              value: amount,\r\n              recipe: null,\r\n              isPoints,\r\n            };\r\n          }\r\n          break;\r\n        case 'maximize':\r\n          const existingTarget = this.maximizeTargets.find((t) => t.key === item.itemKey);\r\n          if (existingTarget) {\r\n            if (existingTarget.priority < amount) {\r\n              existingTarget.priority = amount;\r\n            }\r\n          } else {\r\n            this.maximizeTargets.push({\r\n              key: item.itemKey,\r\n              priority: amount,\r\n            });\r\n          }\r\n          break;\r\n        default:\r\n          const recipeKey = item.mode;\r\n          const recipeInfo = this.gameData.recipes[recipeKey];\r\n          if (recipeInfo) {\r\n            if (!this.allowedRecipes[recipeKey]) {\r\n              throw new GraphError('CANNOT TARGET DISABLED RECIPE', 'Make sure the recipe you are targeting is enabled in the Recipes tab.');\r\n            }\r\n            const target = recipeInfo.products.find((p) => p.itemClass === item.itemKey)!;\r\n            this.scale += target.perMinute * amount;\r\n            if (perMinTargets[item.itemKey]) {\r\n              perMinTargets[item.itemKey].value += target.perMinute * amount;\r\n            } else {\r\n              perMinTargets[item.itemKey] = {\r\n                value: target.perMinute * amount,\r\n                recipe: null,\r\n                isPoints: false,\r\n              };\r\n            }\r\n            if (recipeTargets[recipeKey]) {\r\n              recipeTargets[recipeKey].value += amount;\r\n            } else {\r\n              recipeTargets[recipeKey] = {\r\n                value: amount,\r\n                recipe: recipeKey,\r\n                isPoints: false,\r\n              };\r\n            }\r\n          } else {\r\n            throw new GraphError('INVALID OUTPUT MODE SELECTION', 'Something really broke... Try refreshing or resetting your factory.');\r\n          }\r\n      }\r\n    });\r\n\r\n    if (this.scale === 0) {\r\n      this.scale = 1;\r\n    }\r\n\r\n    this.maximizeTargets\r\n      .sort((a, b) => {\r\n        if (a.priority > b.priority) return -1;\r\n        if (a.priority < b.priority) return 1;\r\n        throw new GraphError('DUPLICATE MAXIMIZATION PRIORITY', 'Two items have the same maximization priority, which is currently not allowed.');\r\n      });\r\n\r\n    this.rateTargets = {\r\n      ...perMinTargets,\r\n      ...recipeTargets,\r\n    };\r\n    if (Object.keys(this.rateTargets).length === 0 && this.maximizeTargets.length === 0) {\r\n      throw new GraphError('NO OUTPUTS SET', 'Open the control panel to get started.');\r\n    }\r\n  }\r\n\r\n  private validateNumber(num: Number) {\r\n    if (Number.isNaN(num)) {\r\n      throw new GraphError('INVALID VALUE: NOT A NUMBER', 'Double check your factory settings.');\r\n    } else if (num < 0) {\r\n      throw new GraphError('INVALID VALUE: NEGATIVE NUMBER', 'Double check your factory settings.');\r\n    }\r\n  }\r\n\r\n  public async exec(): Promise<SolverResults> {\r\n    const timestamp = performance.now();\r\n    try {\r\n      const glpk = await loadGLPK();\r\n      const productionSolution = await this.productionSolverPass(RATE_TARGET_KEY, this.inputs, glpk);\r\n      let productionGraph = this.generateProductionGraph(productionSolution);\r\n\r\n      for (const target of this.maximizeTargets) {\r\n        const remainingInputs: Inputs = {};\r\n        for (const [inputKey, input] of Object.entries(this.inputs)) {\r\n          const inputNode = Object.values(productionGraph.nodes).find((n) => n.key === inputKey);\r\n          let usedAmount = 0;\r\n          if (inputNode) {\r\n            usedAmount = inputNode.multiplier;\r\n          }\r\n          const diff = input.amount - usedAmount;\r\n          if (diff > EPSILON) {\r\n            remainingInputs[inputKey] = {\r\n              ...input,\r\n              amount: diff,\r\n            };\r\n          }\r\n        }\r\n        const solution = await this.productionSolverPass(target.key, remainingInputs, glpk);\r\n        for (const [key, multiplier] of Object.entries(solution)) {\r\n          if (productionSolution[key]) {\r\n            productionSolution[key] += multiplier;\r\n          } else {\r\n            productionSolution[key] = multiplier;\r\n          }\r\n        }\r\n        productionGraph = this.generateProductionGraph(productionSolution);\r\n      }\r\n\r\n      if (Object.keys(productionGraph.nodes).length === 0) {\r\n        throw new GraphError('SOLUTION IS EMPTY', 'For some reason the solution for your parameters is an empty factory. Double check that your factory settings make sense.');\r\n      }\r\n      const report = this.generateProductionReport(productionGraph);\r\n\r\n      return {\r\n        productionGraph,\r\n        report,\r\n        timestamp,\r\n        computeTime: performance.now() - timestamp,\r\n        error: null,\r\n      };\r\n    } catch (e: unknown) {\r\n      return {\r\n        productionGraph: null,\r\n        report: null,\r\n        timestamp,\r\n        computeTime: performance.now() - timestamp,\r\n        error: e as GraphError,\r\n      };\r\n    }\r\n  }\r\n\r\n  private getItemPoints(itemKey: string) {\r\n    const itemInfo = this.gameData.items[itemKey];\r\n    return itemInfo.isFicsmas ? 0 : itemInfo.sinkPoints;\r\n  }\r\n\r\n  private async productionSolverPass(targetKey: string, remainingInputs: Inputs, glpk: GLPK): Promise<ProductionSolution> {\r\n    const model: LP = {\r\n      name: 'production',\r\n      objective: {\r\n        name: 'score',\r\n        direction: glpk.GLP_MIN,\r\n        vars: [],\r\n      },\r\n      subjectTo: [],\r\n      binaries: [],\r\n    };\r\n\r\n    const doPoints = (targetKey === RATE_TARGET_KEY && this.rateTargets[POINTS_ITEM_KEY]) || targetKey === POINTS_ITEM_KEY;\r\n    const pointsVars: Var[] = [];\r\n\r\n    for (const [recipeKey, recipeInfo] of Object.entries(this.gameData.recipes)) {\r\n      if (!this.allowedRecipes[recipeKey]) continue;\r\n      const buildingInfo = this.gameData.buildings[recipeInfo.producedIn];\r\n      const powerScore = buildingInfo.power > 0 ? buildingInfo.power * this.globalWeights.power : 0;\r\n      const buildingsScore = this.globalWeights.buildings;\r\n      let resourceScore = 0;\r\n\r\n      for (const ingredient of recipeInfo.ingredients) {\r\n        const inputInfo = this.inputs[ingredient.itemClass];\r\n        if (inputInfo) {\r\n          resourceScore += inputInfo.weight * ingredient.perMinute * this.globalWeights.resources;\r\n        }\r\n      }\r\n\r\n      \r\n      model.objective.vars.push({\r\n        name: recipeKey,\r\n        coef: powerScore + resourceScore + buildingsScore,\r\n      });\r\n\r\n\r\n      if (targetKey === RATE_TARGET_KEY) {\r\n        if (this.rateTargets[recipeKey]) {\r\n          model.subjectTo.push({\r\n            name: `${recipeKey} recipe constraint`,\r\n            vars: [{ name: recipeKey, coef: 1 }],\r\n            bnds: { type: glpk.GLP_LO, ub: 0, lb: this.rateTargets[recipeKey].value },\r\n          });\r\n        }\r\n      }\r\n\r\n      if (doPoints) {\r\n        let pointCoef = 0;\r\n        for (const product of recipeInfo.products) {\r\n          if (!this.inputs[product.itemClass] || this.inputs[product.itemClass].type === NODE_TYPE.INPUT_ITEM) {\r\n            pointCoef -= product.perMinute * this.getItemPoints(product.itemClass) / 1000;\r\n          }\r\n        }\r\n        for (const ingredient of recipeInfo.ingredients) {\r\n          if (!this.inputs[ingredient.itemClass] || this.inputs[ingredient.itemClass].type === NODE_TYPE.INPUT_ITEM) {\r\n            pointCoef += ingredient.perMinute * this.getItemPoints(ingredient.itemClass) / 1000;\r\n          }\r\n        }\r\n        pointsVars.push({ name: recipeKey, coef: pointCoef });\r\n      }\r\n    }\r\n\r\n  \r\n    if (doPoints) {\r\n      let intrinsicPoints = 0;\r\n      for (const [itemKey, inputInfo] of Object.entries(remainingInputs)) {\r\n        if (inputInfo.type === NODE_TYPE.INPUT_ITEM) {\r\n          intrinsicPoints += this.getItemPoints(itemKey) * inputInfo.amount;\r\n        }\r\n      }\r\n      if (targetKey === RATE_TARGET_KEY) {\r\n        for (const [itemKey, targetInfo] of Object.entries(this.rateTargets)) {\r\n          if (itemKey !== POINTS_ITEM_KEY) {\r\n            intrinsicPoints -= this.getItemPoints(itemKey) * targetInfo.value;\r\n          }\r\n        }\r\n        model.subjectTo.push({\r\n          name: 'AWESOME Sink Points constraint',\r\n          vars: pointsVars,\r\n          bnds: { type: glpk.GLP_UP, ub: -this.rateTargets[POINTS_ITEM_KEY].value - intrinsicPoints, lb: NaN },\r\n        });\r\n      } else if (targetKey === POINTS_ITEM_KEY) {\r\n        pointsVars.forEach((v) => {\r\n          const existingVar = model.objective.vars.find((ov) => ov.name === v.name);\r\n          if (existingVar) {\r\n            existingVar.coef += v.coef * MAXIMIZE_WEIGHT;\r\n          } else {\r\n            model.objective.vars.push({\r\n              name: v.name,\r\n              coef: v.coef * MAXIMIZE_WEIGHT,\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n\r\n    for (const [itemKey, itemInfo] of Object.entries(this.gameData.items)) {\r\n      if (!this.allowedItems[itemKey]) continue;\r\n      const vars: Var[] = [];\r\n      \r\n      const binKey = `${itemKey}_BIN`;\r\n      const binVars: Var[] = [];\r\n\r\n      for (const recipeKey of itemInfo.usedInRecipes) {\r\n        if (!this.allowedRecipes[recipeKey]) continue;\r\n        const recipeInfo = this.gameData.recipes[recipeKey];\r\n        const target = recipeInfo.ingredients.find((i) => i.itemClass === itemKey)!;\r\n        vars.push({ name: recipeKey, coef: target.perMinute });\r\n\r\n        if (!this.gameData.handGatheredItems[itemKey]) {\r\n          binVars.push({ name: recipeKey, coef: -1 });\r\n        }\r\n      }\r\n\r\n      for (const recipeKey of itemInfo.producedFromRecipes) {\r\n        if (!this.allowedRecipes[recipeKey]) continue;\r\n        const recipeInfo = this.gameData.recipes[recipeKey];\r\n        const target = recipeInfo.products.find((p) => p.itemClass === itemKey)!;\r\n\r\n        const existingVar = vars.find((v) => v.name === recipeKey);\r\n        if (existingVar) {\r\n          existingVar.coef -= target.perMinute;\r\n        } else {\r\n          vars.push({ name: recipeKey, coef: -target.perMinute });\r\n        }\r\n      }\r\n\r\n      if (targetKey === RATE_TARGET_KEY) {\r\n        if (this.globalWeights.complexity > 0 && binVars.length > 0) {\r\n          model.binaries!.push(binKey);\r\n          model.objective.vars.push({ name: binKey, coef: this.globalWeights.complexity });\r\n          model.subjectTo.push({\r\n            name: `${binKey} constraint`,\r\n            vars: [\r\n              { name: binKey, coef: ENFORCE_BIN_WEIGHT * Math.sqrt(this.scale) },\r\n              ...binVars,\r\n            ],\r\n            bnds: { type: glpk.GLP_LO, ub: NaN, lb: 0 },\r\n          });\r\n        }\r\n      }\r\n\r\n      if (vars.length === 0) continue;\r\n\r\n      if (remainingInputs[itemKey]) {\r\n        const inputInfo = remainingInputs[itemKey];\r\n        if (inputInfo.amount !== Infinity) {\r\n          model.subjectTo.push({\r\n            name: `${itemKey} resource constraint`,\r\n            vars,\r\n            bnds: { type: glpk.GLP_UP, ub: inputInfo.amount, lb: NaN },\r\n          });\r\n        }\r\n      }\r\n\r\n      else if (targetKey === RATE_TARGET_KEY && this.rateTargets[itemKey]) {\r\n        const outputInfo = this.rateTargets[itemKey];\r\n        model.subjectTo.push({\r\n          name: `${itemKey} final product constraint`,\r\n          vars,\r\n          bnds: { type: glpk.GLP_UP, ub: -outputInfo.value, lb: NaN },\r\n        });\r\n      }\r\n\r\n      else if (targetKey === itemKey) {\r\n        model.subjectTo.push({\r\n          name: `${itemKey} final product constraint`,\r\n          vars,\r\n          bnds: { type: glpk.GLP_UP, ub: 0, lb: NaN },\r\n        });\r\n\r\n        vars.forEach((v) => {\r\n          const existingVar = model.objective.vars.find((ov) => ov.name === v.name);\r\n          if (existingVar) {\r\n            existingVar.coef += v.coef * MAXIMIZE_WEIGHT;\r\n          } else {\r\n            model.objective.vars.push({\r\n              name: v.name,\r\n              coef: v.coef * MAXIMIZE_WEIGHT,\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      else {\r\n        model.subjectTo.push({\r\n          name: `${itemKey} intermediates constraint`,\r\n          vars,\r\n          bnds: { type: glpk.GLP_UP, ub: 0, lb: NaN },\r\n        });\r\n      }\r\n    }\r\n\r\n    const solution = await glpk.solve(model, { msglev: glpk.GLP_MSG_OFF, tmlim: TIME_LIMIT });\r\n    if (solution.time > TIME_LIMIT) {\r\n      throw new GraphError('TIMED OUT', 'Try setting the complexity weight to 0. Unfortunately it is currently very slow for large factories. For complex factories, you might try the Buildings optimizer instead.');\r\n    }\r\n    if (solution.result.status !== glpk.GLP_OPT && solution.result.status !== glpk.GLP_FEAS) {\r\n      if (targetKey === RATE_TARGET_KEY) {\r\n        throw new GraphError('NO SOLUTION', 'This could be due to missing recipes, impossible demands, or any number of reasons. Double check your factory settings.');\r\n      } else {\r\n        throw new GraphError('SOLUTION IS UNBOUNDED', 'Somehow an infinite amount of items can be produced. Double check the inputs tab for infinite resources (including the hand gathered resources option).');\r\n      }\r\n    }\r\n\r\n\r\n    const result: ProductionSolution = {};\r\n    Object.entries(solution.result.vars).forEach(([key, val]) => {\r\n      if (val > EPSILON) {\r\n        if (this.gameData.recipes[key]) {\r\n          result[key] = val;\r\n        }\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  private generateProductionGraph(productionSolution: ProductionSolution): ProductionGraph {\r\n    const itemProductionTotals: ItemProductionTotals = {};\r\n    const graph: ProductionGraph = {\r\n      nodes: {},\r\n      edges: [],\r\n    };\r\n\r\n    for (const [recipeKey, multiplier] of Object.entries(productionSolution)) {\r\n      const recipeInfo = this.gameData.recipes[recipeKey];\r\n\r\n      for (const product of recipeInfo.products) {\r\n        const amount = multiplier * product.perMinute;\r\n        if (!itemProductionTotals[product.itemClass]) {\r\n          itemProductionTotals[product.itemClass] = {\r\n            producedBy: [],\r\n            usedBy: [],\r\n          };\r\n        }\r\n        itemProductionTotals[product.itemClass].producedBy.push({ recipeKey, amount });\r\n      }\r\n\r\n      for (const ingredient of recipeInfo.ingredients) {\r\n        const amount = multiplier * ingredient.perMinute;\r\n        if (!itemProductionTotals[ingredient.itemClass]) {\r\n          itemProductionTotals[ingredient.itemClass] = {\r\n            producedBy: [],\r\n            usedBy: [],\r\n          };\r\n        }\r\n        itemProductionTotals[ingredient.itemClass].usedBy.push({ recipeKey, amount });\r\n      }\r\n\r\n      graph.nodes[recipeKey] = {\r\n        id: nanoid(),\r\n        key: recipeKey,\r\n        type: NODE_TYPE.RECIPE,\r\n        multiplier,\r\n      };\r\n    }\r\n\r\n    for (const [itemKey, productionTotals] of Object.entries(itemProductionTotals)) {\r\n      const { producedBy, usedBy } = productionTotals;\r\n      let i = 0, j = 0;\r\n      nextDemand:\r\n      while (i < usedBy.length) {\r\n        const usageInfo = usedBy[i];\r\n        const usageNode = graph.nodes[usageInfo.recipeKey];\r\n        \r\n        while (j < producedBy.length) {\r\n          const productionInfo = producedBy[j];\r\n          const productionNode = graph.nodes[productionInfo.recipeKey];\r\n\r\n          const outputRecipe = this.rateTargets[itemKey]?.recipe;\r\n          if (outputRecipe && outputRecipe === productionInfo.recipeKey) {\r\n            const outputInfo = this.rateTargets[itemKey];\r\n            const recipeInfo = this.gameData.recipes[outputRecipe];\r\n            const target = recipeInfo.products.find((p) => p.itemClass === itemKey)!;\r\n            const recipeAmount = outputInfo.value * target.perMinute;\r\n            productionInfo.amount -= recipeAmount;\r\n\r\n            let itemNode = graph.nodes[itemKey];\r\n            if (!itemNode) {\r\n              itemNode = {\r\n                id: nanoid(),\r\n                key: itemKey,\r\n                type: NODE_TYPE.FINAL_PRODUCT,\r\n                multiplier: recipeAmount,\r\n              }\r\n              graph.nodes[itemKey] = itemNode;\r\n            } else {\r\n              graph.nodes[itemKey].multiplier += recipeAmount;\r\n            }\r\n            graph.edges.push({\r\n              key: itemKey,\r\n              from: productionNode.id,\r\n              to: itemNode.id,\r\n              productionRate: recipeAmount,\r\n            });\r\n          } \r\n\r\n          if (productionInfo.amount < EPSILON) {\r\n            j++\r\n            continue;\r\n          }\r\n\r\n          if (usageInfo.amount <= productionInfo.amount) {\r\n            graph.edges.push({\r\n              key: itemKey,\r\n              from: productionNode.id,\r\n              to: usageNode.id,\r\n              productionRate: usageInfo.amount,\r\n            });\r\n            productionInfo.amount -= usageInfo.amount;\r\n            usageInfo.amount = 0;\r\n          } else {\r\n            graph.edges.push({\r\n              key: itemKey,\r\n              from: productionNode.id,\r\n              to: usageNode.id,\r\n              productionRate: productionInfo.amount,\r\n            });\r\n            usageInfo.amount -= productionInfo.amount;\r\n            productionInfo.amount = 0;\r\n          }\r\n          \r\n          if (usageInfo.amount < EPSILON) {\r\n            i++;\r\n            continue nextDemand;\r\n          }\r\n          j++;\r\n        }\r\n        break;\r\n      }\r\n\r\n      while (i < usedBy.length) {\r\n        const usageInfo = usedBy[i];\r\n        const usageNode = graph.nodes[usageInfo.recipeKey];\r\n        if (usageInfo.amount > EPSILON && this.inputs[itemKey]) {\r\n          let itemNode = graph.nodes[itemKey];\r\n          if (!itemNode) {\r\n            const inputInfo = this.inputs[itemKey];\r\n            itemNode = {\r\n              id: nanoid(),\r\n              key: itemKey,\r\n              type: inputInfo.type,\r\n              multiplier: usageInfo.amount,\r\n            };\r\n            graph.nodes[itemKey] = itemNode;\r\n          } else {\r\n            itemNode.multiplier += usageInfo.amount;\r\n          }\r\n          graph.edges.push({\r\n            key: itemKey,\r\n            from: itemNode.id,\r\n            to: usageNode.id,\r\n            productionRate: usageInfo.amount,\r\n          });\r\n          usageInfo.amount = 0;\r\n        }\r\n        i++;\r\n      }\r\n\r\n      while (j < producedBy.length) {\r\n        const productionInfo = producedBy[j];\r\n        const productionNode = graph.nodes[productionInfo.recipeKey];\r\n        if (productionInfo.amount > EPSILON) {\r\n          let itemNode = graph.nodes[itemKey];\r\n          if (!itemNode) {\r\n            let nodeType = NODE_TYPE.SIDE_PRODUCT;\r\n            if (this.rateTargets[itemKey] || this.maximizeTargets.find((t) => t.key === itemKey)) {\r\n              nodeType = NODE_TYPE.FINAL_PRODUCT;\r\n            } else if (this.hasPointsTarget && this.getItemPoints(itemKey) > 0) {\r\n              nodeType = NODE_TYPE.FINAL_PRODUCT;\r\n            }\r\n            itemNode = {\r\n              id: nanoid(),\r\n              key: itemKey,\r\n              type: nodeType,\r\n              multiplier: productionInfo.amount\r\n            };\r\n            graph.nodes[itemKey] = itemNode;\r\n          } else {\r\n            itemNode.multiplier += productionInfo.amount;\r\n          }\r\n          graph.edges.push({\r\n            key: itemKey,\r\n            from: productionNode.id,\r\n            to: itemNode.id,\r\n            productionRate: productionInfo.amount,\r\n          });\r\n          productionInfo.amount = 0;\r\n        }\r\n        j++;\r\n      }\r\n    }\r\n\r\n    return graph;\r\n  }\r\n\r\n  private generateProductionReport(productionGraph: ProductionGraph): Report {\r\n    const report: Report = {\r\n      pointsProduced: 0,\r\n      powerUsageEstimate: {\r\n        production: 0,\r\n        extraction: 0,\r\n        generators: 0,\r\n        total: 0,\r\n      },\r\n      resourceEfficiencyScore: 0,\r\n      totalBuildArea: 0,\r\n      estimatedFoundations: 0,\r\n      buildingsUsed: {},\r\n      totalMaterialCost: {},\r\n    };\r\n\r\n    for (const [key, node] of Object.entries(productionGraph.nodes)) {\r\n      if (node.type === NODE_TYPE.RECIPE) {\r\n        const recipeInfo = this.gameData.recipes[key];\r\n        const buildingKey = recipeInfo.producedIn;\r\n        const buildingInfo = this.gameData.buildings[buildingKey];\r\n        const power = node.multiplier * buildingInfo.power;\r\n        if (power < 0) {\r\n          report.powerUsageEstimate.generators += -power;\r\n        } else {\r\n          report.powerUsageEstimate.production += power;\r\n        }\r\n        report.powerUsageEstimate.total += power;\r\n        report.totalBuildArea += Math.ceil(node.multiplier) * buildingInfo.area;\r\n        if (!report.buildingsUsed[buildingKey]) {\r\n          report.buildingsUsed[buildingKey] = {\r\n            count: Math.ceil(node.multiplier),\r\n            materialCost: {},\r\n          };\r\n        } else {\r\n          report.buildingsUsed[buildingKey].count += Math.ceil(node.multiplier);\r\n        }\r\n\r\n        for (const ingredient of buildingInfo.buildCost) {\r\n          const amount = Math.ceil(node.multiplier) * ingredient.quantity;\r\n          if (!report.buildingsUsed[buildingKey].materialCost[ingredient.itemClass]) {\r\n            report.buildingsUsed[buildingKey].materialCost[ingredient.itemClass] = amount;\r\n          } else {\r\n            report.buildingsUsed[buildingKey].materialCost[ingredient.itemClass] += amount;\r\n          }\r\n          if (!report.totalMaterialCost[ingredient.itemClass]) {\r\n            report.totalMaterialCost[ingredient.itemClass] = amount;\r\n          } else {\r\n            report.totalMaterialCost[ingredient.itemClass] += amount;\r\n          }\r\n        }\r\n        continue;\r\n      }\r\n\r\n      if (node.type === NODE_TYPE.FINAL_PRODUCT) {\r\n        report.pointsProduced += node.multiplier * this.getItemPoints(key);\r\n      } else if (node.type === NODE_TYPE.RESOURCE) {\r\n        report.resourceEfficiencyScore += node.multiplier * this.inputs[key].weight;\r\n        let power = 0;\r\n        if (key === 'Desc_Water_C') {\r\n          power = node.multiplier / 120 * this.gameData.buildings['Desc_WaterPump_C'].power;\r\n\r\n          const numExtractors = Math.ceil(node.multiplier / 120);\r\n          report.buildingsUsed['Desc_WaterPump_C'] = {\r\n            count: numExtractors,\r\n            materialCost: {},\r\n          };\r\n          for (const ingredient of this.gameData.buildings['Desc_WaterPump_C'].buildCost) {\r\n            const amount = numExtractors * ingredient.quantity;\r\n            report.buildingsUsed['Desc_WaterPump_C'].materialCost[ingredient.itemClass] = amount;\r\n            if (!report.totalMaterialCost[ingredient.itemClass]) {\r\n              report.totalMaterialCost[ingredient.itemClass] = amount;\r\n            } else {\r\n              report.totalMaterialCost[ingredient.itemClass] += amount;\r\n            }\r\n          }\r\n\r\n        } else if (key === 'Desc_LiquidOil_C') {\r\n          power = node.multiplier / 120 * this.gameData.buildings['Desc_OilPump_C'].power;\r\n        } else if (key === 'Desc_NitrogenGas_C') {\r\n          // SKIP\r\n        } else {\r\n          power = node.multiplier / 240 * this.gameData.buildings['Desc_MinerMk3_C'].power;\r\n        }\r\n        report.powerUsageEstimate.extraction += power;\r\n        report.powerUsageEstimate.total += power;\r\n      }\r\n    }\r\n\r\n    report.estimatedFoundations = Math.ceil(2 * (report.totalBuildArea / 64));\r\n\r\n    return report;\r\n  }\r\n}\r\n","import { nanoid } from 'nanoid';\r\nimport { POINTS_ITEM_KEY } from '../../../utilities/production-solver';\r\nimport { GameData, ItemMap, RecipeMap } from '../../gameData/types';\r\nimport { getInitialState } from '../reducer';\r\nimport { FactoryOptions } from '../types';\r\n\r\nconst FACTORY_SETTINGS_VERSION = 'v1_U5';\r\n\r\nconst SEP0 = ',';\r\nconst SEP1 = '|';\r\nconst SEP2 = ':';\r\n\r\nfunction getItemBySlug(slug: string, items: ItemMap) {\r\n  if (slug === 'points') {\r\n    return POINTS_ITEM_KEY;\r\n  }\r\n  const itemEntry = Object.entries(items).find(([key, item]) => item.slug === slug);\r\n  if (itemEntry) {\r\n    return itemEntry[0];\r\n  }\r\n  throw new Error('INVALID ITEM SLUG');\r\n}\r\n\r\nfunction getModeBySlug(slug: string, recipes: RecipeMap) {\r\n  if (slug === 'per_minute') return 'per-minute';\r\n  if (slug === 'maximize') return 'maximize';\r\n  const recipeEntry = Object.entries(recipes).find(([key, recipe]) => recipe.slug === slug);\r\n  if (recipeEntry) {\r\n    return recipeEntry[0];\r\n  }\r\n  throw new Error('INVALID RECIPE SLUG');\r\n}\r\n\r\nexport function decodeState_v1_U5(stateStr: string, gameData: GameData): FactoryOptions {\r\n  const newState: FactoryOptions = getInitialState(gameData);\r\n\r\n  const fields = stateStr.split(SEP0);\r\n  if (fields[0] !== FACTORY_SETTINGS_VERSION) throw new Error('VERSION MISMATCH');\r\n  if (fields.length !== 7) throw new Error('INVALID DATA [BAD FIELDS]');\r\n\r\n  const allowedRecipes = Object.keys(newState.allowedRecipes)\r\n    .filter((recipeKey) => {\r\n      const recipeInfo = gameData.recipes[recipeKey];\r\n      if (recipeInfo.isFicsmas) {\r\n        newState.allowedRecipes[recipeKey] = false;\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n  const allowedRecipesBits = BigInt(`0x${fields[1]}`)\r\n    .toString(2)\r\n    .padStart(allowedRecipes.length, '0')\r\n    .split('')\r\n    .map((b) => !!parseInt(b));\r\n  allowedRecipes\r\n    .sort((a, b) => {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    })\r\n    .forEach((key, i) => {\r\n      newState.allowedRecipes[key] = !!allowedRecipesBits[i];\r\n    });\r\n\r\n  const productionItemsStrings = fields[2].split(SEP1);\r\n  if (productionItemsStrings[0]) {\r\n    productionItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 3) throw new Error('INVALID DATA [productionItems]');\r\n      newState.productionItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0], gameData.items),\r\n        mode: getModeBySlug(values[1], gameData.recipes),\r\n        value: values[2],\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputItemsStrings = fields[3].split(SEP1);\r\n  if (inputItemsStrings[0]) {\r\n    inputItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 4) throw new Error('INVALID DATA [inputItems]');\r\n      newState.inputItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0], gameData.items),\r\n        value: values[1],\r\n        weight: values[2],\r\n        unlimited: !!parseInt(values[3]),\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputResourcesStrings = fields[4].split(SEP1);\r\n  newState.inputResources.forEach((resourceOptions, i) => {\r\n    const values = inputResourcesStrings[i].split(SEP2);\r\n    if (values.length !== 3) throw new Error('INVALID DATA [inputResources]');\r\n    resourceOptions.value = values[0];\r\n    resourceOptions.weight = values[1];\r\n    resourceOptions.unlimited = !!parseInt(values[2]);\r\n  });\r\n\r\n  newState.allowHandGatheredItems = !!parseInt(fields[5]);\r\n\r\n  const weightingOptionsStrings = fields[6].split(SEP2);\r\n  if (weightingOptionsStrings.length !== 3) throw new Error('INVALID DATA [weightingOptions]');\r\n  newState.weightingOptions.resources = weightingOptionsStrings[0];\r\n  newState.weightingOptions.power = weightingOptionsStrings[1];\r\n  newState.weightingOptions.complexity = weightingOptionsStrings[2];\r\n  newState.weightingOptions.buildings = '0';\r\n\r\n  return newState;\r\n}\r\n","import { nanoid } from 'nanoid';\r\nimport { POINTS_ITEM_KEY } from '../../../utilities/production-solver';\r\nimport { GameData, ItemMap, RecipeMap } from '../../gameData/types';\r\nimport { getInitialState } from '../reducer';\r\nimport { FactoryOptions } from '../types';\r\n\r\nconst FACTORY_SETTINGS_VERSION = 'v2_U5';\r\n\r\nconst SEP0 = ',';\r\nconst SEP1 = '|';\r\nconst SEP2 = ':';\r\n\r\nfunction getItemBySlug(slug: string, items: ItemMap) {\r\n  if (slug === 'points') {\r\n    return POINTS_ITEM_KEY;\r\n  }\r\n  const itemEntry = Object.entries(items).find(([key, item]) => item.slug === slug);\r\n  if (itemEntry) {\r\n    return itemEntry[0];\r\n  }\r\n  throw new Error('INVALID ITEM SLUG');\r\n}\r\n\r\nfunction getModeBySlug(slug: string, recipes: RecipeMap) {\r\n  if (slug === 'per_minute') return 'per-minute';\r\n  if (slug === 'maximize') return 'maximize';\r\n  const recipeEntry = Object.entries(recipes).find(([key, recipe]) => recipe.slug === slug);\r\n  if (recipeEntry) {\r\n    return recipeEntry[0];\r\n  }\r\n  throw new Error('INVALID RECIPE SLUG');\r\n}\r\n\r\nexport function decodeState_v2_U5(stateStr: string, gameData: GameData): FactoryOptions {\r\n  const newState: FactoryOptions = getInitialState(gameData);\r\n\r\n  const fields = stateStr.split(SEP0);\r\n  if (fields[0] !== FACTORY_SETTINGS_VERSION) throw new Error('VERSION MISMATCH');\r\n  if (fields.length !== 7) throw new Error('INVALID DATA [BAD FIELDS]');\r\n\r\n  const allowedRecipesBits = BigInt(`0x${fields[1]}`)\r\n    .toString(2)\r\n    .padStart(Object.keys(newState.allowedRecipes).length, '0')\r\n    .split('')\r\n    .map((b) => !!parseInt(b));\r\n  Object.keys(newState.allowedRecipes)\r\n    .sort((a, b) => {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    })\r\n    .forEach((key, i) => {\r\n      newState.allowedRecipes[key] = !!allowedRecipesBits[i];\r\n    });\r\n\r\n  const productionItemsStrings = fields[2].split(SEP1);\r\n  if (productionItemsStrings[0]) {\r\n    productionItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 3) throw new Error('INVALID DATA [productionItems]');\r\n      newState.productionItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0], gameData.items),\r\n        mode: getModeBySlug(values[1], gameData.recipes),\r\n        value: values[2],\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputItemsStrings = fields[3].split(SEP1);\r\n  if (inputItemsStrings[0]) {\r\n    inputItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 4) throw new Error('INVALID DATA [inputItems]');\r\n      newState.inputItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0], gameData.items),\r\n        value: values[1],\r\n        weight: values[2],\r\n        unlimited: !!parseInt(values[3]),\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputResourcesStrings = fields[4].split(SEP1);\r\n  newState.inputResources.forEach((resourceOptions, i) => {\r\n    const values = inputResourcesStrings[i].split(SEP2);\r\n    if (values.length !== 3) throw new Error('INVALID DATA [inputResources]');\r\n    resourceOptions.value = values[0];\r\n    resourceOptions.weight = values[1];\r\n    resourceOptions.unlimited = !!parseInt(values[2]);\r\n  });\r\n\r\n  newState.allowHandGatheredItems = !!parseInt(fields[5]);\r\n\r\n  const weightingOptionsStrings = fields[6].split(SEP2);\r\n  if (weightingOptionsStrings.length !== 3) throw new Error('INVALID DATA [weightingOptions]');\r\n  newState.weightingOptions.resources = weightingOptionsStrings[0];\r\n  newState.weightingOptions.power = weightingOptionsStrings[1];\r\n  newState.weightingOptions.complexity = weightingOptionsStrings[2];\r\n  newState.weightingOptions.buildings = '0';\r\n\r\n  return newState;\r\n}\r\n","import { nanoid } from 'nanoid';\r\nimport { POINTS_ITEM_KEY } from '../../../utilities/production-solver';\r\nimport { GameData, ItemMap, RecipeMap } from '../../gameData/types';\r\nimport { getInitialState } from '../reducer';\r\nimport { FactoryOptions } from '../types'; \r\n\r\nconst FACTORY_SETTINGS_VERSION = 'v3_U5';\r\n\r\nconst SEP0 = ',';\r\nconst SEP1 = '|';\r\nconst SEP2 = ':';\r\n\r\nfunction getItemBySlug(slug: string, items: ItemMap) {\r\n  if (slug === 'points') {\r\n    return POINTS_ITEM_KEY;\r\n  }\r\n  const itemEntry = Object.entries(items).find(([key, item]) => item.slug === slug);\r\n  if (itemEntry) {\r\n    return itemEntry[0];\r\n  }\r\n  throw new Error('INVALID ITEM SLUG');\r\n}\r\n\r\nfunction getModeBySlug(slug: string, recipes: RecipeMap) {\r\n  if (slug === 'per_minute') return 'per-minute';\r\n  if (slug === 'maximize') return 'maximize';\r\n  const recipeEntry = Object.entries(recipes).find(([key, recipe]) => recipe.slug === slug);\r\n  if (recipeEntry) {\r\n    return recipeEntry[0];\r\n  }\r\n  throw new Error('INVALID RECIPE SLUG');\r\n}\r\n\r\nexport function decodeState_v3_U5(stateStr: string, gameData: GameData): FactoryOptions {\r\n  const newState: FactoryOptions = getInitialState(gameData);\r\n\r\n  const fields = stateStr.split(SEP0);\r\n  if (fields[0] !== FACTORY_SETTINGS_VERSION) throw new Error('VERSION MISMATCH');\r\n  if (fields.length !== 7) throw new Error('INVALID DATA [BAD FIELDS]');\r\n\r\n  const allowedRecipesBits = BigInt(`0x${fields[1]}`)\r\n    .toString(2)\r\n    .padStart(Object.keys(newState.allowedRecipes).length, '0')\r\n    .split('')\r\n    .map((b) => !!parseInt(b));\r\n  Object.keys(newState.allowedRecipes)\r\n    .sort((a, b) => {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    })\r\n    .forEach((key, i) => {\r\n      newState.allowedRecipes[key] = !!allowedRecipesBits[i];\r\n    });\r\n\r\n  const productionItemsStrings = fields[2].split(SEP1);\r\n  if (productionItemsStrings[0]) {\r\n    productionItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 3) throw new Error('INVALID DATA [productionItems]');\r\n      newState.productionItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0], gameData.items),\r\n        mode: getModeBySlug(values[1], gameData.recipes),\r\n        value: values[2],\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputItemsStrings = fields[3].split(SEP1);\r\n  if (inputItemsStrings[0]) {\r\n    inputItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 4) throw new Error('INVALID DATA [inputItems]');\r\n      newState.inputItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0], gameData.items),\r\n        value: values[1],\r\n        weight: values[2],\r\n        unlimited: !!parseInt(values[3]),\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputResourcesStrings = fields[4].split(SEP1);\r\n  newState.inputResources.forEach((resourceOptions, i) => {\r\n    const values = inputResourcesStrings[i].split(SEP2);\r\n    if (values.length !== 3) throw new Error('INVALID DATA [inputResources]');\r\n    resourceOptions.value = values[0];\r\n    resourceOptions.weight = values[1];\r\n    resourceOptions.unlimited = !!parseInt(values[2]);\r\n  });\r\n\r\n  newState.allowHandGatheredItems = !!parseInt(fields[5]);\r\n\r\n  const weightingOptionsStrings = fields[6].split(SEP2);\r\n  if (weightingOptionsStrings.length !== 4) throw new Error('INVALID DATA [weightingOptions]');\r\n  newState.weightingOptions.resources = weightingOptionsStrings[0];\r\n  newState.weightingOptions.power = weightingOptionsStrings[1];\r\n  newState.weightingOptions.complexity = weightingOptionsStrings[2];\r\n  newState.weightingOptions.buildings = weightingOptionsStrings[3];\r\n\r\n  return newState;\r\n}\r\n","import { nanoid } from 'nanoid';\r\nimport { decodeState_v1_U5 } from './legacy-state-decoders/v1_U5';\r\nimport { decodeState_v2_U5 } from './legacy-state-decoders/v2_U5';\r\nimport { decodeState_v3_U5 } from './legacy-state-decoders/v3_U5';\r\nimport { ProductionItemOptions, InputItemOptions, WeightingOptions, RecipeSelectionMap, FactoryOptions } from './types';\r\nimport { GameData, RecipeMap, ResourceMap } from '../gameData/types';\r\nimport { MAX_PRIORITY } from './consts';\r\n\r\n// DEFAULTS\r\nfunction getDefaultProductionItem(): ProductionItemOptions {\r\n  return ({\r\n    key: nanoid(),\r\n    itemKey: '',\r\n    mode: 'per-minute',\r\n    value: '10',\r\n  });\r\n}\r\n\r\nfunction getDefaultInputItem(): InputItemOptions {\r\n  return ({\r\n    key: nanoid(),\r\n    itemKey: '',\r\n    value: '10',\r\n    weight: '0',\r\n    unlimited: false,\r\n  });\r\n}\r\n\r\nconst ORDERED_RESOURCES = [\r\n  'Desc_OreIron_C',\r\n  'Desc_OreCopper_C',\r\n  'Desc_Stone_C',\r\n  'Desc_Coal_C',\r\n  'Desc_OreGold_C',\r\n  'Desc_RawQuartz_C',\r\n  'Desc_Sulfur_C',\r\n  'Desc_LiquidOil_C',\r\n  'Desc_OreBauxite_C',\r\n  'Desc_OreUranium_C',\r\n  'Desc_NitrogenGas_C',\r\n  'Desc_Water_C',\r\n];\r\n\r\nfunction getInitialInputResources(resources: ResourceMap): InputItemOptions[] {\r\n  return Object.entries(resources)\r\n    .map(([key, data]) => {\r\n      let value = '0';\r\n      let unlimited = false;\r\n      if (key === 'Desc_Water_C') {\r\n        unlimited = true;\r\n      } else {\r\n        value = String(data.maxExtraction);\r\n      }\r\n      return {\r\n        key: key,\r\n        itemKey: key,\r\n        value,\r\n        weight: String(data.relativeValue),\r\n        unlimited,\r\n      };\r\n    })\r\n    .sort((a, b) => {\r\n      let aIndex = ORDERED_RESOURCES.findIndex((r) => r === a.itemKey);\r\n      if (aIndex === -1) aIndex = Infinity;\r\n      let bIndex = ORDERED_RESOURCES.findIndex((r) => r === b.itemKey);\r\n      if (bIndex === -1) bIndex = Infinity;\r\n      return aIndex < bIndex ? -1 : 1;\r\n    });\r\n}\r\n\r\nfunction getInitialWeightingOptions(): WeightingOptions {\r\n  return {\r\n    resources: '1000',\r\n    power: '1',\r\n    complexity: '0',\r\n    buildings: '0',\r\n  };\r\n}\r\n\r\nfunction getInitialAllowedRecipes(recipes: RecipeMap): RecipeSelectionMap {\r\n  const recipeMap: RecipeSelectionMap = {};\r\n  Object.entries(recipes).forEach(([key, data]) => {\r\n    recipeMap[key] = !data.isAlternate;\r\n  });\r\n  return recipeMap;\r\n}\r\n\r\nexport function getInitialState(gameData: GameData): FactoryOptions {\r\n  return {\r\n    key: nanoid(),\r\n    productionItems: [],\r\n    inputItems: [],\r\n    inputResources: getInitialInputResources(gameData.resources),\r\n    allowHandGatheredItems: false,\r\n    weightingOptions: getInitialWeightingOptions(),\r\n    allowedRecipes: getInitialAllowedRecipes(gameData.recipes),\r\n  };\r\n}\r\n\r\n\r\n// REDUCER\r\nexport type FactoryAction =\r\n  | { type: 'RESET_FACTORY', gameData: GameData }\r\n  | { type: 'ADD_PRODUCTION_ITEM' }\r\n  | { type: 'DELETE_PRODUCTION_ITEM', key: string }\r\n  | { type: 'SET_PRODUCTION_ITEM', data: { key: string, itemKey: string } }\r\n  | { type: 'SET_PRODUCTION_ITEM_AMOUNT', data: { key: string, amount: string } }\r\n  | { type: 'SET_PRODUCTION_ITEM_MODE', data: { key: string, mode: string } }\r\n  | { type: 'ADD_INPUT_ITEM' }\r\n  | { type: 'DELETE_INPUT_ITEM', key: string }\r\n  | { type: 'UPDATE_INPUT_ITEM', data: InputItemOptions }\r\n  | { type: 'UPDATE_INPUT_RESOURCE', data: InputItemOptions }\r\n  | { type: 'SET_RESOURCES_TO_MAP_LIMITS', gameData: GameData }\r\n  | { type: 'SET_RESOURCES_TO_0' }\r\n  | { type: 'SET_ALLOW_HAND_GATHERED_ITEMS', active: boolean }\r\n  | { type: 'UPDATE_WEIGHTING_OPTIONS', data: WeightingOptions }\r\n  | { type: 'SET_ALL_WEIGHTS_DEFAULT', gameData: GameData }\r\n  | { type: 'SET_RECIPE_ACTIVE', key: string, active: boolean }\r\n  | { type: 'MASS_SET_RECIPES_ACTIVE', recipes: string[], active: boolean }\r\n  | { type: 'LOAD_FROM_SHARED_FACTORY', config: any, gameData: GameData }\r\n  | { type: 'LOAD_FROM_LEGACY_ENCODING', encoding: string, gameData: GameData }\r\n  | { type: 'LOAD_FROM_SESSION_STORAGE', sessionState: FactoryOptions, gameData: GameData };\r\n\r\nexport function reducer(state: FactoryOptions, action: FactoryAction): FactoryOptions {\r\n  switch (action.type) {\r\n    case 'RESET_FACTORY': {\r\n      return getInitialState(action.gameData);\r\n    }\r\n    case 'ADD_PRODUCTION_ITEM': {\r\n      const newProductionItems = [\r\n        ...state.productionItems,\r\n        getDefaultProductionItem(),\r\n      ];\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'DELETE_PRODUCTION_ITEM': {\r\n      const newProductionItems = state.productionItems\r\n        .filter((i) => i.key !== action.key);\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'SET_PRODUCTION_ITEM': {\r\n      const newProductionItems = state.productionItems\r\n        .map((item) => {\r\n          if (item.key === action.data.key) {\r\n            let newItem;\r\n            if (item.mode === 'per-minute' || item.mode === 'maximize') {\r\n              newItem = { ...item };\r\n            } else {\r\n              newItem = getDefaultProductionItem();\r\n            }\r\n            newItem.itemKey = action.data.itemKey;\r\n            return newItem;\r\n          }\r\n          return item;\r\n        });\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'SET_PRODUCTION_ITEM_AMOUNT': {\r\n      const newProductionItems = state.productionItems\r\n        .map((item) => {\r\n          if (item.key === action.data.key) {\r\n            const newItem = { ...item };\r\n            newItem.value = action.data.amount;\r\n            return newItem;\r\n          }\r\n          return item;\r\n        });\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'SET_PRODUCTION_ITEM_MODE': {\r\n      const newProductionItems = state.productionItems\r\n        .map((item) => {\r\n          if (item.key === action.data.key) {\r\n            const newItem = { ...item };\r\n            newItem.mode = action.data.mode;\r\n            if (newItem.mode !== item.mode) {\r\n              if (newItem.mode === 'per-minute') {\r\n                newItem.value = '10';\r\n              } else if (newItem.mode === 'maximize') {\r\n                let nextPriority = MAX_PRIORITY;\r\n                while (nextPriority && nextPriority > 0) {\r\n                  // eslint-disable-next-line no-loop-func\r\n                  const priorityTaken = !!state.productionItems.find((i) => i.mode === 'maximize' && i.value === String(nextPriority));\r\n                  if (!priorityTaken) {\r\n                    break;\r\n                  }\r\n                  nextPriority--;\r\n                }\r\n                if (nextPriority > 0) {\r\n                  newItem.value = String(nextPriority);\r\n                } else {\r\n                  newItem.value = `${MAX_PRIORITY}`;\r\n                }\r\n              } else if (item.mode === 'per-minute' || item.mode === 'maximize') {\r\n                newItem.value = '1';\r\n              }\r\n            }\r\n            return newItem;\r\n          }\r\n          return item;\r\n        });\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'ADD_INPUT_ITEM': {\r\n      const newInputItems = [\r\n        ...state.inputItems,\r\n        getDefaultInputItem(),\r\n      ];\r\n      return { ...state, inputItems: newInputItems };\r\n    }\r\n    case 'DELETE_INPUT_ITEM': {\r\n      const newInputItems = state.inputItems\r\n        .filter((i) => i.key !== action.key);\r\n      return { ...state, inputItems: newInputItems };\r\n    }\r\n    case 'UPDATE_INPUT_ITEM': {\r\n      const newInputItems = state.inputItems\r\n        .map((i) => i.key === action.data.key ? action.data : i);\r\n      return { ...state, inputItems: newInputItems };\r\n    }\r\n    case 'UPDATE_INPUT_RESOURCE': {\r\n      const newInputResources = state.inputResources\r\n        .map((i) => i.key === action.data.key ? action.data : i);\r\n      return { ...state, inputResources: newInputResources };\r\n    }\r\n    case 'SET_RESOURCES_TO_MAP_LIMITS': {\r\n      const newInputResources = getInitialInputResources(action.gameData.resources);\r\n      return { ...state, inputResources: newInputResources };\r\n    }\r\n    case 'SET_RESOURCES_TO_0': {\r\n      const newInputResources = state.inputResources\r\n        .map((data) => ({ ...data, value: '0', unlimited: false }));\r\n      return { ...state, inputResources: newInputResources };\r\n    }\r\n    case 'SET_ALLOW_HAND_GATHERED_ITEMS': {\r\n      return { ...state, allowHandGatheredItems: action.active };\r\n    }\r\n    case 'UPDATE_WEIGHTING_OPTIONS': {\r\n      const newWeightingOptions = { ...action.data };\r\n      return { ...state, weightingOptions: newWeightingOptions };\r\n    }\r\n    case 'SET_ALL_WEIGHTS_DEFAULT': {\r\n      const newWeightingOptions = getInitialWeightingOptions();\r\n      const newInputResources = state.inputResources\r\n        .map((i) => ({ ...i, weight: String(action.gameData.resources[i.itemKey].relativeValue) }));\r\n      return { ...state, weightingOptions: newWeightingOptions, inputResources: newInputResources };\r\n    }\r\n    case 'SET_RECIPE_ACTIVE': {\r\n      const newAllowedRecipes = { ...state.allowedRecipes };\r\n      newAllowedRecipes[action.key] = action.active;\r\n      return { ...state, allowedRecipes: newAllowedRecipes };\r\n    }\r\n    case 'MASS_SET_RECIPES_ACTIVE': {\r\n      const newAllowedRecipes = { ...state.allowedRecipes };\r\n      action.recipes.forEach((recipeKey) => {\r\n        newAllowedRecipes[recipeKey] = action.active;\r\n      });\r\n      return { ...state, allowedRecipes: newAllowedRecipes };\r\n    }\r\n    case 'LOAD_FROM_SHARED_FACTORY': {\r\n      try {\r\n        const newState: FactoryOptions = getInitialState(action.gameData);\r\n        newState.productionItems = (action.config.productionItems as any[]).map((i) => ({\r\n          ...getDefaultProductionItem(),\r\n          itemKey: i.itemKey,\r\n          mode: i.mode,\r\n          value: String(i.value),\r\n        }));\r\n        newState.inputItems = (action.config.inputItems as any[]).map((i) => ({\r\n          ...getDefaultInputItem(),\r\n          itemKey: i.itemKey,\r\n          value: String(i.value),\r\n          weight: String(i.weight),\r\n          unlimited: i.unlimited,\r\n        }));\r\n        newState.inputResources.forEach((r) => {\r\n          const resourceOptions = (action.config.inputResources as any[]).find((i) => r.itemKey === i.itemKey);\r\n          r.value = String(resourceOptions.value);\r\n          r.weight = String(resourceOptions.weight);\r\n          r.unlimited = resourceOptions.unlimited;\r\n        });\r\n        newState.allowHandGatheredItems = action.config.allowHandGatheredItems;\r\n        newState.weightingOptions.resources = String(action.config.weightingOptions.resources);\r\n        newState.weightingOptions.power = String(action.config.weightingOptions.power);\r\n        newState.weightingOptions.complexity = String(action.config.weightingOptions.complexity);\r\n        newState.weightingOptions.buildings = String(action.config.weightingOptions.buildings);\r\n        (action.config.allowedRecipes as any[]).forEach((key) => {\r\n          if (newState.allowedRecipes[key] != null) {\r\n            newState.allowedRecipes[key] = true;\r\n          }\r\n        });\r\n        return newState;\r\n      } catch (e) {\r\n        console.error(e);\r\n        return getInitialState(action.gameData);\r\n      }\r\n    }\r\n    case 'LOAD_FROM_LEGACY_ENCODING': {\r\n      try {\r\n        return decodeState_LEGACY(action.encoding, action.gameData);\r\n      } catch (e) {\r\n        console.error(e);\r\n        return getInitialState(action.gameData);\r\n      }\r\n    }\r\n    case 'LOAD_FROM_SESSION_STORAGE': {\r\n      try {\r\n        // TODO: some validation\r\n        return action.sessionState;\r\n      } catch (e) {\r\n        console.error(e);\r\n        return getInitialState(action.gameData);\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n// ENCODE/DECODE STATE\r\nfunction decodeState_LEGACY(stateStr: string, gameData: GameData): FactoryOptions {\r\n  const version = stateStr.substring(0, 5);\r\n  if (version === 'v1_U5') {\r\n    return decodeState_v1_U5(stateStr, gameData);\r\n  } else if (version === 'v2_U5') {\r\n    return decodeState_v2_U5(stateStr, gameData);\r\n  } else if (version === 'v3_U5') {\r\n    return decodeState_v3_U5(stateStr, gameData);\r\n  } else {\r\n    throw new Error('INVALID VERSION');\r\n  }\r\n}\r\n","export const MAX_PRIORITY = 20;\r\n","import React, { createContext, useContext, useReducer, useState, useEffect, useMemo, useCallback } from 'react';\r\nimport _ from 'lodash';\r\nimport { usePrevious } from '../../hooks/usePrevious';\r\nimport { useSessionStorage } from '../../hooks/useSessionStorage';\r\nimport { ProductionSolver, SolverResults } from '../../utilities/production-solver';\r\nimport { GraphError } from '../../utilities/error/GraphError';\r\nimport { usePostSharedFactory } from '../../api/modules/shared-factories/usePostSharedFactory';\r\nimport { reducer, FactoryAction, getInitialState } from './reducer';\r\nimport { FactoryOptions } from './types';\r\nimport { FactoryInitializer } from '../gameData';\r\nimport { GameData } from '../gameData/types';\r\nimport { SHARE_QUERY_PARAM } from '../gameData/consts';\r\nimport { useGlobalContext } from '../global';\r\n\r\n\r\nexport type ShareLinkProps = { link: string, copyToClipboard: boolean, loading: boolean };\r\n\r\n// TYPE\r\nexport type ProductionContextType = {\r\n  state: FactoryOptions,\r\n  dispatch: React.Dispatch<FactoryAction>,\r\n  gameData: GameData,\r\n  calculating: boolean,\r\n  solverResults: SolverResults | null,\r\n  calculate: () => void,\r\n  autoCalculate: boolean,\r\n  setAutoCalculate: (value: boolean) => void,\r\n  generateShareLink: () => void,\r\n  shareLink: ShareLinkProps,\r\n};\r\n\r\n\r\n// CONTEXT\r\nexport const ProductionContext = createContext<ProductionContextType | null>(null);\r\nProductionContext.displayName = 'ProductionContext';\r\n\r\n\r\n// HELPER HOOK\r\nexport function useProductionContext() {\r\n  const ctx = useContext(ProductionContext);\r\n  if (!ctx) {\r\n    throw new Error('ProductionContext is null');\r\n  }\r\n  return ctx;\r\n}\r\n\r\n\r\nconst _setCalculating = _.debounce((value: boolean, setCalculating: React.Dispatch<React.SetStateAction<boolean>>) => {\r\n  setCalculating(value);\r\n}, 300, { leading: false, trailing: true });\r\n\r\nconst _handleCalculateFactory = _.debounce(async (\r\n  state: FactoryOptions,\r\n  gameData: GameData,\r\n  setSolverResults: React.Dispatch<React.SetStateAction<SolverResults | null>>,\r\n  setCalculating: React.Dispatch<React.SetStateAction<boolean>>,\r\n) => {\r\n  _setCalculating(true, setCalculating);\r\n  try {\r\n    const solver = new ProductionSolver(state, gameData);\r\n    const results = await solver.exec();\r\n    setSolverResults((prevState) => {\r\n      if (!prevState || prevState.timestamp < results.timestamp) {\r\n        console.log(`Computed in: ${results.computeTime}ms`);\r\n        return results;\r\n      }\r\n      return prevState;\r\n    });\r\n  } catch (e: unknown) {\r\n    setSolverResults({\r\n      productionGraph: null,\r\n      report: null,\r\n      timestamp: performance.now(),\r\n      computeTime: 0,\r\n      error: e as GraphError,\r\n    });\r\n  } finally {\r\n    _setCalculating(false, setCalculating);\r\n  }\r\n}, 300, { leading: true, trailing: true });\r\n\r\n\r\n// PROVIDER\r\ntype PropTypes = {\r\n  gameData: GameData,\r\n  gameVersion: string,\r\n  initializer: FactoryInitializer | null,\r\n  triggerInitialize: boolean,\r\n  children: React.ReactNode,\r\n};\r\nexport const ProductionProvider = ({ gameData, gameVersion, initializer, triggerInitialize, children }: PropTypes) => {\r\n  const [state, dispatch] = useReducer(reducer, getInitialState(gameData));\r\n  const prevState = usePrevious(state);\r\n  const [solverResults, setSolverResults] = useState<SolverResults | null>(null);\r\n\r\n  const [calculating, setCalculating] = useState(false);\r\n  const [autoCalculate, setAutoCalculate] = useSessionStorage<'false' | 'true'>({ key: 'auto-calculate', defaultValue: 'true' });\r\n  const autoCalculateBool = autoCalculate === 'true' ? true : false;\r\n\r\n  const ctx = useGlobalContext();\r\n\r\n  const postSharedFactory = usePostSharedFactory();\r\n\r\n  const handleCalculateFactory = useCallback(() => {\r\n    ctx.refreshTip();\r\n    _handleCalculateFactory(state, gameData, setSolverResults, setCalculating)\r\n  }, [ctx, gameData, state]);\r\n\r\n  const handleSetAutoCalculate = (checked: boolean) => {\r\n    setAutoCalculate(checked ? 'true' : 'false');\r\n    if (checked) {\r\n      handleCalculateFactory();\r\n    }\r\n  };\r\n\r\n  const handleGenerateShareLink = () => {\r\n    postSharedFactory.request({ factoryConfig: state, gameVersion });\r\n  };\r\n\r\n  const shareLink: ShareLinkProps = useMemo(() => {\r\n    let link = '';\r\n    const key = postSharedFactory.data?.key || initializer?.shareKey;\r\n    if (key) {\r\n      link = `${window.location.protocol}//${window.location.host}${window.location.pathname}?${SHARE_QUERY_PARAM}=${key}`;\r\n    }\r\n    return {\r\n      link,\r\n      copyToClipboard: !!postSharedFactory.data?.key,\r\n      loading: postSharedFactory.loading,\r\n    }\r\n  }, [initializer?.shareKey, postSharedFactory.data?.key, postSharedFactory.loading]);\r\n  \r\n  useEffect(() => {\r\n    if (triggerInitialize) {\r\n      if (initializer?.factoryConfig) {\r\n        dispatch({ type: 'LOAD_FROM_SHARED_FACTORY', config: initializer.factoryConfig, gameData });\r\n      } else if (initializer?.legacyEncoding) {\r\n        dispatch({ type: 'LOAD_FROM_LEGACY_ENCODING', encoding: initializer.legacyEncoding, gameData });\r\n      } else if (initializer?.sessionState) {\r\n        dispatch({ type: 'LOAD_FROM_SESSION_STORAGE', sessionState: initializer?.sessionState, gameData });\r\n      } else {\r\n        dispatch({ type: 'RESET_FACTORY', gameData });\r\n      }\r\n      handleCalculateFactory();\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [triggerInitialize]);\r\n\r\n  useEffect(() => {\r\n    if (autoCalculateBool && prevState !== state) {\r\n      handleCalculateFactory();\r\n    }\r\n  }, [autoCalculateBool, handleCalculateFactory, prevState, state]);\r\n\r\n  useEffect(() => {\r\n      try {\r\n        window.sessionStorage.setItem('game-version', gameVersion);\r\n        window.sessionStorage.setItem('state', JSON.stringify(state));\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [state]);\r\n\r\n  const ctxValue = useMemo(() => {\r\n    return {\r\n      state,\r\n      dispatch,\r\n      gameData,\r\n      calculating,\r\n      solverResults,\r\n      calculate: handleCalculateFactory,\r\n      autoCalculate: autoCalculateBool,\r\n      setAutoCalculate: handleSetAutoCalculate,\r\n      generateShareLink: handleGenerateShareLink,\r\n      shareLink,\r\n    };\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [\r\n    state,\r\n    gameData,\r\n    calculating,\r\n    solverResults,\r\n    handleCalculateFactory,\r\n    autoCalculateBool,\r\n    shareLink,\r\n  ]);\r\n\r\n  return (\r\n    <ProductionContext.Provider value={ctxValue}>\r\n      {children}\r\n    </ProductionContext.Provider>\r\n  );\r\n}\r\n","import { post } from '../..';\r\nimport { useApi } from \"../../useApi\";\r\nimport { FactoryOptions } from '../../../contexts/production/types';\r\n\r\ninterface PostSharedFactoryRequest {\r\n  gameVersion: string,\r\n  factoryConfig: FactoryOptions,\r\n}\r\n\r\ninterface PostSharedFactoryResponse {\r\n  key: string,\r\n}\r\n\r\nexport function usePostSharedFactory() {\r\n  return useApi<PostSharedFactoryResponse, PostSharedFactoryRequest>(async (req) => {\r\n    const body = {\r\n      factoryConfig: {\r\n        gameVersion: req.gameVersion,\r\n        productionItems: req.factoryConfig.productionItems.map((i) => ({\r\n          itemKey: i.itemKey,\r\n          mode: i.mode,\r\n          value: Number(i.value),\r\n        })),\r\n        inputItems: req.factoryConfig.inputItems.map((i) => ({\r\n          itemKey: i.itemKey,\r\n          value: Number(i.value),\r\n          weight: Number(i.weight),\r\n          unlimited: i.unlimited,\r\n        })),\r\n        inputResources: req.factoryConfig.inputResources.map((i) => ({\r\n          itemKey: i.itemKey,\r\n          value: Number(i.value),\r\n          weight: Number(i.weight),\r\n          unlimited: i.unlimited,\r\n        })),\r\n        allowHandGatheredItems: req.factoryConfig.allowHandGatheredItems,\r\n        weightingOptions: {\r\n          resources: Number(req.factoryConfig.weightingOptions.resources),\r\n          power: Number(req.factoryConfig.weightingOptions.power),\r\n          complexity: Number(req.factoryConfig.weightingOptions.complexity),\r\n          buildings: Number(req.factoryConfig.weightingOptions.buildings),\r\n        },\r\n        allowedRecipes: Object.keys(req.factoryConfig.allowedRecipes).filter((key) => req.factoryConfig.allowedRecipes[key]),\r\n      }\r\n    }\r\n    const res = await post('/share-factory', body);\r\n    const json = res.data;\r\n    return json.data;\r\n  });\r\n}\r\n","// import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Paper } from '@mantine/core';\r\n\r\nconst Card: any = styled(Paper)`\r\n  margin-bottom: 20px;\r\n  border-left: 5px solid ${({ theme }) => theme.colors.primary[6]};\r\n`;\r\n\r\nexport default Card;\r\n","import React, { createContext, useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useMantineTheme } from '@mantine/core';\r\n\r\nexport type DrawerContextType = {\r\n  rootNode: HTMLDivElement | null,\r\n};\r\n\r\n\r\n// CONTEXT\r\nexport const DrawerContext = createContext<DrawerContextType | null>(null);\r\nDrawerContext.displayName = 'DrawerContext';\r\n\r\n\r\n// HELPER HOOK\r\nexport function useDrawerContext() {\r\n  const ctx = useContext(DrawerContext);\r\n  if (!ctx) {\r\n    throw new Error('DrawerContext is null');\r\n  }\r\n  return ctx;\r\n}\r\n\r\n\r\n// PROVIDER\r\ntype Props = {\r\n  children: React.ReactNode,\r\n};\r\nexport const DrawerProvider = (props: Props) => {\r\n  const { children } = props;\r\n  const [rootNode, setRootNode] = useState<HTMLDivElement | null>(null);\r\n  const theme = useMantineTheme();\r\n\r\n  function setRef(ref: HTMLDivElement | null) {\r\n    setRootNode((prevState) => {\r\n      if (prevState !== ref) return ref;\r\n      return prevState;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <DrawerContext.Provider value={{ rootNode }}>\r\n      <DrawerRoot ref={setRef} topOffset={theme.other.headerHeight} />\r\n      {children}\r\n    </DrawerContext.Provider>\r\n  );\r\n}\r\n\r\nconst DrawerRoot = styled.div<{ topOffset: string }>`\r\n  position: fixed;\r\n  top: ${({ topOffset }) => topOffset};\r\n  left: 0px;\r\n  bottom: 0px;\r\n  right: 0px;\r\n  z-index: ${({ theme }) => theme.other.drawerZIndex};\r\n  margin: 0;\r\n  padding: 0;\r\n  pointer-events: none;\r\n`;\r\n","import React, { forwardRef, useEffect, useLayoutEffect, useRef } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\ninterface Props {\r\n  children: React.ReactNode,\r\n  rootNode?: HTMLElement | null,\r\n  createRoot?: boolean,\r\n  key?: string,\r\n  style?: Partial<CSSStyleDeclaration>,\r\n}\r\n\r\nconst Portal = forwardRef<HTMLElement, Props>((props, ref) => {\r\n  const { children, rootNode, createRoot, key, style } = props;\r\n  const target = useRef<HTMLElement | null>(document.createElement('div'));\r\n\r\n  if (!createRoot) {\r\n    target.current = rootNode || null;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (createRoot && target.current) {\r\n      if (style) {\r\n        Object.entries(style).forEach(([key, value]) => {\r\n          target.current!.style[key as any] = value as any;\r\n        });\r\n      }\r\n      document.body.append(target.current);\r\n    }\r\n\r\n    return () => {\r\n      if (createRoot && target.current) {\r\n        target.current.remove();\r\n      }\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    if (ref) {\r\n      if (typeof ref === 'function') {\r\n        ref(target.current);\r\n      } else {\r\n        ref.current = target.current;\r\n      }\r\n    }\r\n  }, [ref, target]);\r\n\r\n  if (!target.current) return null;\r\n  return createPortal(children, target.current, key);\r\n});\r\n\r\nexport default Portal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { UnstyledButton, Paper, Text, Container } from '@mantine/core';\r\nimport { useLocalStorage } from '@mantine/hooks';\r\nimport { ChevronsLeft, ChevronsRight } from 'react-feather';\r\nimport { useDrawerContext } from '../../contexts/drawer';\r\nimport Portal from '../../components/Portal';\r\n\r\ninterface Props {\r\n  open?: boolean,\r\n  onToggle?: (newState: boolean) => void,\r\n  children: React.ReactNode,\r\n}\r\n\r\nconst Drawer = (props: Props) => {\r\n  const { open, onToggle, children } = props;\r\n  const [fullyClosed, setFullyClosed] = useState(!open);\r\n  const [tooltipDismissed, setTooltipDismissed] = useLocalStorage<'false' | 'true'>({ key: 'tooltip-dismissed', defaultValue: 'false' });\r\n  const ctx = useDrawerContext();\r\n\r\n  const showTooltip = tooltipDismissed === 'false';\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      setTooltipDismissed('true');\r\n    }\r\n  }, [open, setTooltipDismissed]);\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      setFullyClosed(false);\r\n    }\r\n  }, [open]);\r\n\r\n  function handleTransitionEnd() {\r\n    if (!open) {\r\n      setFullyClosed(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Portal rootNode={ctx.rootNode}>\r\n      <DrawerDimmer open={!!open || showTooltip} onClick={() => { !!open && onToggle?.(!open); }} />\r\n      <DrawerContainer open={!!open} onTransitionEnd={handleTransitionEnd}>\r\n        <DrawerToggle onClick={() => { onToggle?.(!open); }}>\r\n          <ToggleLabel>\r\n            <ToggleLabelText>{open ? 'Close' : 'Open'} Control Panel</ToggleLabelText>\r\n            <ToggleLabelIcon>\r\n              {\r\n                open\r\n                  ? <ChevronsLeft />\r\n                  : <ChevronsRight />\r\n              }\r\n            </ToggleLabelIcon>\r\n          </ToggleLabel>\r\n          {\r\n            showTooltip && (\r\n              <Tooltip>\r\n                <TooltipText>\r\n                  Click here to get started!\r\n                </TooltipText>\r\n                <TooltipConfirmContainer>\r\n                  <TooltipConfirm onClick={(e: any) => { setTooltipDismissed('true'); e.stopPropagation(); }}>\r\n                    Dismiss\r\n                  </TooltipConfirm>\r\n                </TooltipConfirmContainer>\r\n              </Tooltip>\r\n            )\r\n          }\r\n        </DrawerToggle>\r\n        <DrawerContent className='custom-scrollbar' aria-hidden={!open} $fullyClosed={fullyClosed} fluid>\r\n          {children}\r\n        </DrawerContent>\r\n      </DrawerContainer>\r\n    </Portal>\r\n  )\r\n};\r\n\r\nexport default Drawer;\r\n\r\nconst DrawerDimmer = styled.div<{ open: boolean }>`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  bottom: 0px;\r\n  right: 0px;\r\n  margin: 0;\r\n  padding: 0;\r\n  background: #000;\r\n  opacity: ${({ open }) => open ? 0.7 : 0.0 };\r\n  transition: opacity 550ms;\r\n  pointer-events: ${({ open }) => open ? 'auto' : 'none' };\r\n`;\r\n\r\nconst DrawerContainer = styled.div<{ open: boolean }>`\r\n  position: relative;\r\n  top: 0px;\r\n  left: ${({ open, theme }) => (open ? '0px' : `-${theme.other.drawerWidth}`)};\r\n  width: ${({ theme }) => theme.other.drawerWidth};\r\n  height: 100%;\r\n  background: ${({ theme }) => theme.colors.background[0]};\r\n  transition: left 550ms;\r\n  transition-timing-function: cubic-bezier(.68, -0.21, .38, 1.26);\r\n  pointer-events: auto;\r\n`;\r\n\r\nconst DrawerToggle = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  top: 0px;\r\n  bottom: 0px;\r\n  right: -25px;\r\n  width: 25px;\r\n  background: ${({ theme }) => theme.colors.primary[6]};\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.primary[7]};\r\n  }\r\n`;\r\n\r\nconst ToggleLabel = styled(UnstyledButton)`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 0 0 auto;\r\n  right: -25px;\r\n  width: 30px;\r\n  height: 160px;\r\n  border-radius: 2px;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  background: ${({ theme }) => theme.colors.primary[6]};\r\n  color: ${({ theme }) => theme.white};\r\n  overflow: visible;\r\n  white-space: nowrap;\r\n\r\n  ${DrawerToggle}:hover & {\r\n    background: ${({ theme }) => theme.colors.primary[7]};\r\n  }\r\n\r\n  ::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: -24px;\r\n    right: 2px;\r\n    width: 50px;\r\n    height: 26px;\r\n    background: ${({ theme }) => theme.colors.primary[6]};\r\n    transform: rotate(50deg);\r\n    z-index: 1;\r\n\r\n    ${DrawerToggle}:hover & {\r\n      background: ${({ theme }) => theme.colors.primary[7]};\r\n    }\r\n  }\r\n\r\n  ::after {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: -24px;\r\n    right: 2px;\r\n    width: 50px;\r\n    height: 26px;\r\n    background: ${({ theme }) => theme.colors.primary[6]};\r\n    transform: rotate(-50deg);\r\n    z-index: 1;\r\n\r\n    ${DrawerToggle}:hover & {\r\n      background: ${({ theme }) => theme.colors.primary[7]};\r\n    }\r\n  }\r\n`;\r\n\r\nconst ToggleLabelText = styled.span`\r\n  position: absolute;\r\n  left: -16px;\r\n  z-index: 2;\r\n  writing-mode: vertical-rl;\r\n  text-orientation: mixed;\r\n`;\r\n\r\nconst ToggleLabelIcon = styled.span`\r\n  position: absolute;\r\n  left: 5px;\r\n  z-index: 2;\r\n`;\r\n\r\nconst Tooltip = styled(Paper)`\r\n  @keyframes lookAtMe {\r\n    from {\r\n      left: 84px;\r\n    }\r\n\r\n    to {\r\n      left: 80px;\r\n    }\r\n  }\r\n\r\n  animation: 300ms infinite alternate lookAtMe;\r\n\r\n  position: absolute;\r\n  left: 80px;\r\n  padding: 20px;\r\n  z-index: 3;\r\n  background: ${({ theme }) => theme.colors.info[6]};\r\n  border-radius: 2px;\r\n  pointer-events: none;\r\n\r\n  ::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: calc(50% - 10px);\r\n    left: -10px;\r\n    width: 20px;\r\n    height: 20px;\r\n    background: ${({ theme }) => theme.colors.info[6]};\r\n\r\n    transform: rotate(45deg);\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nconst TooltipText = styled(Text)`\r\n  width: 180px;\r\n  height: 40px;\r\n`;\r\n\r\nconst TooltipConfirmContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst TooltipConfirm: any = styled(UnstyledButton)`\r\n  pointer-events: auto;\r\n  color: ${({ theme }) => theme.white};\r\n  text-decoration: underline;\r\n`;\r\n\r\nconst DrawerContent = styled(Container)<{ $fullyClosed: boolean }>`\r\n  visibility: ${({ $fullyClosed }) => $fullyClosed ? 'hidden' : 'visible'};\r\n  position: absolute;\r\n  top: 0px;\r\n  bottom: 0px;\r\n  left: 0px;\r\n  right: 0px;\r\n  padding: 10px;\r\n  padding-bottom: 30px;\r\n  overflow: auto;\r\n  overscroll-behavior: contain;\r\n`;\r\n","// import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Text } from '@mantine/core';\r\nimport Card from '../Card';\r\n\r\nexport const Section = styled(Card)`\r\n  background: ${({ theme }) => theme.colors.background[1]};\r\n  box-shadow: 0px 0px 24px -6px #0F1011;\r\n  border: 3px solid ${({ theme }) => theme.colors.background[3]};\r\n  padding: 20px;\r\n`;\r\n\r\nexport const SectionDescription = styled(Text)`\r\n  margin-bottom: 20px;\r\n`;\r\n","import React from 'react';\r\nimport { Button, ButtonProps } from '@mantine/core';\r\nimport { Trash2 } from 'react-feather';\r\n\r\nconst TrashButton = (props: ButtonProps<any>) => {\r\n  return (\r\n    <Button { ...props} color='danger' style={{ ...(props?.style || {}), width: '36px', height: '36px', padding: '0px', flex: '0 0 auto' }}>\r\n      <Trash2 size={20} />\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default TrashButton;\r\n","import React, { useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button, Select, TextInput, Group, Divider, Title } from '@mantine/core';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\nimport { POINTS_ITEM_KEY } from '../../../../utilities/production-solver';\r\nimport { MAX_PRIORITY } from '../../../../contexts/production/consts';\r\nimport { Section, SectionDescription } from '../../../../components/Section';\r\nimport TrashButton from '../../../../components/TrashButton';\r\n\r\n\r\nconst baseModeOptions = [\r\n  { value: 'per-minute', label: 'Items Per Min' },\r\n  { value: 'maximize', label: 'Maximize Output' },\r\n];\r\n\r\nconst priorityOptions = Array(MAX_PRIORITY)\r\n.fill('')\r\n  .map((_, i) => ({ value: `${i + 1}`, label: `Priority: ${i + 1}` }))\r\n  .reverse();\r\n\r\nconst ProductionTab = () => {\r\n  const ctx = useProductionContext();\r\n\r\n  const itemOptions = useMemo(() => {\r\n    const opts = Object.keys(ctx.gameData.items)\r\n      .filter((key) => ctx.gameData.items[key].producedFromRecipes.length !== 0 && !ctx.gameData.resources[key])\r\n      .map((key) => ({\r\n        value: key,\r\n        label: ctx.gameData.items[key].name,\r\n      }))\r\n      .sort((a, b) => {\r\n        return a.label > b.label ? 1 : -1;\r\n      });\r\n\r\n    opts.unshift({\r\n      value: POINTS_ITEM_KEY,\r\n      label: 'AWESOME Sink Points (x1000)'\r\n    });\r\n\r\n    return opts;\r\n  }, [ctx.gameData]);\r\n    \r\n  function renderItemInputs() {\r\n    return ctx.state.productionItems.map((data) => {\r\n      const modeOptions = [...baseModeOptions];\r\n      if (data.itemKey) {\r\n        const itemInfo = ctx.gameData.items[data.itemKey];\r\n        const recipeList = itemInfo?.producedFromRecipes || [];\r\n        recipeList.forEach((recipeKey) => {\r\n          const recipeInfo = ctx.gameData.recipes[recipeKey];\r\n          const target = recipeInfo?.products.find((p) => p.itemClass === data.itemKey);\r\n          if (target) {\r\n            const name = itemInfo.name === recipeInfo.name ? 'Base Recipe' : recipeInfo.name.replace('Alternate: ', '');\r\n            modeOptions.push({ value: recipeKey, label: `${name} [${target.perMinute}/min]` });\r\n          }\r\n        });\r\n      }\r\n      const selectedItem = itemOptions.find((io) => io.value === data.itemKey);\r\n      return (\r\n        <ItemContainer key={data.key}>\r\n          <Row>\r\n            <Select\r\n              placeholder='Select an item'\r\n              label='Item'\r\n              clearable\r\n              searchable\r\n              filter={(value, item) => {\r\n                if (selectedItem && value === selectedItem.label) {\r\n                  return true;\r\n                }\r\n                return !!item.label?.toLowerCase().includes(value.toLowerCase());\r\n              }}\r\n              data={itemOptions}\r\n              value={data.itemKey ? data.itemKey : ''}\r\n              onChange={(value) => {\r\n                ctx.dispatch({\r\n                  type: 'SET_PRODUCTION_ITEM',\r\n                  data: { key: data.key, itemKey: (value as any) },\r\n                });\r\n              }}\r\n              style={{ flex: '1 1 auto' }}\r\n            />\r\n            <TrashButton onClick={() => { ctx.dispatch({ type: 'DELETE_PRODUCTION_ITEM', key: data.key }); }} style={{ position: 'relative', top: '13px' }} />\r\n          </Row>\r\n          <Row>\r\n            {\r\n              data.mode === 'maximize'\r\n                ? (\r\n                  <Select\r\n                    label='Priority'\r\n                    data={priorityOptions}\r\n                    value={data.value}\r\n                    onChange={(value) => {\r\n                      ctx.dispatch({\r\n                        type: 'SET_PRODUCTION_ITEM_AMOUNT',\r\n                        data: { key: data.key, amount: (value as any) },\r\n                      });\r\n                    }}\r\n                    style={{ width: '160px' }}\r\n                  />\r\n                )\r\n                : (\r\n                  <TextInput\r\n                    label='Amount'\r\n                    className='no-spinner'\r\n                    type='number'\r\n                    min='0'\r\n                    step='1'\r\n                    value={data.value}\r\n                    onChange={(e) => {\r\n                      ctx.dispatch({\r\n                        type: 'SET_PRODUCTION_ITEM_AMOUNT',\r\n                        data: { key: data.key, amount: e.currentTarget.value },\r\n                      });\r\n                    }}\r\n                    style={{ width: '160px' }}\r\n                  />\r\n                )\r\n            }\r\n            <Select\r\n              label='Mode'\r\n              data={modeOptions}\r\n              value={data.mode}\r\n              onChange={(value) => {\r\n                ctx.dispatch({\r\n                  type: 'SET_PRODUCTION_ITEM_MODE',\r\n                  data: { key: data.key, mode: (value as any) },\r\n                });\r\n              }}\r\n              style={{ width: '280px' }}\r\n            />\r\n          </Row>\r\n          <Divider style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n        </ItemContainer>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Title order={3}>Production Goals</Title>\r\n        <SectionDescription>\r\n          Select the items you want to produce. When maximizing multiple outputs, higher priority items will be maximized first. When selecting a recipe as a target, the factory will be forced to use that recipe for the final output.\r\n        </SectionDescription>\r\n        {renderItemInputs()}\r\n        <Button onClick={() => { ctx.dispatch({ type: 'ADD_PRODUCTION_ITEM' }) }}>\r\n          + Add Product\r\n        </Button>\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductionTab;\r\n\r\nconst Row = styled(Group)`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Info } from 'react-feather';\r\nimport { Tooltip } from '@mantine/core';\r\n\r\ninterface Props {\r\n  label: string,\r\n  tooltip: string,\r\n}\r\n\r\nconst LabelWithTooltip = (props: Props) => {\r\n  const { label, tooltip } = props;\r\n  \r\n  return (\r\n    <Label>\r\n      {label}{' '}\r\n      <Tooltip\r\n        label={tooltip}\r\n        withArrow\r\n        color='dark'\r\n        width={230}\r\n        wrapLines\r\n        arrowSize={8}\r\n      >\r\n        <Info size={12} />\r\n      </Tooltip>\r\n    </Label>\r\n  );\r\n};\r\n\r\nexport default LabelWithTooltip;\r\n\r\nconst Label = styled.div`\r\n  position: relative;\r\n  cursor: pointer;\r\n`;\r\n","import React, { useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button, Select, TextInput, Checkbox, Group, Title, Divider, Text } from '@mantine/core';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\nimport TrashButton from '../../../../components/TrashButton';\r\nimport { Section, SectionDescription } from '../../../../components/Section';\r\nimport LabelWithTooltip from '../../../../components/LabelWithTooltip';\r\n\r\n\r\n\r\nconst InputsTab = () => {\r\n  const ctx = useProductionContext();\r\n  \r\n  const itemOptions = useMemo(() => Object.keys(ctx.gameData.items)\r\n    .filter((key) => ctx.gameData.items[key].producedFromRecipes.length !== 0 && ctx.gameData.items[key].usedInRecipes.length !== 0 && !ctx.gameData.resources[key])\r\n    .map((key) => ({\r\n      value: key,\r\n      label: ctx.gameData.items[key].name,\r\n    }))\r\n    .sort((a, b) => {\r\n      return a.label > b.label ? 1 : -1;\r\n    }), [ctx.gameData])\r\n\r\n  function renderItemInputs() {\r\n    return ctx.state.inputItems.map((data) => {\r\n      const selectedItem = itemOptions.find((io) => io.value === data.itemKey);\r\n      return (\r\n        <ItemContainer key={data.key}>\r\n          <Row>\r\n            <Select\r\n              placeholder=\"Select an item\"\r\n              label='Item'\r\n              clearable\r\n              searchable\r\n              filter={(value, item) => {\r\n                if (selectedItem && value === selectedItem.label) {\r\n                  return true;\r\n                }\r\n                return !!item.label?.toLowerCase().includes(value.toLowerCase());\r\n              }}\r\n              data={itemOptions}\r\n              value={data.itemKey ? data.itemKey : ''}\r\n              onChange={(value) => {\r\n                ctx.dispatch({\r\n                  type: 'UPDATE_INPUT_ITEM',\r\n                  data: { ...data, itemKey: (value as string) },\r\n                });\r\n              }}\r\n              style={{ flex: '1 1 auto' }}\r\n            />\r\n            <TrashButton onClick={() => { ctx.dispatch({ type: 'DELETE_INPUT_ITEM', key: data.key }); }} style={{ position: 'relative', top: '13px' }} />\r\n          </Row>\r\n          <Row>\r\n            <TextInput\r\n              label='Amount'\r\n              className='no-spinner'\r\n              type='number'\r\n              min='0'\r\n              step='1'\r\n              disabled={data.unlimited}\r\n              value={data.value}\r\n              onChange={(e) => {\r\n                ctx.dispatch({\r\n                  type: 'UPDATE_INPUT_ITEM',\r\n                  data: { ...data, value: e.currentTarget.value },\r\n                });\r\n              }}\r\n            />\r\n            <Checkbox\r\n              className='label'\r\n              label='Unlimited'\r\n              checked={data.unlimited}\r\n              onChange={() => {\r\n                ctx.dispatch({\r\n                  type: 'UPDATE_INPUT_ITEM',\r\n                  data: { ...data, unlimited: !data.unlimited },\r\n                });\r\n              }}\r\n              style={{ position: 'relative', top: '13px' }}\r\n            />\r\n          </Row>\r\n          <Divider style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n        </ItemContainer>\r\n      )\r\n    });\r\n  }\r\n\r\n  function renderWeightInputs() {\r\n    const weightingOptions = ctx.state.weightingOptions;\r\n    return (\r\n      <>\r\n        <Group grow>\r\n          <TextInput\r\n            label={<LabelWithTooltip label='Resource Efficiency' tooltip='This weighting prioritizes using as few resources as possible.' />}\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={weightingOptions.resources}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_WEIGHTING_OPTIONS',\r\n                data: { ...weightingOptions, resources: e.currentTarget.value },\r\n              });\r\n            }}\r\n          />\r\n          <TextInput\r\n            label={<LabelWithTooltip label='Power Efficiency' tooltip='This weighting prioritizes using as little power as possible.' />}\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={weightingOptions.power}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_WEIGHTING_OPTIONS',\r\n                data: { ...weightingOptions, power: e.currentTarget.value },\r\n              });\r\n            }}\r\n          />\r\n        </Group>\r\n        <Group grow style={{ marginTop: '10px' }}>\r\n          <TextInput\r\n            label={<LabelWithTooltip label='Complexity' tooltip='This weighting prioritizes reducing the number of item types used in the factory. Very slow to optimize for larger factories (WIP).' />}\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={weightingOptions.complexity}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_WEIGHTING_OPTIONS',\r\n                data: { ...weightingOptions, complexity: e.currentTarget.value },\r\n              });\r\n            }}\r\n          />\r\n          <TextInput\r\n            label={<LabelWithTooltip label='Buildings' tooltip='This weighting prioritizes using as few buildings as possible, discounting overclocking. May not be perfectly optimal, especially for smaller factories (WIP).' />}\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={weightingOptions.buildings}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_WEIGHTING_OPTIONS',\r\n                data: { ...weightingOptions, buildings: e.currentTarget.value },\r\n              });\r\n            }}\r\n          />\r\n        </Group>\r\n      </>\r\n    )\r\n  }\r\n\r\n  function renderResourceInputs() {\r\n    return ctx.state.inputResources.map((data) => (\r\n      <ItemContainer key={data.key}>\r\n        <Row>\r\n          <Text style={{ fontWeight: 'bold' }}>{ctx.gameData.items[data.itemKey].name}</Text>\r\n        </Row>\r\n        <Row>\r\n          <TextInput\r\n            label='Amount'\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={data.value}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_RESOURCE',\r\n                data: { ...data, value: e.currentTarget.value },\r\n              });\r\n            }}\r\n            disabled={data.unlimited}\r\n            style={{ flex: '1 1 auto' }}\r\n          />\r\n          <Checkbox\r\n            label='Unlimited'\r\n            checked={data.unlimited}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_RESOURCE',\r\n                data: { ...data, unlimited: e.currentTarget.checked },\r\n              });\r\n            }}\r\n            style={{ position: 'relative', top: '13px', flex: '1 1 auto' }}\r\n          />\r\n          <TextInput\r\n            label='Weight'\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={data.weight}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_RESOURCE',\r\n                data: { ...data, weight: e.currentTarget.value },\r\n              });\r\n            }}\r\n            style={{ flex: '0 0 100px' }}\r\n          />\r\n        </Row>\r\n        <Divider style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n      </ItemContainer>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Title order={3}>Input Items</Title>\r\n        <SectionDescription>\r\n          Select the items that you already have available and don't need to produce in this factory.\r\n        </SectionDescription>\r\n        {renderItemInputs()}\r\n        <Button onClick={() => { ctx.dispatch({ type: 'ADD_INPUT_ITEM' }) }}>\r\n          + Add Input\r\n        </Button>\r\n      </Section>\r\n      <Section>\r\n        <Title order={3}>Weighting Options</Title>\r\n        <SectionDescription>\r\n          Adjust the weights affecting the importance of various properties of the factory. A value of 0 indicates that that property is not considered during factory layout.\r\n        </SectionDescription>\r\n        {renderWeightInputs()}\r\n        <Button color='danger' onClick={() => { ctx.dispatch({ type: 'SET_ALL_WEIGHTS_DEFAULT', gameData: ctx.gameData }) }} style={{ marginTop: '15px' }}>\r\n          Reset All Weights\r\n        </Button>\r\n      </Section>\r\n      <Section>\r\n        <Title order={3}>Raw Resources</Title>\r\n        <SectionDescription>\r\n          Select the raw resources that are available to your factory. The default values are set to the map limits. The weight value is a number representing how valuable that resource is when comparing recipes. The defaults are calculated automatically according to node rarity.\r\n        </SectionDescription>\r\n        <Group style={{ marginBottom: '15px' }}>\r\n          <Button color='danger' onClick={() => { ctx.dispatch({ type: 'SET_RESOURCES_TO_MAP_LIMITS', gameData: ctx.gameData }) }}>\r\n            Set All To Maximum\r\n          </Button>\r\n          <Button color='danger' onClick={() => { ctx.dispatch({ type: 'SET_RESOURCES_TO_0' }) }}>\r\n            Set All To 0\r\n          </Button>\r\n        </Group>\r\n        <Checkbox\r\n          label='Allow hand-gathered resources (mycelia, flower petals, etc)'\r\n          checked={ctx.state.allowHandGatheredItems}\r\n          onChange={(e) => { ctx.dispatch({ type: 'SET_ALLOW_HAND_GATHERED_ITEMS', active: e.currentTarget.checked }) }}\r\n          style={{ marginBottom: '25px' }}\r\n          />\r\n        {renderResourceInputs()}\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsTab;\r\n\r\nconst Row = styled(Group)`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n","import React, { useState, useMemo, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { List, Checkbox, TextInput, Button, Group, Title, Grid, Col } from '@mantine/core';\r\nimport { Search } from 'react-feather';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\nimport { Section, SectionDescription } from '../../../../components/Section';\r\n\r\nconst cleanAltNameRegex = /^Alternate: /;\r\n\r\nconst RecipesTab = () => {\r\n  const ctx = useProductionContext();\r\n  const [searchValue, setSearchValue] = useState('');\r\n\r\n  const { baseRecipes, altRecipes } = useMemo(() => {\r\n    const baseR: { key: string, label: string }[] = [];\r\n    const altR: { key: string, label: string }[] = [];\r\n    Object.entries(ctx.gameData.recipes)\r\n      .forEach(([key, data]) => {\r\n        if (data.isAlternate) {\r\n          altR.push({\r\n            key,\r\n            label: data.name.replace(cleanAltNameRegex, ''),\r\n          });\r\n        } else {\r\n          baseR.push({\r\n            key,\r\n            label: data.name,\r\n          });\r\n        }\r\n      });\r\n    baseR.sort((a, b) => (a.label > b.label ? 1 : -1));\r\n    altR.sort((a, b) => (a.label > b.label ? 1 : -1));\r\n    return {\r\n      baseRecipes: baseR,\r\n      altRecipes: altR,\r\n    }\r\n  }, [ctx.gameData]);\r\n\r\n  const renderRecipeList = useCallback((recipeList: { key: string, label: string }[]) => {\r\n    return recipeList.map(({ key, label }) => ({\r\n      key,\r\n      label,\r\n      component: (\r\n        <List.Item key={key}>\r\n          <Checkbox\r\n            label={label}\r\n            checked={ctx.state.allowedRecipes[key]}\r\n            onChange={() => {\r\n              ctx.dispatch({\r\n                type: 'SET_RECIPE_ACTIVE',\r\n                key,\r\n                active: !ctx.state.allowedRecipes[key],\r\n              });\r\n            }}\r\n          />\r\n        </List.Item>\r\n      )\r\n    }));\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ctx.state, ctx.dispatch]);\r\n\r\n  const renderedBaseRecipes = useMemo(() => renderRecipeList(baseRecipes), [renderRecipeList]);\r\n  const renderedAltRecipes = useMemo(() => renderRecipeList(altRecipes), [renderRecipeList]);\r\n\r\n  function renderRecipeOptions(alternates: boolean) {\r\n    const renderedRecipes = alternates ? renderedAltRecipes : renderedBaseRecipes;\r\n    const filteredRecipes = renderedRecipes.filter(({ label }) => label.toLowerCase().includes(searchValue.toLowerCase()));\r\n    const filteredRecipeKeys = filteredRecipes.map(({ key }) => key);\r\n    return (\r\n      <>\r\n        <Group style={{ marginTop: '5px', marginBottom: '10px' }}>\r\n          <Button onClick={() => { ctx.dispatch({ type: 'MASS_SET_RECIPES_ACTIVE', recipes: filteredRecipeKeys, active: true }) }}>\r\n            Select All\r\n          </Button>\r\n          <Button onClick={() => { ctx.dispatch({ type: 'MASS_SET_RECIPES_ACTIVE', recipes: filteredRecipeKeys, active: false }) }}>\r\n            Select None\r\n          </Button>\r\n        </Group>\r\n        <List listStyleType='none' spacing={6}>\r\n          {filteredRecipes.map(({ component }) => component)}\r\n        </List>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Title order={3}>Recipes</Title>\r\n        <SectionDescription>\r\n          Select the recipes that you want to be considered in this factory.\r\n        </SectionDescription>\r\n        <TextInput\r\n          placeholder='Search...'\r\n          aria-label='search recipes'\r\n          icon={<Search size={16} />}\r\n          value={searchValue}\r\n          onChange={(e) => { setSearchValue(e.currentTarget.value); }}\r\n          style={{ marginBottom: '10px' }}\r\n        />\r\n        <Grid grow style={{ position: 'relative' }}>\r\n          <Col span={6}>\r\n            <Title order={3}>Alternate Recipes</Title>\r\n            {renderRecipeOptions(true)}\r\n          </Col>\r\n          <Col span={6}>\r\n            <Title order={3}>Base Recipes</Title>\r\n            {renderRecipeOptions(false)}\r\n          </Col>\r\n          <VDivider />\r\n        </Grid>\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipesTab;\r\n\r\nconst VDivider = styled.div`\r\n  position: absolute;\r\n  top: 20px;\r\n  bottom: 20px;\r\n  left: 255px;\r\n  width: 1px;\r\n  background: ${({ theme }) => theme.colors.background[3]};\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container, Tabs, Paper, Title, Divider, Group, Button, Switch, Space, TextInput, Popover, Text } from '@mantine/core';\r\nimport { TrendingUp, Shuffle, Box } from 'react-feather';\r\nimport { useProductionContext } from '../../../contexts/production';\r\nimport ProductionTab from './ProductionTab';\r\nimport InputsTab from './InputsTab';\r\nimport RecipesTab from './RecipesTab';\r\nimport { usePrevious } from '../../../hooks/usePrevious';\r\n\r\nconst PlannerOptions = () => {\r\n  const ctx = useProductionContext();\r\n  const [popoverOpened, setPopoverOpened] = useState(false);\r\n\r\n  const prevShareLink = usePrevious(ctx.shareLink.link);\r\n  useEffect(() => {\r\n    if (ctx.shareLink.copyToClipboard && ctx.shareLink.link && ctx.shareLink.link !== prevShareLink) {\r\n      navigator.clipboard.writeText(ctx.shareLink.link);\r\n      setPopoverOpened(true);\r\n    }\r\n  }, [ctx.shareLink, prevShareLink]);\r\n\r\n  const handleLinkInputClicked = () => {\r\n    if (ctx.shareLink) {\r\n      navigator.clipboard.writeText(ctx.shareLink.link);\r\n      setPopoverOpened(true);\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <Paper style={{ marginBottom: '20px', paddingTop: '10px' }}>\r\n        <Title order={2}>Control Panel</Title>\r\n        <Divider style={{ marginTop: '5px', marginBottom: '15px' }} />\r\n        <Group style={{ marginBottom: '15px' }}>\r\n          <Button\r\n            onClick={() => { ctx.calculate(); }}\r\n            disabled={ctx.autoCalculate}\r\n            style={{ marginRight: '15px', width: '125px' }}\r\n          >\r\n            Calculate\r\n          </Button>\r\n          <Switch\r\n            size='md'\r\n            label='Auto-calculate (disable if things get laggy)'\r\n            checked={ctx.autoCalculate}\r\n            onChange={(e) => { ctx.setAutoCalculate(e.currentTarget.checked); }}\r\n          />\r\n        </Group>\r\n        <Group style={{ marginBottom: '15px' }}>\r\n          <Button\r\n            color='positive'\r\n            onClick={() => { ctx.generateShareLink(); }}\r\n            loading={ctx.shareLink.loading}\r\n            style={{ width: '125px' }}\r\n          >\r\n            Save & Share\r\n          </Button>\r\n          <Popover\r\n            opened={popoverOpened}\r\n            onClose={() => setPopoverOpened(false)}\r\n            position='right'\r\n            withArrow\r\n            styles={{\r\n              root: {\r\n                flex: '1 1 auto !important',\r\n              },\r\n              inner: {\r\n                padding: '10px 16px',\r\n              },\r\n            }}\r\n            target={\r\n              <TextInput\r\n                value={ctx.shareLink.link}\r\n                placeholder='Save factory to generate a link'\r\n                readOnly={true}\r\n                onClick={() => { handleLinkInputClicked(); }}\r\n                styles={{\r\n                  root: {\r\n                    flex: '1 1 auto !important',\r\n                  },\r\n                }}\r\n              />\r\n            }\r\n          >\r\n            <Text>Link copied!</Text>\r\n          </Popover>\r\n        </Group>\r\n        <Space />\r\n        <Group style={{ marginBottom: '15px' }} position='right'>\r\n          <Button\r\n            color='danger'\r\n            onClick={() => { ctx.dispatch({ type: 'RESET_FACTORY', gameData: ctx.gameData }) }}\r\n          >\r\n            Reset ALL Factory Options\r\n          </Button>\r\n        </Group>\r\n      </Paper>\r\n      <Tabs grow variant='outline'>\r\n        <Tabs.Tab label='Production' icon={<TrendingUp size={18} />}>\r\n          <TabContainer fluid>\r\n            <ProductionTab />\r\n          </TabContainer>\r\n        </Tabs.Tab>\r\n        <Tabs.Tab label='Inputs' icon={<Shuffle size={18} />}>\r\n          <TabContainer fluid>\r\n            <InputsTab />\r\n          </TabContainer>\r\n        </Tabs.Tab>\r\n        <Tabs.Tab label='Recipes' icon={<Box size={18} />}>\r\n          <TabContainer fluid>\r\n            <RecipesTab />\r\n          </TabContainer>\r\n        </Tabs.Tab>\r\n      </Tabs>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlannerOptions;\r\n\r\nconst TabContainer = styled(Container)`\r\n  padding: 15px 15px;\r\n  background: ${({ theme }) => theme.colors.background[1]}\r\n`;\r\n","import { MantineThemeOverride } from '@mantine/core';\r\n// import { gradientFromColor } from './utilities/color';\r\n\r\nconst defaultFont = \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\";\r\n\r\nconst baseSat = '77%';\r\nconst baseLight = '63%';\r\nconst selectSat = '58%';\r\nconst selectLight = '58%';\r\n\r\n\r\nexport const graphColors = {\r\n  // nodes\r\n  resource: { base: `hsl(31, ${baseSat}, ${baseLight})`, selected: `hsl(31, ${selectSat}, ${selectLight})` },\r\n  input: { base: `hsl(0, ${baseSat}, ${baseLight})`, selected: `hsl(0, ${selectSat}, ${selectLight})` },\r\n  handGathered: { base: `hsl(261, ${baseSat}, ${baseLight})`, selected: `hsl(261, ${selectSat}, ${selectLight})` },\r\n  sideProduct: { base: `hsl(311, ${baseSat}, ${baseLight})`, selected: `hsl(311, ${selectSat}, ${selectLight})` },\r\n  finalProduct: { base: `hsl(128, ${baseSat}, ${baseLight})`, selected: `hsl(128, ${selectSat}, ${selectLight})` },\r\n  recipe: { base: `hsl(197, ${baseSat}, ${baseLight})`, selected: `hsl(197, ${selectSat}, ${selectLight})` },\r\n  nuclear: { base: `hsl(50, ${baseSat}, ${baseLight})`, selected: `hsl(50, ${selectSat}, ${selectLight})` },\r\n\r\n  // edges\r\n  edge: { line: '#999999', label: '#eeeeee' },\r\n  incoming: { line: `hsl(31, ${baseSat}, ${baseLight})`, label: `hsl(31, ${baseSat}, ${baseLight})` },\r\n  outgoing: { line: `hsl(128, ${baseSat}, ${baseLight})`, label: `hsl(128, ${baseSat}, ${baseLight})` },\r\n}\r\n\r\nexport const theme: MantineThemeOverride = {\r\n  primaryColor: 'primary',\r\n  colors: {\r\n    'primary': [\"#fcebde\", \"#f9d8be\", \"#f7c59f\", \"#f4b17f\", \"#f19e60\", \"#ef8b40\", \"#ec7821\", \"#c4631c\", \"#94501e\", \"#673c1c\"],\r\n    'positive': [\"#e9f3ea\", \"#d5e8d6\", \"#c1ddc2\", \"#acd2ae\", \"#98c69a\", \"#83bb86\", \"#6fb072\", \"#58965c\", \"#49744b\", \"#39543a\"],\r\n    'danger': [\"#fdb5b5\", \"#fda3a3\", \"#fc9191\", \"#fc7e7e\", \"#fb6c6c\", \"#fa5959\", \"#fa4747\", \"#f12929\", \"#dc1818\", \"#b21b1b\"],\r\n    'background': [\"#26282b\", \"#373b40\", \"#3f434a\", \"#50565e\", \"#6c7582\", \"#ffffff\", \"#ffffff\", \"#ffffff\", \"#b3b6ba\", \"#ffffff\"],\r\n    'info': Array(10).fill('#3065c7') as any,\r\n  },\r\n  white: '#eee',\r\n  fontFamily: defaultFont,\r\n  radius: { xs: 0, sm: 2, md: 4, lg: 8, xl: 16 },\r\n  headings: {\r\n    fontFamily: defaultFont,\r\n    fontWeight: 700,\r\n    sizes: {\r\n      h1: { fontSize: 36, lineHeight: 1.3 },\r\n      h2: { fontSize: 30, lineHeight: 1.35 },\r\n      h3: { fontSize: 22, lineHeight: 1.4 },\r\n      h4: { fontSize: 18, lineHeight: 1.45 },\r\n      h5: { fontSize: 16, lineHeight: 1.5 },\r\n      h6: { fontSize: 14, lineHeight: 1.5 },\r\n    }\r\n  },\r\n  other: {\r\n    headerHeight: '64px',\r\n    pageLeftMargin: '55px',\r\n    drawerWidth: '620px',\r\n    drawerZIndex: '10',\r\n    tooltipZIndex: '9999',\r\n    scrollbarTrackColor: '#212226',\r\n    scrollbarThumbColor: '#6c6c73',\r\n  },\r\n};\r\n\r\n\r\nexport const styles: any = {\r\n  AppShell: (theme: any) => ({\r\n    root: {\r\n      minHeight: '100vh',\r\n    }\r\n  }),\r\n  Paper: (theme: any) => ({\r\n    root: {\r\n      background: theme.colors.background[1],\r\n      padding: '15px',\r\n    }\r\n  }),\r\n  Text: (theme: any) => ({\r\n    root: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  Title: (theme: any) => ({\r\n    root: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  List: (theme: any) => ({\r\n    item: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  Anchor: (theme: any) => ({\r\n    root: {\r\n      color: theme.colors.primary[6],\r\n    }\r\n  }),\r\n  Select: (theme: any) => ({\r\n    label: {\r\n      color: theme.white,\r\n    },\r\n    item: {\r\n      borderRadius: '0px',\r\n    },\r\n    hovered: {\r\n      background: theme.colors.background[8],\r\n    },\r\n    selected: {\r\n      color: theme.white,\r\n      background: theme.colors.primary[5],\r\n    },\r\n  }),\r\n  TextInput: (theme: any) => ({\r\n    label: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  Checkbox: (theme: any) => ({\r\n    label: {\r\n      cursor: 'pointer',\r\n      color: theme.white,\r\n    },\r\n    input: {\r\n      cursor: 'pointer',\r\n    }\r\n  }),\r\n  Switch: (theme: any) => ({\r\n    label: {\r\n      cursor: 'pointer',\r\n      color: theme.white,\r\n    },\r\n    input: {\r\n      cursor: 'pointer',\r\n      background: theme.colors.background[1],\r\n      borderWidth: '2px',\r\n      '&:checked': {\r\n        background: theme.colors.primary[6],\r\n        borderColor: theme.colors.primary[6],\r\n      }\r\n    }\r\n  }),\r\n  Divider: (theme: any) => ({\r\n    horizontal: {\r\n      borderTopColor: theme.colors.background[3],\r\n    }\r\n  }),\r\n  Button: (theme: any) => ({\r\n    root: {\r\n      color: '#fff',\r\n      '&[disabled]': {\r\n        color: `${theme.white} !important`,\r\n        opacity: 0.5,\r\n        '&:not(.mantine-Button-loading)': {\r\n          backgroundColor: `${theme.colors.primary[6]} !important`,\r\n        }\r\n      }\r\n    }\r\n  }),\r\n  Tabs: (theme: any) => ({\r\n    tabLabel: {\r\n      color: theme.white,\r\n      fontFamily: \"'M PLUS 1 Code', sans-serif\",\r\n      fontSize: '16px',\r\n    },\r\n    tabIcon: {\r\n      color: theme.white,\r\n    },\r\n    tabActive: {\r\n      background: `${theme.colors.background[1]} !important`,\r\n      borderBottomWidth: `0px !important`,\r\n    },\r\n    body: {\r\n      paddingTop: '0px',\r\n      background: theme.colors.background[0],\r\n      borderBottomLeftRadius: '2px',\r\n      borderBottomRightRadius: '2px',\r\n    },\r\n  }),\r\n  Tooltip: (theme: any) => ({\r\n    body: {\r\n      background: theme.colors.background[2],\r\n      border: '1px solid #aaa',\r\n    },\r\n    arrow: {\r\n      background: theme.colors.background[2],\r\n      borderBottom: '1px solid #aaa',\r\n      borderRight: '1px solid #aaa',\r\n    }\r\n  }),\r\n  Popover: (theme: any) => ({\r\n    body: {\r\n      background: theme.colors.background[2],\r\n      borderColor: '#aaa',\r\n    },\r\n    arrow: {\r\n      background: theme.colors.background[2],\r\n      borderColor: '#aaa',\r\n    }\r\n  }),\r\n};\r\n","export function truncateFloat(n: number, places: number = 4) {\r\n  return n.toFixed(places).replace(/\\.?0+$/, '');\r\n}\r\n","import React, { forwardRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Title, Text, Divider, List, useMantineTheme, Paper } from '@mantine/core';\r\nimport { truncateFloat } from '../../utilities/number';\r\nimport { NODE_TYPE } from '../../utilities/production-solver';\r\nimport { NodeData } from '../../containers/ProductionPlanner/PlannerResults/ProductionGraphTab';\r\nimport Portal from '../Portal';\r\nimport { useProductionContext } from '../../contexts/production';\r\n\r\ninterface Props {\r\n  currentNode: any | null,\r\n}\r\n\r\nconst GraphTooltip = forwardRef<HTMLDivElement, Props>((props, ref) => {\r\n  const { currentNode } = props;\r\n  const theme = useMantineTheme();\r\n  const ctx = useProductionContext();\r\n\r\n  function renderInner() {\r\n    const data = currentNode.data() as NodeData;\r\n    if (data.type === NODE_TYPE.RECIPE) {\r\n      return renderRecipeInfo(data);\r\n    }\r\n    if (data.type === NODE_TYPE.RESOURCE) {\r\n      if (data.key === 'Desc_Water_C') {\r\n        return renderWaterExtractorInfo(data);\r\n      } else if (data.key === 'Desc_LiquidOil_C') {\r\n        return renderOilExtractorInfo(data);\r\n      } else if (data.key === 'Desc_NitrogenGas_C') {\r\n        return null;\r\n      }\r\n      return renderMinerInfo(data);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function renderRecipeInfo(data: NodeData) {\r\n    const recipeInfo = ctx.gameData.recipes[data.key];\r\n    const primaryProduct = recipeInfo.products[0];\r\n\r\n    const totalBuildings = Math.ceil(data.multiplier);\r\n    const clockPercentage = data.multiplier / totalBuildings * 100;\r\n    const itemsPerMinPerBuilding = primaryProduct.perMinute * data.multiplier / totalBuildings;\r\n\r\n    return (\r\n      <Tooltip>\r\n        <TooltipTitle order={3}>Recipe: [{recipeInfo.name}]</TooltipTitle>\r\n        <TooltipDivider />\r\n        <TooltipText>\r\n          <b>Buildings:</b> {totalBuildings}x {ctx.gameData.buildings[recipeInfo.producedIn].name}\r\n        </TooltipText>\r\n        <TooltipText>\r\n          <b>Clock speed:</b> {truncateFloat(clockPercentage)}% each\r\n        </TooltipText>\r\n        <TooltipText>\r\n          <b>Items per min:</b> {truncateFloat(itemsPerMinPerBuilding)} each\r\n        </TooltipText>\r\n        <TooltipDivider />\r\n        <TooltipText><b>Inputs:</b></TooltipText>\r\n        <List listStyleType='none' withPadding>\r\n          {\r\n            recipeInfo.ingredients.map((ingredient) => (\r\n              <List.Item>\r\n                <TooltipText>{ctx.gameData.items[ingredient.itemClass].name}: {truncateFloat(ingredient.perMinute * data.multiplier)} / min</TooltipText>\r\n              </List.Item>\r\n            ))\r\n          }\r\n        </List>\r\n        <TooltipText><b>Outputs:</b></TooltipText>\r\n        <List listStyleType='none' withPadding>\r\n          {\r\n            recipeInfo.products.map((product) => (\r\n              <List.Item>\r\n                <TooltipText>{ctx.gameData.items[product.itemClass].name}: {truncateFloat(product.perMinute * data.multiplier)} / min</TooltipText>\r\n              </List.Item>\r\n            ))\r\n          }\r\n        </List>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  function renderMinerInfo(data: NodeData) {\r\n    const itemInfo = ctx.gameData.items[data.key];\r\n    const baseNumMiners = data.multiplier / 60;\r\n    return (\r\n      <Tooltip>\r\n        <TooltipTitle order={3}>Resource: [{itemInfo.name}]</TooltipTitle>\r\n        <TooltipDivider />\r\n        <TooltipText><b>Miners required (assuming normal nodes):</b></TooltipText>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>100%</th>\r\n              <th>150%</th>\r\n              <th>200%</th>\r\n              <th>250%</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th>Mk. 1</th>\r\n              <td>{truncateFloat(baseNumMiners, 2)}x</td>\r\n              <td>{truncateFloat(baseNumMiners / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(baseNumMiners / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(baseNumMiners / 2.5, 2)}x</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Mk. 2</th>\r\n              <td>{truncateFloat(0.5 * baseNumMiners, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumMiners / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumMiners / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumMiners / 2.5, 2)}x</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Mk. 3</th>\r\n              <td>{truncateFloat(0.25 * baseNumMiners, 2)}x</td>\r\n              <td>{truncateFloat(0.25 * baseNumMiners / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(0.25 * baseNumMiners / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(0.25 * baseNumMiners / 2.5, 2)}x</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  function renderWaterExtractorInfo(data: NodeData) {\r\n    const itemInfo = ctx.gameData.items[data.key];\r\n    return (\r\n      <Tooltip>\r\n        <TooltipTitle order={3}>Resource: [{itemInfo.name}]</TooltipTitle>\r\n        <TooltipDivider />\r\n        <TooltipText><b>Extractors required:</b> {truncateFloat(data.multiplier / 120, 2)}x Water Extractor</TooltipText>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  function renderOilExtractorInfo(data: NodeData) {\r\n    const itemInfo = ctx.gameData.items[data.key];\r\n    const baseNumExtractors = data.multiplier / 120;\r\n    return (\r\n      <Tooltip>\r\n        <TooltipTitle order={3}>Resource: [{itemInfo.name}]</TooltipTitle>\r\n        <TooltipDivider />\r\n        <TooltipText><b>Extractors required:</b></TooltipText>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>100%</th>\r\n              <th>150%</th>\r\n              <th>200%</th>\r\n              <th>250%</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th>Impure</th>\r\n              <td>{truncateFloat(2.0 * baseNumExtractors, 2)}x</td>\r\n              <td>{truncateFloat(2.0 * baseNumExtractors / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(2.0 * baseNumExtractors / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(2.0 * baseNumExtractors / 2.5, 2)}x</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Normal</th>\r\n              <td>{truncateFloat(baseNumExtractors, 2)}x</td>\r\n              <td>{truncateFloat(baseNumExtractors / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(baseNumExtractors / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(baseNumExtractors / 2.5, 2)}x</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Pure</th>\r\n              <td>{truncateFloat(0.5 * baseNumExtractors, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumExtractors / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumExtractors / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumExtractors / 2.5, 2)}x</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Portal ref={ref} createRoot style={{ zIndex: theme.other.tooltipZIndex, pointerEvents: 'none' }}>\r\n      {currentNode ? renderInner() : null}\r\n    </Portal>\r\n  );\r\n});\r\n\r\nexport default GraphTooltip;\r\n\r\nconst Tooltip = styled(Paper)`\r\n  position: relative;\r\n  bottom: 50px;\r\n  background: ${({ theme }) => theme.colors.background[2]};\r\n  border: 1px solid #aaa;\r\n  min-width: 300px;\r\n\r\n  ::before {\r\n    content: '';\r\n    position: absolute;\r\n    left: calc(50% - 10px);\r\n    bottom: -12px;\r\n    width: 20px;\r\n    height: 20px;\r\n    background: ${({ theme }) => theme.colors.background[2]};\r\n    border-bottom: 1px solid #aaa;\r\n    border-right: 1px solid #aaa;\r\n\r\n    transform: rotate(45deg);\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nconst TooltipTitle = styled(Title)`\r\n  font-size: 16px;\r\n`;\r\n\r\nconst TooltipText = styled(Text)`\r\n  font-size: 15px;\r\n`;\r\n\r\nconst TooltipDivider = styled(Divider)`\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  border-top-color: ${({ theme }) => theme.colors.background[4]};\r\n`;\r\n\r\nconst Table = styled.table`\r\n  color: ${({ theme }) => theme.white};\r\n  border-collapse: collapse;\r\n\r\n  & th, td {\r\n    padding: 10px;\r\n    text-align: left;\r\n    font-size: 15px;\r\n  }\r\n\r\n  & td {\r\n    border: 1px solid ${({ theme }) => theme.colors.background[4]};\r\n  }\r\n\r\n  & tr:nth-child(2n) td {\r\n    background: ${({ theme }) => theme.colors.background[3]};\r\n  }\r\n`;\r\n","import React, { useMemo, useRef, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { nanoid } from 'nanoid';\r\nimport Cytoscape, { Stylesheet } from 'cytoscape';\r\nimport klay from 'cytoscape-klay';\r\nimport GraphVisualizer from 'react-cytoscapejs';\r\nimport popper from 'cytoscape-popper';\r\nimport { Text, Container, Center, Group, Loader } from '@mantine/core';\r\nimport { AlertCircle } from 'react-feather';\r\nimport { GraphNode, GraphEdge, NODE_TYPE } from '../../../../utilities/production-solver';\r\nimport { graphColors } from '../../../../theme';\r\nimport GraphTooltip from '../../../../components/GraphTooltip';\r\nimport { truncateFloat } from '../../../../utilities/number';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\nimport { GameData } from '../../../../contexts/gameData/types';\r\n\r\nCytoscape.use(popper);\r\nCytoscape.use(klay);\r\n\r\nif (process.env.NODE_ENV !== 'development') {\r\n  Cytoscape.warnings(false);\r\n}\r\n\r\nconst layout = {\r\n  name: 'klay',\r\n  padding: 40,\r\n  klay: {\r\n    direction: 'RIGHT',\r\n    edgeRouting: 'ORTHOGONAL',\r\n    nodePlacement: 'LINEAR_SEGMENTS',\r\n    edgeSpacingFactor: 0.2,\r\n    inLayerSpacingFactor: 0.7,\r\n    spacing: 90,\r\n    thoroughness: 10,\r\n  },\r\n};\r\n\r\nconst stylesheet: Stylesheet[] = [\r\n  {\r\n    // ====== BASE ====== //\r\n    selector: 'core',\r\n    style: {\r\n      'active-bg-color': '#000',\r\n      'active-bg-opacity': 0,\r\n      'active-bg-size': 0,\r\n      'selection-box-color': '#000',\r\n      'selection-box-border-color': '#000',\r\n      'selection-box-border-width': 0,\r\n      'selection-box-opacity': 0,\r\n      'outside-texture-bg-color': '#000',\r\n      'outside-texture-bg-opacity': 0,\r\n    },\r\n  },\r\n  {\r\n    selector: 'node',\r\n    style: {\r\n      'label': 'data(label)',\r\n      'text-valign': 'center',\r\n      'text-halign': 'center',\r\n      'height': '30px',\r\n      'width': '150px',\r\n      'text-max-width': '157px',\r\n      'padding-top': '20px',\r\n      'overlay-padding': 0,\r\n      'overlay-opacity': 0,\r\n      'text-wrap': 'wrap',\r\n      'font-size': '14px',\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge',\r\n    style: {\r\n      'label': 'data(label)',\r\n      'width': 1,\r\n      'curve-style': 'bezier',\r\n      'control-point-step-size': 100,\r\n      'target-arrow-shape': 'triangle-backcurve',\r\n      'arrow-scale': 1.2,\r\n      'overlay-padding': 0,\r\n      'overlay-opacity': 0,\r\n      'text-wrap': 'wrap',\r\n      'font-size': '14px',\r\n      'color': graphColors.edge.label,\r\n      'line-color': graphColors.edge.line,\r\n      'target-arrow-color': graphColors.edge.line,\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge.loop',\r\n    style: {\r\n      'loop-direction': '180deg',\r\n      'loop-sweep': '-40deg',\r\n      'edge-distances': 'node-position',\r\n      'source-endpoint': '-15% 50%',\r\n      'target-endpoint': '15% 50%',\r\n    },\r\n  },\r\n\r\n\r\n  // ====== NODES ====== //\r\n  {\r\n    selector: 'node.item-shape',\r\n    style: {\r\n      'shape': 'ellipse',\r\n      'height': '40px',\r\n      'width': '130px',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.recipe-shape',\r\n    style: {\r\n      'shape': 'round-rectangle',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.selected, node.grabbed',\r\n    style: {\r\n      'z-index': 100,\r\n      'height': '45px',\r\n      'width': '195px',\r\n      'text-max-width': '192px',\r\n      'font-size': '16px',\r\n      'font-weight': 'bold',\r\n      'border-width': 2,\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.item-shape.selected, node.item-shape.grabbed',\r\n    style: {\r\n      'height': '55px',\r\n      'width': '170px',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.resource',\r\n    style: { 'background-color': graphColors.resource.base },\r\n  },\r\n  {\r\n    selector: 'node.resource.selected, node.resource.grabbed',\r\n    style: { 'background-color': graphColors.resource.selected },\r\n  },\r\n  {\r\n    selector: 'node.input',\r\n    style: { 'background-color': graphColors.input.base },\r\n  },\r\n  {\r\n    selector: 'node.input.selected, node.input.grabbed',\r\n    style: { 'background-color': graphColors.input.selected },\r\n  },\r\n  {\r\n    selector: 'node.hand-gathered',\r\n    style: { 'background-color': graphColors.handGathered.base },\r\n  },\r\n  {\r\n    selector: 'node.hand-gathered.selected, node.hand-gathered.grabbed',\r\n    style: { 'background-color': graphColors.handGathered.selected },\r\n  },\r\n  {\r\n    selector: 'node.side-product',\r\n    style: { 'background-color': graphColors.sideProduct.base },\r\n  },\r\n  {\r\n    selector: 'node.side-product.selected, node.side-product.grabbed',\r\n    style: { 'background-color': graphColors.sideProduct.selected },\r\n  },\r\n  {\r\n    selector: 'node.final-product',\r\n    style: { 'background-color': graphColors.finalProduct.base },\r\n  },\r\n  {\r\n    selector: 'node.final-product.selected, node.final-product.grabbed',\r\n    style: { 'background-color': graphColors.finalProduct.selected },\r\n  },\r\n  {\r\n    selector: 'node.recipe',\r\n    style: { 'background-color': graphColors.recipe.base },\r\n  },\r\n  {\r\n    selector: 'node.recipe.selected, node.recipe.grabbed',\r\n    style: { 'background-color': graphColors.recipe.selected },\r\n  },\r\n  {\r\n    selector: 'node.nuclear',\r\n    style: { 'background-color': graphColors.nuclear.base },\r\n  },\r\n  {\r\n    selector: 'node.nuclear.selected, node.nuclear.grabbed',\r\n    style: { 'background-color': graphColors.nuclear.selected },\r\n  },\r\n\r\n  \r\n  // ====== EDGES ====== //\r\n  {\r\n    selector: 'edge.selected, edge.grabbed',\r\n    style: {\r\n      'width': 4,\r\n      'font-size': '14px',\r\n      'font-weight': 'bold',\r\n      'text-outline-width': 2,\r\n      'z-index': 100,\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge.selected-incoming, edge.grabbed-incoming',\r\n    style: {\r\n      'color': graphColors.incoming.label,\r\n      'line-color': graphColors.incoming.line,\r\n      'target-arrow-color': graphColors.incoming.line,\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge.selected-outgoing, edge.grabbed-outgoing',\r\n    style: {\r\n      'color': graphColors.outgoing.label,\r\n      'line-color': graphColors.outgoing.line,\r\n      'target-arrow-color': graphColors.outgoing.line,\r\n    },\r\n  },\r\n];\r\n\r\nconst NODE_COLOR_CLASS = {\r\n  [NODE_TYPE.FINAL_PRODUCT]: 'final-product',\r\n  [NODE_TYPE.SIDE_PRODUCT]: 'side-product',\r\n  [NODE_TYPE.INPUT_ITEM]: 'input',\r\n  [NODE_TYPE.HAND_GATHERED_RESOURCE]: 'hand-gathered',\r\n  [NODE_TYPE.RESOURCE]: 'resource',\r\n  [NODE_TYPE.RECIPE]: 'recipe',\r\n};\r\n\r\nfunction getNodeLabel(node: GraphNode, gameData: GameData) {\r\n  let label = '';\r\n  let amountText = '';\r\n  if (node.type === NODE_TYPE.RECIPE) {\r\n    const recipe = gameData.recipes[node.key];\r\n    label = recipe.name;\r\n    amountText = `${truncateFloat(node.multiplier)}x ${gameData.buildings[recipe.producedIn].name}`;\r\n  } else {\r\n    const item = gameData.items[node.key];\r\n    if (node.type === NODE_TYPE.SIDE_PRODUCT) {\r\n      label = `Side Product:\\n${item.name}`;\r\n    } else {\r\n      label = item.name;\r\n    }\r\n    amountText = `${truncateFloat(node.multiplier)} / min`;\r\n  }\r\n  return `${label}\\n${amountText}`;\r\n}\r\n\r\nfunction getNodeClasses(node: GraphNode, gameData: GameData) {\r\n  const classes = [];\r\n  if (node.type === NODE_TYPE.RECIPE) {\r\n    classes.push('recipe-shape');\r\n    const recipe = gameData.recipes[node.key];\r\n    if (recipe.producedIn === 'Desc_GeneratorNuclear_C') {\r\n      classes.push('nuclear');\r\n    } else {\r\n      classes.push(NODE_COLOR_CLASS[node.type]);\r\n    }\r\n  } else {\r\n    classes.push('item-shape');\r\n    classes.push(NODE_COLOR_CLASS[node.type]);\r\n  }\r\n  return classes;\r\n}\r\n\r\nfunction getEdgeLabel(edge: GraphEdge, gameData: GameData) {\r\n  const item = gameData.items[edge.key];\r\n  const label = item.name;\r\n  const amountText = `${truncateFloat(edge.productionRate)} / min`;\r\n  return `${label}\\n${amountText}`;\r\n}\r\n\r\nfunction _resizeListener(graphRef: React.RefObject<HTMLDivElement | null>) {\r\n  if (graphRef?.current) {\r\n    const bounds = graphRef.current.getBoundingClientRect();\r\n    graphRef.current.style.height = `${window.innerHeight - bounds.top - 40}px`;\r\n  }\r\n}\r\n\r\ninterface PopperRef {\r\n  popper: any,\r\n  nodeId: string,\r\n}\r\n\r\nexport interface NodeData extends GraphNode {\r\n  label: string,\r\n}\r\n\r\nexport interface EdgeData extends GraphEdge {\r\n  source: string,\r\n  target: string,\r\n  label: string,\r\n}\r\n\r\nconst ProductionGraphTab = () => {\r\n  const [doFirstRender, setDoFirstRender] = useState(false);\r\n  const graphRef = useRef<HTMLDivElement | null>(null);\r\n  const cyRef = useRef<Cytoscape.Core | null>(null);\r\n  const popupRef = useRef<HTMLDivElement | null>(null);\r\n  const popperRef = useRef<PopperRef | null>(null);\r\n  const [popupNode, setPopupNode] = useState<any | null>(null);\r\n  const ctx = useProductionContext();\r\n  const resultsGraph = ctx.solverResults?.productionGraph || null;\r\n  const graphError = ctx.solverResults?.error || null;\r\n  const isLoading = ctx.calculating;\r\n\r\n  function setGraphRef(instance: HTMLDivElement | null) {\r\n    if (instance && !graphRef.current) {\r\n      graphRef.current = instance;\r\n      _resizeListener(graphRef);\r\n      setDoFirstRender(true);\r\n    }\r\n  }\r\n\r\n  function setCyRef(instance: Cytoscape.Core | null) {\r\n    if (instance && cyRef.current !== instance) {\r\n      cyRef.current = instance;\r\n      setCyListeners(cyRef.current);\r\n    }\r\n  }\r\n\r\n  function setCyListeners(cy: Cytoscape.Core) {\r\n    cy.on('select', 'node', function (e) {\r\n      e.target.addClass('selected');\r\n      e.target.outgoers('edge').addClass('selected').addClass('selected-outgoing');\r\n      e.target.incomers('edge').addClass('selected').addClass('selected-incoming');\r\n    });\r\n\r\n    cy.on('unselect', 'node', function (e) {\r\n      e.target.removeClass('selected');\r\n      e.target.outgoers('edge').removeClass('selected').removeClass('selected-outgoing');\r\n      e.target.incomers('edge').removeClass('selected').removeClass('selected-incoming');\r\n    });\r\n\r\n    cy.on('grab', 'node', function (e) {\r\n      e.target.addClass('grabbed');\r\n      e.target.outgoers('edge').addClass('grabbed').addClass('grabbed-outgoing');\r\n      e.target.incomers('edge').addClass('grabbed').addClass('grabbed-incoming');\r\n    });\r\n\r\n    cy.on('free', 'node', function (e) {\r\n      e.target.removeClass('grabbed');\r\n      e.target.outgoers('edge').removeClass('grabbed').removeClass('grabbed-outgoing');\r\n      e.target.incomers('edge').removeClass('grabbed').removeClass('grabbed-incoming');\r\n    });\r\n\r\n    cy.on('mouseover', 'node', function (e) {\r\n      const nodeId = e.target.id() as string;\r\n      if (popperRef.current?.nodeId === nodeId) return;\r\n      deactivatePopper(cy);\r\n      activatePopper(cy, e.target);\r\n    });\r\n\r\n    cy.on('mouseout', 'node', function (e) {\r\n      const nodeId = e.target.id() as string;\r\n      if (popperRef.current?.nodeId === nodeId) {\r\n        deactivatePopper(cy);\r\n      }\r\n    });\r\n  }\r\n\r\n  function activatePopper(cy: Cytoscape.Core, node: any) {\r\n    const popper = node.popper({\r\n      content: () => popupRef.current || undefined,\r\n      popper: {\r\n        placement: 'top',\r\n      }\r\n    });\r\n    popperRef.current = { popper, nodeId: node.id() };\r\n    node.on('position', () => { popper.update(); });\r\n    cy.on('pan zoom resize', () => { popper.update(); });\r\n    setPopupNode(node);\r\n  }\r\n\r\n  function deactivatePopper(cy: Cytoscape.Core) {\r\n    if (!popperRef.current) return;\r\n    const node = cy.getElementById(popperRef.current.nodeId);\r\n    node.off('position');\r\n    cy.off('pan zoom resize');\r\n    popperRef.current.popper.destroy();\r\n    popperRef.current = null;\r\n    setPopupNode(null);\r\n  }\r\n\r\n  useEffect(() => {\r\n    function resizeListener() {\r\n      _resizeListener(graphRef);\r\n    }\r\n    window.addEventListener('resize', resizeListener);\r\n    return () => {\r\n      window.removeEventListener('resize', resizeListener);\r\n    }\r\n  }, []);\r\n\r\n  const graphProps = useMemo<any>(() => {\r\n    if (resultsGraph == null) {\r\n      return null;\r\n    }\r\n\r\n    const key = nanoid();\r\n    const elements: any[] = [];\r\n\r\n    Object.entries(resultsGraph.nodes).forEach(([key, node]) => {\r\n      elements.push({\r\n        group: 'nodes',\r\n        data: {\r\n          ...node,\r\n          label: getNodeLabel(node, ctx.gameData),\r\n        },\r\n        classes: getNodeClasses(node, ctx.gameData),\r\n      });\r\n    });\r\n    resultsGraph.edges.forEach((edge) => {\r\n      elements.push({\r\n        group: 'edges',\r\n        data: {\r\n          ...edge,\r\n          source: edge.from,\r\n          target: edge.to,\r\n          label: getEdgeLabel(edge, ctx.gameData),\r\n        },\r\n        classes: edge.from === edge.to ? ['loop'] : undefined,\r\n      });\r\n    });\r\n    \r\n    return { key, elements };\r\n  }, [resultsGraph]);\r\n\r\n  return (\r\n    <>\r\n      <GraphContainer fluid ref={setGraphRef}>\r\n        {\r\n          isLoading && (\r\n            <Center style={{ position: 'absolute', height: '100%', width: '100%' }}>\r\n              <Loader size={50} />\r\n            </Center>\r\n          )\r\n        }\r\n        {\r\n          doFirstRender && !isLoading && (\r\n            graphProps != null\r\n            ? (\r\n                <GraphVisualizer\r\n                  key={graphProps.key}\r\n                  elements={graphProps.elements}\r\n                  layout={layout}\r\n                  stylesheet={stylesheet}\r\n                  boxSelectionEnabled={false}\r\n                  wheelSensitivity={0.13}\r\n                  maxZoom={3.0}\r\n                  minZoom={0.1}\r\n                  style={{ position: 'absolute', height: '100%', width: '100%', overflow: 'hidden' }}\r\n                  cy={setCyRef}\r\n                />\r\n            )\r\n            : (\r\n              <Center style={{ position: 'absolute', height: '100%', width: '100%' }}>\r\n                <Group>\r\n                  <AlertCircle color=\"#eee\" size={85} style={{ position: 'relative', top: '3px' }} />\r\n                  <Group direction='column' style={{ gap: '0px' }}>\r\n                    <Text style={{ fontSize: '28px' }}>\r\n                      Could not build graph\r\n                    </Text>\r\n                      {graphError\r\n                      ? (\r\n                        <Text style={{ maxWidth: '600px', fontSize: '14px' }}>\r\n                            {`ERROR: ${graphError.message}`}<br />\r\n                            {graphError?.helpText || ''}\r\n                        </Text>\r\n                      )\r\n                      : null}\r\n                  </Group>\r\n                </Group>\r\n              </Center>\r\n            )\r\n          )\r\n        }\r\n      </GraphContainer>\r\n      <GraphTooltip ref={popupRef} currentNode={popupNode} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductionGraphTab;\r\n\r\nconst GraphContainer = styled(Container)`\r\n  position: relative;\r\n  min-height: 600px;\r\n  min-width: 800px;\r\n  border: 1px solid #fff;\r\n  border-top-width: 0px;\r\n  margin: 0px;\r\n  padding: 0px;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Title, List, Divider, Text, Container, Group } from '@mantine/core';\r\nimport { AlertCircle } from 'react-feather';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\n\r\nfunction formatFloat(n: number) {\r\n  return n.toLocaleString(undefined, { maximumFractionDigits: 3 });\r\n}\r\n\r\nconst ReportTab = () => {\r\n  const ctx = useProductionContext();\r\n  const report = ctx.solverResults?.report;\r\n\r\n  function renderReport() {\r\n    return (\r\n      <>\r\n        <Title order={2}>Statistics</Title>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Points Produced</SmallerTitle>\r\n        <Text>{formatFloat(report!.pointsProduced)} per min</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Resource Usage Score</SmallerTitle>\r\n        <Text>{formatFloat(report!.resourceEfficiencyScore)}</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Total Build Area</SmallerTitle>\r\n        <Text>{formatFloat(report!.totalBuildArea)} m²</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Estimated Minimal Foundations</SmallerTitle>\r\n        <Text>{formatFloat(report!.estimatedFoundations)} foundations ({formatFloat(report!.estimatedFoundations * 8)} Concrete)</Text>\r\n        <SDivider />\r\n\r\n        <Title order={2} style={{ marginTop: '30px' }}>Power</Title>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Manufacturing</SmallerTitle>\r\n        <Text>{formatFloat(report!.powerUsageEstimate.production)} MW</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Resource Extraction</SmallerTitle>\r\n        <Text>{formatFloat(report!.powerUsageEstimate.extraction)} MW</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Generation</SmallerTitle>\r\n        <Text>{formatFloat(report!.powerUsageEstimate.generators)} MW</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Total {report!.powerUsageEstimate.total < 0 ? 'Production' : 'Usage'}</SmallerTitle>\r\n        <Text>{formatFloat(Math.abs(report!.powerUsageEstimate.total))} MW</Text>\r\n        <SDivider />\r\n\r\n        <Title order={2} style={{ marginTop: '30px' }}>Buildings</Title>\r\n        <SDivider />\r\n        <List listStyleType='none'>\r\n          {renderBuildingsUsed()}\r\n          <List.Item>\r\n            <Title order={3} style={{ marginBottom: '8px' }}>Total</Title>\r\n            <ListWithLine withPadding listStyleType='none'>\r\n              {\r\n                Object.entries(report!.totalMaterialCost)\r\n                  .sort((a, b) => {\r\n                    if (a[1] > b[1]) return -1;\r\n                    if (a[1] < b[1]) return 1;\r\n                    return 0;\r\n                  })\r\n                  .map(([itemKey, count]) => (\r\n                    <List.Item key={itemKey}>\r\n                      <ItemLabel>{ctx.gameData.items[itemKey].name}</ItemLabel> <Count>x{formatFloat(count)}</Count>\r\n                    </List.Item>\r\n                  ))\r\n              }\r\n            </ListWithLine>\r\n          </List.Item>\r\n        </List>\r\n      </>\r\n    );\r\n  }\r\n\r\n  function renderBuildingsUsed() {\r\n    return Object.entries(report!.buildingsUsed)\r\n      .sort((a, b) => {\r\n        if (a[1].count > b[1].count) return -1;\r\n        if (a[1].count < b[1].count) return 1;\r\n        return 0;\r\n      })\r\n      .map(([buildingKey, usageInfo]) => (\r\n      <List.Item key={buildingKey} style={{ paddingBottom: '10px' }}>\r\n        <Title order={3} style={{ marginBottom: '8px' }}>\r\n          {ctx.gameData.buildings[buildingKey].name} <Count>x{formatFloat(usageInfo.count)}</Count>\r\n        </Title>\r\n        <ListWithLine withPadding listStyleType='none' style={{ marginBottom: '10px' }}>\r\n          {\r\n            Object.entries(usageInfo.materialCost)\r\n              .sort((a, b) => {\r\n                if (a[1] > b[1]) return -1;\r\n                if (a[1] < b[1]) return 1;\r\n                return 0;\r\n              })\r\n              .map(([itemKey, count]) => (\r\n                <List.Item key={itemKey}>\r\n                  <ItemLabel>{ctx.gameData.items[itemKey].name}</ItemLabel>  <Count>x{formatFloat(count)}</Count>\r\n                </List.Item>\r\n              ))\r\n          }\r\n        </ListWithLine>\r\n      </List.Item>\r\n    ))\r\n  }\r\n  \r\n  return (\r\n    <ReportContainer fluid>\r\n      {\r\n      !report\r\n        ? (\r\n          <Group style={{ height: '150px', justifyContent: 'flex-start' }}>\r\n            <AlertCircle color=\"#eee\" size={50} />\r\n            <Text style={{ fontSize: '32px' }}>\r\n              No data available\r\n            </Text>\r\n          </Group>\r\n        )\r\n        : renderReport()\r\n      }\r\n    </ReportContainer>\r\n  );\r\n};\r\n\r\nexport default ReportTab;\r\n\r\nconst ReportContainer = styled(Container)`\r\n  padding: 10px;\r\n  padding-bottom: 15px;\r\n`;\r\n\r\nconst SDivider = styled(Divider)`\r\n  margin: 10px 0px;\r\n`;\r\n\r\nconst SmallerTitle = styled(Title)`\r\n  font-size: 19px;\r\n`;\r\n\r\nconst ItemLabel = styled.span`\r\n  font-size: 17px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Count = styled.span`\r\n  font-size: 15px;\r\n  margin-left: 3px;\r\n`;\r\n\r\nconst ListWithLine = styled(List)`\r\n  position: relative;\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0px;\r\n    bottom: 0px;\r\n    left: 12px;\r\n    width: 3px;\r\n    background: ${({ theme }) => theme.colors.background[3]};\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Container, MantineTheme, Tabs, useMantineTheme } from '@mantine/core';\r\nimport { Share2, Edit } from 'react-feather';\r\nimport ProductionGraphTab from './ProductionGraphTab';\r\nimport ReportTab from './ReportTab';\r\nimport Card from '../../../components/Card';\r\n\r\nconst tabSx = (theme: MantineTheme) => ({\r\n  '&.mantine-Tabs-tabControl': {\r\n    minWidth: '200px',\r\n  },\r\n});\r\n\r\nconst PlannerResults = () => {\r\n  const theme = useMantineTheme();\r\n  return (\r\n    <Tabs variant='outline'>\r\n      <Tabs.Tab label='Production Graph' icon={<Share2 size={18} />} sx={tabSx}>\r\n        <Container fluid style={{ padding: '0px' }}>\r\n          <ProductionGraphTab />\r\n        </Container>\r\n      </Tabs.Tab>\r\n      <Tabs.Tab label='Factory Report' icon={<Edit size={18} />} sx={tabSx}>\r\n        <Card style={{ paddingLeft: '10px', background: theme.colors.background[0] }}>\r\n          <ReportTab  />\r\n        </Card>\r\n      </Tabs.Tab>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default PlannerResults;\r\n","import React from 'react';\r\nimport Drawer from '../Drawer';\r\nimport PlannerOptions from './PlannerOptions';\r\nimport PlannerResults from './PlannerResults';\r\nimport { useSessionStorage } from '../../hooks/useSessionStorage';\r\n\r\nconst Factory = () => {\r\n  const [drawerOpen, setDrawerOpen] = useSessionStorage<'false' | 'true'>({ key: 'drawer-open', defaultValue: 'false' });\r\n  return (\r\n    <>\r\n      <PlannerResults />\r\n      <Drawer open={drawerOpen === 'true'} onToggle={(value) => { setDrawerOpen(value ? 'true' : 'false'); }}>\r\n        <PlannerOptions />\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Factory;\r\n","import React from 'react';\r\nimport { Loader, Divider, Text, Title } from '@mantine/core';\r\nimport { AnimatePresence, motion } from 'framer-motion/dist/framer-motion';\r\nimport styled from 'styled-components';\r\nimport bgImage from '../../assets/stripe-bg.png';\r\nimport { useGameDataContext } from '../../contexts/gameData';\r\nimport { useGlobalContext } from '../../contexts/global';\r\nimport { ProductionProvider } from '../../contexts/production';\r\nimport Card from '../../components/Card';\r\nimport Factory from './Factory';\r\nimport Portal from '../../components/Portal';\r\n\r\nconst ProductionPlanner = () => {\r\n  const globalCtx = useGlobalContext();\r\n  const gdCtx = useGameDataContext();\r\n\r\n  const renderLoading = () => {\r\n    return (\r\n      <Portal createRoot>\r\n        <AnimatePresence>\r\n          {!gdCtx.gameData && (\r\n            <LoadingOverlay\r\n              $bgImage={bgImage}\r\n              initial={false}\r\n              animate={{ opacity: 1.5 }}\r\n              exit={{ opacity: 0 }}\r\n              transition={{ duration: 1.0, type: 'tween' }}\r\n            >\r\n              <Loader size='xl' />\r\n              <Title style={{ marginTop: '15px' }}>\r\n                Loading game data...\r\n              </Title>\r\n            </LoadingOverlay>\r\n          )}\r\n        </AnimatePresence>\r\n      </Portal>\r\n    );\r\n  }\r\n\r\n  const renderProduction = () => {\r\n    if (gdCtx.gameData) {\r\n      return (\r\n        <ProductionProvider gameData={gdCtx.gameData} gameVersion={gdCtx.gameVersion} initializer={gdCtx.initializer} triggerInitialize={gdCtx.completedThisFrame}>\r\n          <Factory />\r\n        </ProductionProvider>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {renderLoading()}\r\n      <Card style={{ marginBottom: '25px' }}>\r\n        <Title order={2}>\r\n          Welcome back &lt;Engineer ID #{globalCtx.engineerId}&gt;\r\n        </Title>\r\n        <Text>\r\n          This tool has been created to increase the efficiency of your work towards Project Assembly.<br />\r\n          We hope that you will continue to be effective.\r\n        </Text>\r\n        <Divider style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n        <Text style={{ fontSize: '13px' }}>\r\n          {globalCtx.ficsitTip}\r\n        </Text>\r\n      </Card>\r\n      {renderProduction()}\r\n    </>\r\n  )\r\n};\r\n\r\nexport default ProductionPlanner;\r\n\r\nconst LoadingOverlay = motion(styled.div<any>`\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  background: url(${({ $bgImage }) => $bgImage});\r\n  background-color: #000;\r\n  z-index: 9999;\r\n`);\r\n","import React from 'react';\r\n\r\nconst PaypalButton = () => {\r\n  return (\r\n    <form action=\"https://www.paypal.com/donate\" method=\"post\" target=\"_blank\" style={{ opacity: '0.8' }}>\r\n      <input type=\"hidden\" name=\"business\" value=\"EN9ZT88D25SRS\" />\r\n      <input type=\"hidden\" name=\"no_recurring\" value=\"1\" />\r\n      <input type=\"hidden\" name=\"item_name\" value=\"Wow, I didn't expect anyone to click this button! It honestly means a lot! I will put this money towards a nice coffee :P\" />\r\n      <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\r\n      <input type=\"image\" src=\"https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif\" name=\"submit\" title=\"PayPal - The safer, easier way to pay online!\" alt=\"Donate with PayPal button\" />\r\n      <img alt=\"\" src=\"https://www.paypal.com/en_US/i/scr/pixel.gif\" width=\"1\" height=\"1\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PaypalButton;\r\n","import React from 'react';\r\nimport { Anchor, AnchorProps } from '@mantine/core';\r\n\r\nconst ExternalLink = (props: AnchorProps<any>) => {\r\n  return <Anchor target='_blank' rel='noopener noreferrer' {...props} />;\r\n};\r\n\r\nexport default ExternalLink;\r\n","import React from 'react';\r\nimport { Title, Text } from '@mantine/core';\r\nimport Card from '../../components/Card';\r\nimport ExternalLink from '../../components/ExternalLink';\r\n\r\ninterface Props {\r\n  children: React.ReactNode,\r\n}\r\n\r\ninterface State {\r\n  hasError: boolean,\r\n}\r\n\r\nclass ErrorBoundary extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromError() {\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch() {\r\n    // TODO: log to reporting service\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <Card>\r\n          <Title>Oh no...</Title>\r\n          <Text>\r\n            Something broke horribly... Sorry about that, but that's why it says BETA at the top :P<br />\r\n            If you don't mind, you can <ExternalLink href='https://github.com/lydianlights/yet-another-factory-planner/issues'>file an issue on github</ExternalLink> or <ExternalLink href='https://discord.gg/p7e9ZzRHCm'>contact me on discord</ExternalLink> letting me know what you were doing, that way I can fix this crash.<br />\r\n            In the meantime, refreshing the page should reset everything and let you get back to work :D\r\n          </Text>\r\n        </Card>\r\n      )\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppShell, Header, Container, useMantineTheme, Anchor } from '@mantine/core';\r\nimport SiteHeader from './SiteHeader';\r\nimport ProductionPlanner from '../ProductionPlanner';\r\nimport PaypalButton from '../../components/PaypalButton';\r\nimport ExternalLink from '../../components/ExternalLink';\r\nimport ErrorBoundary from '../ErrorBoundary';\r\n\r\nconst Main = () => {\r\n  const theme = useMantineTheme();\r\n  return (\r\n    <AppShell\r\n      padding='md'\r\n      header={<SHeader height={theme.other.headerHeight}><SiteHeader /></SHeader>}\r\n    >\r\n      <MainContainer fluid>\r\n        <ErrorBoundary>\r\n          <ProductionPlanner />\r\n        </ErrorBoundary>\r\n        <Footer>\r\n          <FooterContent>\r\n            Made with ♥ by <ExternalLink href='https://github.com/lydianlights'>LydianLights</ExternalLink> -\r\n            Questions or bugs? File an <ExternalLink href='https://github.com/lydianlights/yet-another-factory-planner/issues'>issue on github</ExternalLink> or <ExternalLink href='https://discord.gg/p7e9ZzRHCm'>check out the discord</ExternalLink>\r\n          </FooterContent>\r\n          <PaypalButton />\r\n        </Footer>\r\n      </MainContainer>\r\n    </AppShell>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n\r\nconst SHeader = styled(Header)`\r\n  position: fixed;\r\n  margin: 0px;\r\n  padding: 10px;\r\n  background: ${({ theme }) => theme.colors.primary[6]};\r\n  overflow: hidden;\r\n`;\r\n\r\nconst MainContainer = styled(Container)`\r\n  margin-left: ${({ theme }) => theme.other.pageLeftMargin};\r\n  margin-top: ${({ theme }) => theme.other.headerHeight};\r\n  padding-left: 0px;\r\n`;\r\n\r\nconst Footer = styled(Container)`\r\n  margin-top: 40px;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst FooterContent = styled(Container)`\r\n  padding: 10px 20px;\r\n  color: ${({ theme }) => theme.white};\r\n  /* background: rgba(0, 0, 0, 0.3); */\r\n`;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport bgImage from './assets/stripe-bg.png';\r\n\r\nconst GlobalStylesheet = createGlobalStyle<any>`\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: ${({ theme }) => theme.fontFamily};\r\n    background: url(${bgImage});\r\n  }\r\n\r\n  #root {\r\n    min-height: 100vh;\r\n  }\r\n  \r\n  html,\r\n  .custom-scrollbar {\r\n    scrollbar-color: ${({ theme }) => `${theme.other.scrollbarThumbColor} ${theme.other.scrollbarTrackColor}`};\r\n\r\n    & > * {\r\n      scrollbar-color: initial; // prevent inheritance\r\n    }\r\n\r\n    ::-webkit-scrollbar {\r\n      width: auto;\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n      background-color: ${({ theme }) => theme.other.scrollbarTrackColor};\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n      background-color: ${({ theme }) => theme.other.scrollbarThumbColor};\r\n    }\r\n\r\n    ::-webkit-scrollbar-corner {\r\n      background-color: ${({ theme }) => theme.other.scrollbarTrackColor};\r\n    }\r\n    \r\n    ::-webkit-scrollbar-button:single-button {\r\n      background-color: ${({ theme }) => theme.other.scrollbarTrackColor};\r\n      display: block;\r\n      height: auto;\r\n      width: auto;\r\n      background-size: 10px;\r\n      background-repeat: no-repeat;\r\n      background-position: center center;\r\n    }\r\n\r\n    // Up\r\n    ::-webkit-scrollbar-button:single-button:vertical:decrement {\r\n      background-image: url(\"data:image/svg+xml;base64,${btoa('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill=\"#eee\"><polygon points=\"50,20 100,75 0,75 Z\"/></svg>')}\");\r\n    }\r\n\r\n    // Down\r\n    ::-webkit-scrollbar-button:single-button:vertical:increment {\r\n      background-image: url(\"data:image/svg+xml;base64,${btoa('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill=\"#eee\"><polygon points=\"50,75 100,20 0,20 Z\"/></svg>')}\");\r\n    }\r\n\r\n    // Left\r\n    ::-webkit-scrollbar-button:single-button:horizontal:decrement {\r\n      background-image: url(\"data:image/svg+xml;base64,${btoa('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill=\"#eee\"><polygon points=\"20,50 75,100 75,0 Z\"/></svg>')}\");\r\n    }\r\n\r\n    // Right\r\n    ::-webkit-scrollbar-button:single-button:horizontal:increment {\r\n      background-image: url(\"data:image/svg+xml;base64,${btoa('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill=\"#eee\"><polygon points=\"75,50 20,100 20,0 Z\"/></svg>')}\");\r\n    }\r\n  }\r\n`;\r\n\r\nexport default GlobalStylesheet;\r\n","import React from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { MantineProvider, useMantineTheme } from '@mantine/core';\r\nimport Main from './containers/Main';\r\nimport { theme, styles } from './theme';\r\nimport GlobalStylesheet from './global-stylesheet';\r\nimport { DrawerProvider } from './contexts/drawer';\r\nimport { GlobalContextProvider } from './contexts/global';\r\nimport { GameDataProvider } from './contexts/gameData';\r\n\r\nfunction App() {\r\n  return (\r\n    <MantineProvider\r\n      theme={theme}\r\n      styles={styles}\r\n    >\r\n      <ThemeTransfer />\r\n    </MantineProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst ThemeTransfer = () => {\r\n  const mergedTheme = useMantineTheme();\r\n  return (\r\n    <ThemeProvider theme={mergedTheme}>\r\n      <GlobalStylesheet />\r\n      <DrawerProvider>\r\n        <GlobalContextProvider>\r\n          <GameDataProvider>\r\n            <Main />\r\n          </GameDataProvider>\r\n        </GlobalContextProvider>\r\n      </DrawerProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}