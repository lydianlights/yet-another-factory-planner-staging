{"version":3,"sources":["assets/satisfactory_logo_full_color_small.png","components/SocialIcon/index.tsx","containers/Main/SiteHeader/index.tsx","data/index.ts","utilities/production-solver/index.ts","contexts/production/state-decoders/v1_U5.ts","contexts/production/state-decoders/v2_U5.ts","contexts/production/state-decoders/v3_U5.ts","contexts/production/reducer.tsx","contexts/production/index.tsx","hooks/usePrevious.ts","contexts/drawer/index.tsx","components/Portal/index.tsx","containers/Drawer/index.tsx","components/Card/index.tsx","components/Section/index.tsx","components/TrashButton/index.tsx","containers/ProductionPlanner/PlannerOptions/ProductionTab/index.tsx","components/LabelWithTooltip/index.tsx","containers/ProductionPlanner/PlannerOptions/InputsTab/index.tsx","containers/ProductionPlanner/PlannerOptions/RecipesTab/index.tsx","containers/ProductionPlanner/PlannerOptions/index.tsx","theme.ts","utilities/number/index.ts","components/GraphTooltip/index.tsx","containers/ProductionPlanner/PlannerResults/ProductionGraphTab/index.tsx","containers/ProductionPlanner/PlannerResults/ReportTab/index.tsx","containers/ProductionPlanner/PlannerResults/index.tsx","containers/ProductionPlanner/Factory.tsx","containers/ProductionPlanner/index.tsx","components/PaypalButton/index.tsx","components/ExternalLink/index.tsx","containers/ErrorBoundary/index.tsx","containers/Main/index.tsx","assets/stripe-bg.png","global-stylesheet.ts","App.tsx","index.tsx"],"names":["SocialIcon","props","href","icon","SAnchor","target","rel","styled","Anchor","SiteHeader","HeaderContainer","fluid","src","logo","height","alt","MainTitle","BetaTag","SocialLinks","faGithub","fontSize","faDiscord","faTwitter","Container","theme","other","pageLeftMargin","Title","div","Group","buildings","buildingsRaw","recipes","recipesRaw","resources","resourcesRaw","items","itemsRaw","handGatheredItems","handGatheredItemsRaw","EPSILON","MAXIMIZE_TARGET_WEIGHTING","RATE_TARGET_KEY","NODE_TYPE","POINTS_ITEM_KEY","ProductionSolver","options","globalWeights","inputs","rateTargets","maximizeTargets","hasPointsTarget","allowedRecipes","this","Number","weightingOptions","power","complexity","validateNumber","maxGlobalWeight","Math","max","inputResources","forEach","item","itemKey","amount","unlimited","Infinity","value","weight","type","maxResourceWeight","Object","values","map","i","inputItems","allowHandGatheredItems","keys","perMinTargets","recipeTargets","productionItems","Error","isPoints","mode","recipe","existingTarget","find","t","key","priority","push","recipeKey","recipeInfo","products","p","itemClass","perMinute","sort","a","b","length","num","isNaN","timestamp","performance","now","loadGLPK","glpk","productionSolverPass","productionSolution","productionGraph","generateProductionGraph","remainingInputs","inputKey","input","inputNode","nodes","n","usedAmount","multiplier","diff","entries","solution","report","generateProductionReport","computeTime","error","message","itemInfo","isFicsmas","sinkPoints","targetKey","model","name","objective","direction","GLP_MIN","vars","subjectTo","doPoints","pointsVars","buildingInfo","producedIn","powerScore","complexityScore","ingredients","buildingsScore","resourceScore","ingredient","inputInfo","coef","bnds","GLP_LO","ub","lb","pointCoef","product","getItemPoints","intrinsicPoints","targetInfo","GLP_UP","NaN","v","existingVar","ov","usedInRecipes","producedFromRecipes","outputInfo","solve","msglev","GLP_MSG_OFF","tmlim","result","status","GLP_OPT","GLP_FEAS","val","itemProductionTotals","graph","edges","producedBy","usedBy","id","nanoid","productionTotals","j","nextDemand","usageInfo","usageNode","productionInfo","productionNode","outputRecipe","recipeAmount","itemNode","from","to","productionRate","nodeType","pointsProduced","powerUsageEstimate","production","extraction","generators","total","resourceEfficiencyScore","totalBuildArea","estimatedFoundations","buildingsUsed","totalMaterialCost","node","numExtractors","ceil","count","materialCost","buildCost","quantity","buildingKey","area","SEP2","getItemBySlug","slug","itemEntry","getModeBySlug","recipeEntry","ORDERED_RESOURCES","getInitialInputResources","data","String","maxExtraction","relativeValue","aIndex","findIndex","r","bIndex","getInitialAllowedRecipes","recipeMap","isAlternate","getInitialState","version","reducer","state","action","newProductionItems","filter","newItem","nextPriority","newInputItems","newInputResources","active","newWeightingOptions","newAllowedRecipes","encodedState","URLSearchParams","window","location","search","get","stateStr","substring","newState","fields","split","allowedRecipesBits","BigInt","toString","padStart","parseInt","productionItemsStrings","str","inputItemsStrings","inputResourcesStrings","resourceOptions","weightingOptionsStrings","decodeState_v1_U5","decodeState_v2_U5","decodeState_v3_U5","decodeState","e","console","getItemSlug","encodeState","join","productionItemsField","getModeSlug","inputItemsField","inputResourcesField","seed","floor","Date","getTime","rng","seedrandom","TIPS","TIP_INDEX","TIP","ID","random","_handleCalculateFactory","_","debounce","setSolverResults","setCalculating","solver","exec","results","prevState","log","leading","trailing","ProductionContext","createContext","useProductionContext","ctx","useContext","displayName","ProductionProvider","children","useReducer","dispatch","useState","loadedFromQuery","setLoadedFromQuery","firstCalculationDone","setFirstCalculationDone","useLocalStorageValue","defaultValue","autoCalculate","setAutoCalculate","calculating","solverResults","engineerId","ref","useRef","useEffect","current","usePrevious","autoCalculateBool","handleCalculateFactory","useCallback","handleSetAutoCalculate","checked","history","replaceState","pathname","ctxValue","useMemo","calculate","ficsitTip","Provider","DrawerContext","DrawerProvider","rootNode","setRootNode","useMantineTheme","DrawerRoot","topOffset","headerHeight","drawerZIndex","Portal","forwardRef","createRoot","style","document","createElement","body","append","remove","useLayoutEffect","createPortal","Drawer","open","onToggle","fullyClosed","setFullyClosed","tooltipDismissed","setTooltipDismissed","useDrawerContext","showTooltip","DrawerDimmer","onClick","DrawerContainer","onTransitionEnd","DrawerToggle","ToggleLabel","ToggleLabelText","ToggleLabelIcon","Tooltip","TooltipText","TooltipConfirmContainer","TooltipConfirm","stopPropagation","DrawerContent","className","drawerWidth","colors","background","primary","UnstyledButton","white","span","Paper","info","Text","Card","Section","SectionDescription","TrashButton","Button","color","width","padding","flex","size","itemOptions","label","unshift","baseModeOptions","priorityOptions","Array","fill","reverse","ProductionTab","order","modeOptions","replace","ItemContainer","Row","Select","placeholder","clearable","searchable","onChange","position","top","TextInput","min","step","currentTarget","Divider","marginTop","marginBottom","LabelWithTooltip","tooltip","Label","withArrow","wrapLines","arrowSize","InputsTab","disabled","Checkbox","grow","renderWeightInputs","fontWeight","cleanAltNameRegex","baseRecipes","altRecipes","RecipesTab","searchValue","setSearchValue","renderRecipeList","recipeList","component","List","Item","renderedBaseRecipes","renderedAltRecipes","renderRecipeOptions","alternates","filteredRecipes","toLowerCase","includes","filteredRecipeKeys","listStyleType","spacing","Grid","Col","VDivider","PlannerOptions","paddingTop","marginRight","Switch","Tabs","variant","Tab","TabContainer","defaultFont","baseSat","baseLight","selectSat","selectLight","graphColors","resource","base","selected","handGathered","sideProduct","finalProduct","nuclear","edge","line","incoming","outgoing","primaryColor","fontFamily","radius","xs","sm","md","lg","xl","headings","sizes","h1","lineHeight","h2","h3","h4","h5","h6","tooltipZIndex","scrollbarTrackColor","scrollbarThumbColor","styles","AppShell","root","minHeight","borderRadius","hovered","cursor","borderWidth","borderColor","horizontal","borderTopColor","backgroundColor","opacity","tabLabel","tabIcon","tabActive","borderBottomWidth","borderBottomLeftRadius","borderBottomRightRadius","border","arrow","borderBottom","borderRight","truncateFloat","places","toFixed","GraphTooltip","currentNode","zIndex","pointerEvents","primaryProduct","totalBuildings","clockPercentage","itemsPerMinPerBuilding","TooltipTitle","TooltipDivider","withPadding","renderRecipeInfo","renderWaterExtractorInfo","baseNumExtractors","Table","renderOilExtractorInfo","baseNumMiners","renderMinerInfo","renderInner","table","Cytoscape","use","popper","klay","warnings","layout","edgeRouting","nodePlacement","edgeSpacingFactor","inLayerSpacingFactor","thoroughness","stylesheet","selector","NODE_COLOR_CLASS","getNodeLabel","amountText","getNodeClasses","classes","getEdgeLabel","_resizeListener","graphRef","bounds","getBoundingClientRect","innerHeight","ProductionGraphTab","activeGraph","errorMessage","doFirstRender","setDoFirstRender","cyRef","popupRef","popperRef","popupNode","setPopupNode","deactivatePopper","cy","getElementById","nodeId","off","destroy","resizeListener","addEventListener","removeEventListener","graphProps","elements","group","source","undefined","GraphContainer","instance","boxSelectionEnabled","wheelSensitivity","maxZoom","minZoom","overflow","on","addClass","outgoers","incomers","removeClass","content","placement","update","activatePopper","Center","gap","formatFloat","toLocaleString","maximumFractionDigits","ReportTab","ReportContainer","SDivider","SmallerTitle","abs","paddingBottom","Count","ListWithLine","ItemLabel","justifyContent","tabSx","minWidth","PlannerResults","sx","paddingLeft","Factory","drawerOpen","setDrawerOpen","ProductionPlanner","PaypalButton","method","title","ExternalLink","ErrorBoundary","hasError","React","Component","Main","header","SHeader","MainContainer","Footer","FooterContent","Header","GlobalStylesheet","createGlobalStyle","bgImage","btoa","App","MantineProvider","ThemeTransfer","mergedTheme","ReactDOM","render"],"mappings":"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","file":"static/js/main.e8be1603.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/satisfactory_logo_full_color_small.da5e9783.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Anchor } from '@mantine/core';\r\n\r\ninterface Props {\r\n  href: string;\r\n  icon: React.ReactNode;\r\n}\r\n\r\nconst SocialIcon = (props: Props) => {\r\n  const { href, icon } = props;\r\n  return (\r\n    <SAnchor href={href} target='_blank' rel='noopener noreferrer'>\r\n      {icon || null}\r\n    </SAnchor>\r\n  );\r\n};\r\n\r\nexport default SocialIcon;\r\n\r\nconst SAnchor = styled(Anchor)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #f0f0f0;\r\n\r\n  &:hover {\r\n    color: #ddd;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Title, Container, Group } from '@mantine/core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub, faTwitter, faDiscord } from '@fortawesome/free-brands-svg-icons';\r\nimport logo from '../../../assets/satisfactory_logo_full_color_small.png';\r\nimport SocialIcon from '../../../components/SocialIcon';\r\n\r\nconst SiteHeader = () => {\r\n  return (\r\n    <HeaderContainer fluid>\r\n      <img src={logo} height={42} alt='Satisfactory logo' />\r\n      <MainTitle>[Yet Another Factory Planner]</MainTitle>\r\n      <BetaTag>(BETA)</BetaTag>\r\n      <SocialLinks>\r\n        <SocialIcon href='https://github.com/lydianlights/yet-another-factory-planner' icon={<FontAwesomeIcon icon={faGithub} fontSize={32} />} />\r\n        <SocialIcon href='https://discord.gg/p7e9ZzRHCm' icon={<FontAwesomeIcon icon={faDiscord} fontSize={32} />} />\r\n        <SocialIcon href='https://twitter.com/LydianLights' icon={<FontAwesomeIcon icon={faTwitter} fontSize={32} />} />\r\n      </SocialLinks>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default SiteHeader;\r\n\r\nconst HeaderContainer = styled(Container)`\r\n  display: flex;\r\n  margin-left: ${({ theme }) => theme.other.pageLeftMargin};\r\n  padding: 0px;\r\n`;\r\n\r\nconst MainTitle = styled(Title)`\r\n  position: relative;\r\n  top: 1px;\r\n  font-size: 32px;\r\n  color: #fff;\r\n  margin-left: 25px;\r\n  white-space: nowrap;\r\n  font-family: 'Indie Flower', sans-serif;\r\n`;\r\n\r\nconst BetaTag = styled.div`\r\n  position: relative;\r\n  left: 7px;\r\n  top: 3px;\r\n  font-size: 24px;\r\n  color: #fff;\r\n  font-family: 'Fjalla One', sans-serif;\r\n  transform: rotate(20deg);\r\n`;\r\n\r\nconst SocialLinks = styled(Group)`\r\n  display: flex;\r\n  margin-left: auto;\r\n  margin-right: 30px;\r\n`;\r\n","import buildingsRaw from './json/buildings.json';\r\nimport recipesRaw from './json/recipes.json';\r\nimport resourcesRaw from './json/resources.json';\r\nimport itemsRaw from './json/items.json';\r\nimport handGatheredItemsRaw from './json/handGatheredItems.json';\r\n\r\n\r\nexport type ItemRate = {\r\n  itemClass: string,\r\n  perMinute: number,\r\n};\r\n\r\nexport type ItemQuantity = {\r\n  itemClass: string,\r\n  quantity: number,\r\n};\r\n\r\nexport type BuildingsInfo = {\r\n  slug: string,\r\n  name: string,\r\n  power: number,\r\n  area: number,\r\n  buildCost: ItemQuantity[],\r\n  isFicsmas: boolean,\r\n};\r\n\r\nexport type RecipeInfo = {\r\n  slug: string,\r\n  name: string,\r\n  isAlternate: boolean,\r\n  ingredients: ItemRate[],\r\n  products: ItemRate[],\r\n  producedIn: string,\r\n  isFicsmas: boolean,\r\n};\r\n\r\nexport type ResourceInfo = {\r\n  itemClass: string,\r\n  maxExtraction: number | null,\r\n  relativeValue: number,\r\n};\r\n\r\nexport type ItemInfo = {\r\n  slug: string,\r\n  name: string,\r\n  sinkPoints: number,\r\n  usedInRecipes: string[],\r\n  producedFromRecipes: string[],\r\n  isFicsmas: boolean,\r\n};\r\n\r\nexport type BuildingMap = { [key in keyof typeof buildingsRaw]: BuildingsInfo } & { [key: string]: BuildingsInfo };\r\nexport type RecipeMap = { [key in keyof typeof recipesRaw]: RecipeInfo } & { [key: string]: RecipeInfo };\r\nexport type ResourceMap = { [key in keyof typeof resourcesRaw]: ResourceInfo } & { [key: string]: ResourceInfo };\r\nexport type ItemMap = { [key in keyof typeof itemsRaw]: ItemInfo } & { [key: string]: ItemInfo };\r\nexport type HandGatheredItemMap = { [key in keyof typeof handGatheredItemsRaw]: string } & { [key: string]: string };\r\n\r\nexport const buildings = (buildingsRaw as BuildingMap);\r\nexport const recipes = (recipesRaw as RecipeMap);\r\nexport const resources = (resourcesRaw as ResourceMap);\r\nexport const items = (itemsRaw as ItemMap);\r\nexport const handGatheredItems = (handGatheredItemsRaw as HandGatheredItemMap);\r\n","import loadGLPK, { GLPK, LP, Var } from 'glpk.js';\r\nimport { nanoid } from 'nanoid';\r\nimport { FactoryOptions, RecipeMap } from '../../contexts/production/reducer';\r\nimport { buildings, items, recipes, resources, handGatheredItems } from '../../data';\r\n\r\nconst EPSILON = 1e-8;\r\nconst MAXIMIZE_TARGET_WEIGHTING = 1e6;\r\nconst RATE_TARGET_KEY = 'RATE_TARGET_PASS';\r\n\r\nexport const NODE_TYPE = {\r\n  FINAL_PRODUCT: 'FINAL_PRODUCT',\r\n  SIDE_PRODUCT: 'SIDE_PRODUCT',\r\n  INPUT_ITEM: 'INPUT_ITEM',\r\n  HAND_GATHERED_RESOURCE: 'HAND_GATHERED_RESOURCE',\r\n  RESOURCE: 'RESOURCE',\r\n  RECIPE: 'RECIPE',\r\n};\r\n\r\nexport const POINTS_ITEM_KEY = 'POINTS_ITEM_KEY';\r\n\r\ntype Inputs = {\r\n  [key: string]: {\r\n    amount: number,\r\n    weight: number,\r\n    type: string,\r\n  }\r\n};\r\n\r\ntype RateTargets = {\r\n  [key: string]: {\r\n    value: number,\r\n    recipe: string | null,\r\n    isPoints: boolean,\r\n  }\r\n};\r\n\r\ntype MaximizeTargets = { key: string, priority: number };\r\n\r\ntype GlobalWeights = {\r\n  resources: number,\r\n  power: number,\r\n  complexity: number,\r\n  buildings: number\r\n};\r\n\r\ntype ProductionSolution = { [key: string]: number };\r\ntype ProductionAmount = { recipeKey: string, amount: number };\r\ntype ItemProductionTotals = {\r\n  [key: string]: {\r\n    producedBy: ProductionAmount[],\r\n    usedBy: ProductionAmount[],\r\n  }\r\n};\r\n\r\nexport type SolverResults = {\r\n  productionGraph: ProductionGraph | null,\r\n  report: Report | null,\r\n  timestamp: number,\r\n  computeTime: number,\r\n  error: string,\r\n};\r\n\r\nexport type Report = {\r\n  pointsProduced: number,\r\n  powerUsageEstimate: {\r\n    production: number,\r\n    extraction: number,\r\n    generators: number,\r\n    total: number,\r\n  },\r\n  resourceEfficiencyScore: number,\r\n  totalBuildArea: number,\r\n  estimatedFoundations: number,\r\n  buildingsUsed: {\r\n    [key: string]: {\r\n      count: number,\r\n      materialCost: {\r\n        [key: string]: number,\r\n      }\r\n    },\r\n  },\r\n  totalMaterialCost: {\r\n    [key: string]: number,\r\n  },\r\n}\r\n\r\nexport type ProductionGraph = {\r\n  nodes: { [key: string]: GraphNode },\r\n  edges: GraphEdge[],\r\n};\r\n\r\nexport type GraphNode = {\r\n  id: string,\r\n  key: string,\r\n  type: string,\r\n  multiplier: number,\r\n};\r\n\r\nexport type GraphEdge = {\r\n  key: string,\r\n  from: string,\r\n  to: string,\r\n  productionRate: number,\r\n};\r\n\r\nexport class ProductionSolver {\r\n  private globalWeights: GlobalWeights;\r\n  private inputs: Inputs;\r\n  private rateTargets: RateTargets;\r\n  private maximizeTargets: MaximizeTargets[];\r\n  private hasPointsTarget: boolean;\r\n  private allowedRecipes: RecipeMap;\r\n\r\n  public constructor(options: FactoryOptions) {\r\n    this.allowedRecipes = options.allowedRecipes;\r\n    \r\n    this.globalWeights = {\r\n      resources: Number(options.weightingOptions.resources),\r\n      power: Number(options.weightingOptions.power),\r\n      complexity: Number(options.weightingOptions.complexity),\r\n      buildings: Number(options.weightingOptions.buildings),\r\n    };\r\n\r\n    this.validateNumber(this.globalWeights.resources);\r\n    this.validateNumber(this.globalWeights.power);\r\n    this.validateNumber(this.globalWeights.complexity);\r\n    this.validateNumber(this.globalWeights.buildings);\r\n\r\n    const maxGlobalWeight = Math.max(\r\n      this.globalWeights.resources,\r\n      this.globalWeights.power,\r\n      this.globalWeights.complexity,\r\n      this.globalWeights.buildings\r\n    );\r\n\r\n    this.globalWeights.resources /= maxGlobalWeight;\r\n    this.globalWeights.resources += EPSILON; // Always have a tiny amount of resource optimization\r\n    this.globalWeights.power /= maxGlobalWeight;\r\n    this.globalWeights.complexity /= (maxGlobalWeight / 10);\r\n    this.globalWeights.buildings /= maxGlobalWeight;\r\n\r\n    this.inputs = {};\r\n\r\n    options.inputResources.forEach((item) => {\r\n      const resourceData = resources[item.itemKey];\r\n      if (!resourceData) return;\r\n      const amount = item.unlimited ? Infinity : Number(item.value);\r\n      this.validateNumber(amount);\r\n      if (!amount) return;\r\n      const weight = Number(item.weight);\r\n      this.validateNumber(weight);\r\n      this.inputs[item.itemKey] = {\r\n        amount,\r\n        weight,\r\n        type: NODE_TYPE.RESOURCE,\r\n      }\r\n    });\r\n\r\n    const maxResourceWeight = Math.max(...Object.values(this.inputs).map((i) => i.weight));\r\n    Object.values(this.inputs).forEach((i) => { i.weight /= maxResourceWeight });\r\n\r\n    options.inputItems.forEach((item) => {\r\n      if (!item.itemKey) return;\r\n      const amount = item.unlimited ? Infinity : Number(item.value);\r\n      this.validateNumber(amount);\r\n      if (!amount) return;\r\n      if (!this.inputs[item.itemKey]) {\r\n        this.inputs[item.itemKey] = {\r\n          amount,\r\n          weight: 0,\r\n          type: NODE_TYPE.INPUT_ITEM,\r\n        }\r\n      } else {\r\n        this.inputs[item.itemKey].amount += amount;\r\n      }\r\n    });\r\n\r\n    if (options.allowHandGatheredItems) {\r\n      Object.keys(handGatheredItems).forEach((item) => {\r\n        this.inputs[item] = {\r\n          amount: Infinity,\r\n          weight: 1000,\r\n          type: NODE_TYPE.HAND_GATHERED_RESOURCE,\r\n        };\r\n      });\r\n    }\r\n\r\n    this.inputs['Desc_Gift_C'] = {\r\n      amount: Infinity,\r\n      weight: 1000,\r\n      type: NODE_TYPE.HAND_GATHERED_RESOURCE,\r\n    };\r\n\r\n    this.rateTargets = {};\r\n    this.maximizeTargets = [];\r\n    this.hasPointsTarget = false;\r\n\r\n    const perMinTargets: RateTargets = {};\r\n    const recipeTargets: RateTargets = {};\r\n    options.productionItems.forEach((item) => {\r\n      if (!item.itemKey) return;\r\n      const amount = Number(item.value);\r\n      this.validateNumber(amount);\r\n      if (!amount) return;\r\n      if (this.inputs[item.itemKey]) throw new Error('CANNOT HAVE ITEM AS BOTH INPUT AND OUTPUT');\r\n      const isPoints = item.itemKey === POINTS_ITEM_KEY;\r\n      if (isPoints) {\r\n        this.hasPointsTarget = true;\r\n      }\r\n      switch (item.mode) {\r\n        case 'per-minute':\r\n          if (perMinTargets[item.itemKey]) {\r\n            perMinTargets[item.itemKey].value += amount;\r\n          } else {\r\n            perMinTargets[item.itemKey] = {\r\n              value: amount,\r\n              recipe: null,\r\n              isPoints,\r\n            };\r\n          }\r\n          break;\r\n        case 'maximize':\r\n          const existingTarget = this.maximizeTargets.find((t) => t.key === item.itemKey);\r\n          if (existingTarget) {\r\n            if (existingTarget.priority < amount) {\r\n              existingTarget.priority = amount;\r\n            }\r\n          } else {\r\n            this.maximizeTargets.push({\r\n              key: item.itemKey,\r\n              priority: amount,\r\n            });\r\n          }\r\n          break;\r\n        default:\r\n          const recipeKey = item.mode;\r\n          const recipeInfo = recipes[recipeKey];\r\n          if (recipeInfo) {\r\n            if (!this.allowedRecipes[recipeKey]) {\r\n              throw new Error('CANNOT TARGET A DISABLED RECIPE');\r\n            }\r\n            const target = recipeInfo.products.find((p) => p.itemClass === item.itemKey)!;\r\n            if (perMinTargets[item.itemKey]) {\r\n              perMinTargets[item.itemKey].value += target.perMinute * amount;\r\n            } else {\r\n              perMinTargets[item.itemKey] = {\r\n                value: target.perMinute * amount,\r\n                recipe: null,\r\n                isPoints: false,\r\n              };\r\n            }\r\n            if (recipeTargets[recipeKey]) {\r\n              recipeTargets[recipeKey].value += amount;\r\n            } else {\r\n              recipeTargets[recipeKey] = {\r\n                value: amount,\r\n                recipe: recipeKey,\r\n                isPoints: false,\r\n              };\r\n            }\r\n          } else {\r\n            throw new Error('INVALID OUTPUT MODE SELECTION');\r\n          }\r\n      }\r\n    });\r\n\r\n    this.maximizeTargets\r\n      .sort((a, b) => {\r\n        if (a.priority > b.priority) return -1;\r\n        if (a.priority < b.priority) return 1;\r\n        throw new Error('TWO TARGET ITEMS HAVE THE SAME MAXIMIZATION PRIORITY');\r\n      });\r\n\r\n    this.rateTargets = {\r\n      ...perMinTargets,\r\n      ...recipeTargets,\r\n    };\r\n    if (Object.keys(this.rateTargets).length === 0 && this.maximizeTargets.length === 0) {\r\n      throw new Error('NO OUTPUTS SET');\r\n    }\r\n  }\r\n\r\n  private validateNumber(num: Number) {\r\n    if (Number.isNaN(num)) {\r\n      throw new Error('INVALID VALUE: NOT A NUMBER');\r\n    } else if (num < 0) {\r\n      throw new Error('INVALID VALUE: NEGATIVE NUMBER');\r\n    }\r\n  }\r\n\r\n  public async exec(): Promise<SolverResults> {\r\n    const timestamp = performance.now();\r\n    try {\r\n      const glpk = await loadGLPK();\r\n      const productionSolution = await this.productionSolverPass(RATE_TARGET_KEY, this.inputs, glpk);\r\n      let productionGraph = this.generateProductionGraph(productionSolution);\r\n\r\n      for (const target of this.maximizeTargets) {\r\n        const remainingInputs: Inputs = {};\r\n        for (const [inputKey, input] of Object.entries(this.inputs)) {\r\n          const inputNode = Object.values(productionGraph.nodes).find((n) => n.key === inputKey);\r\n          let usedAmount = 0;\r\n          if (inputNode) {\r\n            usedAmount = inputNode.multiplier;\r\n          }\r\n          const diff = input.amount - usedAmount;\r\n          if (diff > EPSILON) {\r\n            remainingInputs[inputKey] = {\r\n              ...input,\r\n              amount: diff,\r\n            };\r\n          }\r\n        }\r\n        const solution = await this.productionSolverPass(target.key, remainingInputs, glpk);\r\n        for (const [key, multiplier] of Object.entries(solution)) {\r\n          if (productionSolution[key]) {\r\n            productionSolution[key] += multiplier;\r\n          } else {\r\n            productionSolution[key] = multiplier;\r\n          }\r\n        }\r\n        productionGraph = this.generateProductionGraph(productionSolution);\r\n      }\r\n\r\n      if (Object.keys(productionGraph.nodes).length === 0) {\r\n        throw new Error('SOLUTION IS EMPTY');\r\n      }\r\n      const report = this.generateProductionReport(productionGraph);\r\n\r\n      return {\r\n        productionGraph,\r\n        report,\r\n        timestamp,\r\n        computeTime: performance.now() - timestamp,\r\n        error: '',\r\n      };\r\n    } catch (e: any) {\r\n      return {\r\n        productionGraph: null,\r\n        report: null,\r\n        timestamp,\r\n        computeTime: performance.now() - timestamp,\r\n        error: e.message,\r\n      };\r\n    }\r\n  }\r\n\r\n  private getItemPoints(itemKey: string) {\r\n    const itemInfo = items[itemKey];\r\n    return itemInfo.isFicsmas ? 0 : itemInfo.sinkPoints;\r\n  }\r\n\r\n  private async productionSolverPass(targetKey: string, remainingInputs: Inputs, glpk: GLPK): Promise<ProductionSolution> {\r\n    const model: LP = {\r\n      name: 'production',\r\n      objective: {\r\n        name: 'score',\r\n        direction: glpk.GLP_MIN,\r\n        vars: [],\r\n      },\r\n      subjectTo: [],\r\n      // binaries: [],\r\n    };\r\n\r\n    const doPoints = (targetKey === RATE_TARGET_KEY && this.rateTargets[POINTS_ITEM_KEY]) || targetKey === POINTS_ITEM_KEY;\r\n    const pointsVars: Var[] = [];\r\n\r\n    for (const [recipeKey, recipeInfo] of Object.entries(recipes)) {\r\n      if (!this.allowedRecipes[recipeKey]) continue;\r\n      const buildingInfo = buildings[recipeInfo.producedIn];\r\n      const powerScore = buildingInfo.power > 0 ? buildingInfo.power * this.globalWeights.power : 0;\r\n      const complexityScore = recipeInfo.ingredients.length * this.globalWeights.complexity;\r\n      const buildingsScore = this.globalWeights.buildings;\r\n      let resourceScore = 0;\r\n\r\n      for (const ingredient of recipeInfo.ingredients) {\r\n        const inputInfo = this.inputs[ingredient.itemClass];\r\n        if (inputInfo) {\r\n          resourceScore += inputInfo.weight * ingredient.perMinute * this.globalWeights.resources;\r\n        }\r\n      }\r\n\r\n      \r\n      model.objective.vars.push({\r\n        name: recipeKey,\r\n        coef: powerScore + resourceScore + buildingsScore + complexityScore,\r\n      });\r\n\r\n\r\n      if (targetKey === RATE_TARGET_KEY) {\r\n        if (this.rateTargets[recipeKey]) {\r\n          model.subjectTo.push({\r\n            name: `${recipeKey} recipe constraint`,\r\n            vars: [{ name: recipeKey, coef: 1 }],\r\n            bnds: { type: glpk.GLP_LO, ub: 0, lb: this.rateTargets[recipeKey].value },\r\n          });\r\n        }\r\n      }\r\n\r\n      if (doPoints) {\r\n        let pointCoef = 0;\r\n        for (const product of recipeInfo.products) {\r\n          if (!this.inputs[product.itemClass] || this.inputs[product.itemClass].type === NODE_TYPE.INPUT_ITEM) {\r\n            pointCoef -= product.perMinute * this.getItemPoints(product.itemClass) / 1000;\r\n          }\r\n        }\r\n        for (const ingredient of recipeInfo.ingredients) {\r\n          if (!this.inputs[ingredient.itemClass] || this.inputs[ingredient.itemClass].type === NODE_TYPE.INPUT_ITEM) {\r\n            pointCoef += ingredient.perMinute * this.getItemPoints(ingredient.itemClass) / 1000;\r\n          }\r\n        }\r\n        pointsVars.push({ name: recipeKey, coef: pointCoef });\r\n      }\r\n    }\r\n\r\n  \r\n    if (doPoints) {\r\n      let intrinsicPoints = 0;\r\n      for (const [itemKey, inputInfo] of Object.entries(remainingInputs)) {\r\n        if (inputInfo.type === NODE_TYPE.INPUT_ITEM) {\r\n          intrinsicPoints += this.getItemPoints(itemKey) * inputInfo.amount;\r\n        }\r\n      }\r\n      if (targetKey === RATE_TARGET_KEY) {\r\n        for (const [itemKey, targetInfo] of Object.entries(this.rateTargets)) {\r\n          if (itemKey !== POINTS_ITEM_KEY) {\r\n            intrinsicPoints -= this.getItemPoints(itemKey) * targetInfo.value;\r\n          }\r\n        }\r\n        model.subjectTo.push({\r\n          name: 'AWESOME Sink Points constraint',\r\n          vars: pointsVars,\r\n          bnds: { type: glpk.GLP_UP, ub: -this.rateTargets[POINTS_ITEM_KEY].value - intrinsicPoints, lb: NaN },\r\n        });\r\n      } else if (targetKey === POINTS_ITEM_KEY) {\r\n        pointsVars.forEach((v) => {\r\n          const existingVar = model.objective.vars.find((ov) => ov.name === v.name);\r\n          if (existingVar) {\r\n            existingVar.coef += v.coef * MAXIMIZE_TARGET_WEIGHTING;\r\n          } else {\r\n            model.objective.vars.push({\r\n              name: v.name,\r\n              coef: v.coef * MAXIMIZE_TARGET_WEIGHTING,\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n\r\n    for (const [itemKey, itemInfo] of Object.entries(items)) {\r\n      const vars: Var[] = [];\r\n\r\n      // const binKey = `${itemKey}_BIN`;\r\n      // model.binaries!.push(binKey);\r\n      // model.objective.vars.push({ name: binKey, coef: 1000 * this.globalWeights.complexity });\r\n\r\n      for (const recipeKey of itemInfo.usedInRecipes) {\r\n        if (!this.allowedRecipes[recipeKey]) continue;\r\n        const recipeInfo = recipes[recipeKey];\r\n        const target = recipeInfo.ingredients.find((i) => i.itemClass === itemKey)!;\r\n        vars.push({ name: recipeKey, coef: target.perMinute });\r\n        \r\n        // model.subjectTo.push({\r\n        //   name: `${binKey} ${recipeKey} constraint`,\r\n        //   vars: [{ name: binKey, coef: MAXIMIZE_TARGET_WEIGHTING }, { name: recipeKey, coef: -1 }],\r\n        //   bnds: { type: glpk.GLP_LO, ub: NaN, lb: 0 },\r\n        // });\r\n      }\r\n\r\n      for (const recipeKey of itemInfo.producedFromRecipes) {\r\n        if (!this.allowedRecipes[recipeKey]) continue;\r\n        const recipeInfo = recipes[recipeKey];\r\n        const target = recipeInfo.products.find((p) => p.itemClass === itemKey)!;\r\n\r\n        const existingVar = vars.find((v) => v.name === recipeKey);\r\n        if (existingVar) {\r\n          existingVar.coef -= target.perMinute;\r\n        } else {\r\n          vars.push({ name: recipeKey, coef: -target.perMinute });\r\n        }\r\n      }\r\n\r\n      if (vars.length === 0) continue;\r\n\r\n      if (remainingInputs[itemKey]) {\r\n        const inputInfo = remainingInputs[itemKey];\r\n        if (inputInfo.amount !== Infinity) {\r\n          model.subjectTo.push({\r\n            name: `${itemKey} resource constraint`,\r\n            vars,\r\n            bnds: { type: glpk.GLP_UP, ub: inputInfo.amount, lb: NaN },\r\n          });\r\n        }\r\n      }\r\n\r\n      else if (targetKey === RATE_TARGET_KEY && this.rateTargets[itemKey]) {\r\n        const outputInfo = this.rateTargets[itemKey];\r\n        model.subjectTo.push({\r\n          name: `${itemKey} final product constraint`,\r\n          vars,\r\n          bnds: { type: glpk.GLP_UP, ub: -outputInfo.value, lb: NaN },\r\n        });\r\n      }\r\n\r\n      else if (targetKey === itemKey) {\r\n        model.subjectTo.push({\r\n          name: `${itemKey} final product constraint`,\r\n          vars,\r\n          bnds: { type: glpk.GLP_UP, ub: 0, lb: NaN },\r\n        });\r\n\r\n        vars.forEach((v) => {\r\n          const existingVar = model.objective.vars.find((ov) => ov.name === v.name);\r\n          if (existingVar) {\r\n            existingVar.coef += v.coef * MAXIMIZE_TARGET_WEIGHTING;\r\n          } else {\r\n            model.objective.vars.push({\r\n              name: v.name,\r\n              coef: v.coef * MAXIMIZE_TARGET_WEIGHTING,\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      else {\r\n        model.subjectTo.push({\r\n          name: `${itemKey} intermediates constraint`,\r\n          vars,\r\n          bnds: { type: glpk.GLP_UP, ub: 0, lb: NaN },\r\n        });\r\n      }\r\n    }\r\n\r\n    const solution = await glpk.solve(model, { msglev: glpk.GLP_MSG_OFF, tmlim: 1.0 });\r\n    if (solution.result.status !== glpk.GLP_OPT && solution.result.status !== glpk.GLP_FEAS) {\r\n      if (targetKey === RATE_TARGET_KEY) {\r\n        throw new Error(\"NO POSSIBLE SOLUTION\");\r\n      } else {\r\n        throw new Error(\"SOLUTION IS UNBOUNDED\");\r\n      }\r\n    }\r\n\r\n    const result: ProductionSolution = {};\r\n    Object.entries(solution.result.vars).forEach(([key, val]) => {\r\n      if (val > EPSILON) {\r\n        if (recipes[key]) {\r\n          result[key] = val;\r\n        }\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  private generateProductionGraph(productionSolution: ProductionSolution): ProductionGraph {\r\n    const itemProductionTotals: ItemProductionTotals = {};\r\n    const graph: ProductionGraph = {\r\n      nodes: {},\r\n      edges: [],\r\n    };\r\n\r\n    for (const [recipeKey, multiplier] of Object.entries(productionSolution)) {\r\n      const recipeInfo = recipes[recipeKey];\r\n\r\n      for (const product of recipeInfo.products) {\r\n        const amount = multiplier * product.perMinute;\r\n        if (!itemProductionTotals[product.itemClass]) {\r\n          itemProductionTotals[product.itemClass] = {\r\n            producedBy: [],\r\n            usedBy: [],\r\n          };\r\n        }\r\n        itemProductionTotals[product.itemClass].producedBy.push({ recipeKey, amount });\r\n      }\r\n\r\n      for (const ingredient of recipeInfo.ingredients) {\r\n        const amount = multiplier * ingredient.perMinute;\r\n        if (!itemProductionTotals[ingredient.itemClass]) {\r\n          itemProductionTotals[ingredient.itemClass] = {\r\n            producedBy: [],\r\n            usedBy: [],\r\n          };\r\n        }\r\n        itemProductionTotals[ingredient.itemClass].usedBy.push({ recipeKey, amount });\r\n      }\r\n\r\n      graph.nodes[recipeKey] = {\r\n        id: nanoid(),\r\n        key: recipeKey,\r\n        type: NODE_TYPE.RECIPE,\r\n        multiplier,\r\n      };\r\n    }\r\n\r\n    for (const [itemKey, productionTotals] of Object.entries(itemProductionTotals)) {\r\n      const { producedBy, usedBy } = productionTotals;\r\n      let i = 0, j = 0;\r\n      nextDemand:\r\n      while (i < usedBy.length) {\r\n        const usageInfo = usedBy[i];\r\n        const usageNode = graph.nodes[usageInfo.recipeKey];\r\n        \r\n        while (j < producedBy.length) {\r\n          const productionInfo = producedBy[j];\r\n          const productionNode = graph.nodes[productionInfo.recipeKey];\r\n\r\n          const outputRecipe = this.rateTargets[itemKey]?.recipe;\r\n          if (outputRecipe && outputRecipe === productionInfo.recipeKey) {\r\n            const outputInfo = this.rateTargets[itemKey];\r\n            const recipeInfo = recipes[outputRecipe];\r\n            const target = recipeInfo.products.find((p) => p.itemClass === itemKey)!;\r\n            const recipeAmount = outputInfo.value * target.perMinute;\r\n            productionInfo.amount -= recipeAmount;\r\n\r\n            let itemNode = graph.nodes[itemKey];\r\n            if (!itemNode) {\r\n              itemNode = {\r\n                id: nanoid(),\r\n                key: itemKey,\r\n                type: NODE_TYPE.FINAL_PRODUCT,\r\n                multiplier: recipeAmount,\r\n              }\r\n              graph.nodes[itemKey] = itemNode;\r\n            } else {\r\n              graph.nodes[itemKey].multiplier += recipeAmount;\r\n            }\r\n            graph.edges.push({\r\n              key: itemKey,\r\n              from: productionNode.id,\r\n              to: itemNode.id,\r\n              productionRate: recipeAmount,\r\n            });\r\n          } \r\n\r\n          if (productionInfo.amount < EPSILON) {\r\n            j++\r\n            continue;\r\n          }\r\n\r\n          if (usageInfo.amount <= productionInfo.amount) {\r\n            graph.edges.push({\r\n              key: itemKey,\r\n              from: productionNode.id,\r\n              to: usageNode.id,\r\n              productionRate: usageInfo.amount,\r\n            });\r\n            productionInfo.amount -= usageInfo.amount;\r\n            usageInfo.amount = 0;\r\n          } else {\r\n            graph.edges.push({\r\n              key: itemKey,\r\n              from: productionNode.id,\r\n              to: usageNode.id,\r\n              productionRate: productionInfo.amount,\r\n            });\r\n            usageInfo.amount -= productionInfo.amount;\r\n            productionInfo.amount = 0;\r\n          }\r\n          \r\n          if (usageInfo.amount < EPSILON) {\r\n            i++;\r\n            continue nextDemand;\r\n          }\r\n          j++;\r\n        }\r\n        break;\r\n      }\r\n\r\n      while (i < usedBy.length) {\r\n        const usageInfo = usedBy[i];\r\n        const usageNode = graph.nodes[usageInfo.recipeKey];\r\n        if (usageInfo.amount > EPSILON && this.inputs[itemKey]) {\r\n          let itemNode = graph.nodes[itemKey];\r\n          if (!itemNode) {\r\n            const inputInfo = this.inputs[itemKey];\r\n            itemNode = {\r\n              id: nanoid(),\r\n              key: itemKey,\r\n              type: inputInfo.type,\r\n              multiplier: usageInfo.amount,\r\n            };\r\n            graph.nodes[itemKey] = itemNode;\r\n          } else {\r\n            itemNode.multiplier += usageInfo.amount;\r\n          }\r\n          graph.edges.push({\r\n            key: itemKey,\r\n            from: itemNode.id,\r\n            to: usageNode.id,\r\n            productionRate: usageInfo.amount,\r\n          });\r\n          usageInfo.amount = 0;\r\n        }\r\n        i++;\r\n      }\r\n\r\n      while (j < producedBy.length) {\r\n        const productionInfo = producedBy[j];\r\n        const productionNode = graph.nodes[productionInfo.recipeKey];\r\n        if (productionInfo.amount > EPSILON) {\r\n          let itemNode = graph.nodes[itemKey];\r\n          if (!itemNode) {\r\n            let nodeType = NODE_TYPE.SIDE_PRODUCT;\r\n            if (this.rateTargets[itemKey] || this.maximizeTargets.find((t) => t.key === itemKey)) {\r\n              nodeType = NODE_TYPE.FINAL_PRODUCT;\r\n            } else if (this.hasPointsTarget && this.getItemPoints(itemKey) > 0) {\r\n              nodeType = NODE_TYPE.FINAL_PRODUCT;\r\n            }\r\n            itemNode = {\r\n              id: nanoid(),\r\n              key: itemKey,\r\n              type: nodeType,\r\n              multiplier: productionInfo.amount\r\n            };\r\n            graph.nodes[itemKey] = itemNode;\r\n          } else {\r\n            itemNode.multiplier += productionInfo.amount;\r\n          }\r\n          graph.edges.push({\r\n            key: itemKey,\r\n            from: productionNode.id,\r\n            to: itemNode.id,\r\n            productionRate: productionInfo.amount,\r\n          });\r\n          productionInfo.amount = 0;\r\n        }\r\n        j++;\r\n      }\r\n    }\r\n\r\n    return graph;\r\n  }\r\n\r\n  private generateProductionReport(productionGraph: ProductionGraph): Report {\r\n    const report: Report = {\r\n      pointsProduced: 0,\r\n      powerUsageEstimate: {\r\n        production: 0,\r\n        extraction: 0,\r\n        generators: 0,\r\n        total: 0,\r\n      },\r\n      resourceEfficiencyScore: 0,\r\n      totalBuildArea: 0,\r\n      estimatedFoundations: 0,\r\n      buildingsUsed: {},\r\n      totalMaterialCost: {},\r\n    };\r\n\r\n    for (const [key, node] of Object.entries(productionGraph.nodes)) {\r\n      if (node.type === NODE_TYPE.RECIPE) {\r\n        const recipeInfo = recipes[key];\r\n        const buildingKey = recipeInfo.producedIn;\r\n        const buildingInfo = buildings[buildingKey];\r\n        const power = node.multiplier * buildingInfo.power;\r\n        if (power < 0) {\r\n          report.powerUsageEstimate.generators += -power;\r\n        } else {\r\n          report.powerUsageEstimate.production += power;\r\n        }\r\n        report.powerUsageEstimate.total += power;\r\n        report.totalBuildArea += Math.ceil(node.multiplier) * buildingInfo.area;\r\n        if (!report.buildingsUsed[buildingKey]) {\r\n          report.buildingsUsed[buildingKey] = {\r\n            count: Math.ceil(node.multiplier),\r\n            materialCost: {},\r\n          };\r\n        } else {\r\n          report.buildingsUsed[buildingKey].count += Math.ceil(node.multiplier);\r\n        }\r\n\r\n        for (const ingredient of buildingInfo.buildCost) {\r\n          const amount = Math.ceil(node.multiplier) * ingredient.quantity;\r\n          if (!report.buildingsUsed[buildingKey].materialCost[ingredient.itemClass]) {\r\n            report.buildingsUsed[buildingKey].materialCost[ingredient.itemClass] = amount;\r\n          } else {\r\n            report.buildingsUsed[buildingKey].materialCost[ingredient.itemClass] += amount;\r\n          }\r\n          if (!report.totalMaterialCost[ingredient.itemClass]) {\r\n            report.totalMaterialCost[ingredient.itemClass] = amount;\r\n          } else {\r\n            report.totalMaterialCost[ingredient.itemClass] += amount;\r\n          }\r\n        }\r\n        continue;\r\n      }\r\n\r\n      if (node.type === NODE_TYPE.FINAL_PRODUCT) {\r\n        report.pointsProduced += node.multiplier * this.getItemPoints(key);\r\n      } else if (node.type === NODE_TYPE.RESOURCE) {\r\n        report.resourceEfficiencyScore += node.multiplier * this.inputs[key].weight;\r\n        let power = 0;\r\n        if (key === 'Desc_Water_C') {\r\n          power = node.multiplier / 120 * buildings['Desc_WaterPump_C'].power;\r\n\r\n          const numExtractors = Math.ceil(node.multiplier / 120);\r\n          report.buildingsUsed['Desc_WaterPump_C'] = {\r\n            count: numExtractors,\r\n            materialCost: {},\r\n          };\r\n          for (const ingredient of buildings['Desc_WaterPump_C'].buildCost) {\r\n            const amount = numExtractors * ingredient.quantity;\r\n            report.buildingsUsed['Desc_WaterPump_C'].materialCost[ingredient.itemClass] = amount;\r\n            if (!report.totalMaterialCost[ingredient.itemClass]) {\r\n              report.totalMaterialCost[ingredient.itemClass] = amount;\r\n            } else {\r\n              report.totalMaterialCost[ingredient.itemClass] += amount;\r\n            }\r\n          }\r\n\r\n        } else if (key === 'Desc_LiquidOil_C') {\r\n          power = node.multiplier / 120 * buildings['Desc_OilPump_C'].power;\r\n        } else if (key === 'Desc_NitrogenGas_C') {\r\n          // SKIP\r\n        } else {\r\n          power = node.multiplier / 240 * buildings['Desc_MinerMk3_C'].power;\r\n        }\r\n        report.powerUsageEstimate.extraction += power;\r\n        report.powerUsageEstimate.total += power;\r\n      }\r\n    }\r\n\r\n    report.estimatedFoundations = Math.ceil(2 * (report.totalBuildArea / 64));\r\n\r\n    return report;\r\n  }\r\n}\r\n","import { nanoid } from 'nanoid';\r\nimport { recipes, items } from '../../../data'\r\nimport { POINTS_ITEM_KEY } from '../../../utilities/production-solver';\r\nimport { FactoryOptions, getInitialState } from '../reducer';\r\n\r\nconst FACTORY_SETTINGS_VERSION = 'v1_U5';\r\n\r\nconst SEP0 = ',';\r\nconst SEP1 = '|';\r\nconst SEP2 = ':';\r\n\r\nfunction getItemBySlug(slug: string) {\r\n  if (slug === 'points') {\r\n    return POINTS_ITEM_KEY;\r\n  }\r\n  const itemEntry = Object.entries(items).find(([key, item]) => item.slug === slug);\r\n  if (itemEntry) {\r\n    return itemEntry[0];\r\n  }\r\n  throw new Error('INVALID ITEM SLUG');\r\n}\r\n\r\nfunction getModeBySlug(slug: string) {\r\n  if (slug === 'per_minute') return 'per-minute';\r\n  if (slug === 'maximize') return 'maximize';\r\n  const recipeEntry = Object.entries(recipes).find(([key, recipe]) => recipe.slug === slug);\r\n  if (recipeEntry) {\r\n    return recipeEntry[0];\r\n  }\r\n  throw new Error('INVALID RECIPE SLUG');\r\n}\r\n\r\nexport function decodeState_v1_U5(stateStr: string): FactoryOptions {\r\n  const newState: FactoryOptions = getInitialState();\r\n\r\n  const fields = stateStr.split(SEP0);\r\n  if (fields[0] !== FACTORY_SETTINGS_VERSION) throw new Error('VERSION MISMATCH');\r\n  if (fields.length !== 7) throw new Error('INVALID DATA [BAD FIELDS]');\r\n\r\n  const allowedRecipes = Object.keys(newState.allowedRecipes)\r\n    .filter((recipeKey) => {\r\n      const recipeInfo = recipes[recipeKey];\r\n      if (recipeInfo.isFicsmas) {\r\n        newState.allowedRecipes[recipeKey] = false;\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n  const allowedRecipesBits = BigInt(`0x${fields[1]}`)\r\n    .toString(2)\r\n    .padStart(allowedRecipes.length, '0')\r\n    .split('')\r\n    .map((b) => !!parseInt(b));\r\n  allowedRecipes\r\n    .sort((a, b) => {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    })\r\n    .forEach((key, i) => {\r\n      newState.allowedRecipes[key] = !!allowedRecipesBits[i];\r\n    });\r\n\r\n  const productionItemsStrings = fields[2].split(SEP1);\r\n  if (productionItemsStrings[0]) {\r\n    productionItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 3) throw new Error('INVALID DATA [productionItems]');\r\n      newState.productionItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        mode: getModeBySlug(values[1]),\r\n        value: values[2],\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputItemsStrings = fields[3].split(SEP1);\r\n  if (inputItemsStrings[0]) {\r\n    inputItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 4) throw new Error('INVALID DATA [inputItems]');\r\n      newState.inputItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        value: values[1],\r\n        weight: values[2],\r\n        unlimited: !!parseInt(values[3]),\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputResourcesStrings = fields[4].split(SEP1);\r\n  newState.inputResources.forEach((resourceOptions, i) => {\r\n    const values = inputResourcesStrings[i].split(SEP2);\r\n    if (values.length !== 3) throw new Error('INVALID DATA [inputResources]');\r\n    resourceOptions.value = values[0];\r\n    resourceOptions.weight = values[1];\r\n    resourceOptions.unlimited = !!parseInt(values[2]);\r\n  });\r\n\r\n  newState.allowHandGatheredItems = !!parseInt(fields[5]);\r\n\r\n  const weightingOptionsStrings = fields[6].split(SEP2);\r\n  if (weightingOptionsStrings.length !== 3) throw new Error('INVALID DATA [weightingOptions]');\r\n  newState.weightingOptions.resources = weightingOptionsStrings[0];\r\n  newState.weightingOptions.power = weightingOptionsStrings[1];\r\n  newState.weightingOptions.complexity = weightingOptionsStrings[2];\r\n  newState.weightingOptions.buildings = '0';\r\n\r\n  return newState;\r\n}\r\n","import { nanoid } from 'nanoid';\r\nimport { recipes, items } from '../../../data'\r\nimport { POINTS_ITEM_KEY } from '../../../utilities/production-solver';\r\nimport { FactoryOptions, getInitialState } from '../reducer';\r\n\r\nconst FACTORY_SETTINGS_VERSION = 'v2_U5';\r\n\r\nconst SEP0 = ',';\r\nconst SEP1 = '|';\r\nconst SEP2 = ':';\r\n\r\nfunction getItemBySlug(slug: string) {\r\n  if (slug === 'points') {\r\n    return POINTS_ITEM_KEY;\r\n  }\r\n  const itemEntry = Object.entries(items).find(([key, item]) => item.slug === slug);\r\n  if (itemEntry) {\r\n    return itemEntry[0];\r\n  }\r\n  throw new Error('INVALID ITEM SLUG');\r\n}\r\n\r\nfunction getModeBySlug(slug: string) {\r\n  if (slug === 'per_minute') return 'per-minute';\r\n  if (slug === 'maximize') return 'maximize';\r\n  const recipeEntry = Object.entries(recipes).find(([key, recipe]) => recipe.slug === slug);\r\n  if (recipeEntry) {\r\n    return recipeEntry[0];\r\n  }\r\n  throw new Error('INVALID RECIPE SLUG');\r\n}\r\n\r\nexport function decodeState_v2_U5(stateStr: string): FactoryOptions {\r\n  const newState: FactoryOptions = getInitialState();\r\n\r\n  const fields = stateStr.split(SEP0);\r\n  if (fields[0] !== FACTORY_SETTINGS_VERSION) throw new Error('VERSION MISMATCH');\r\n  if (fields.length !== 7) throw new Error('INVALID DATA [BAD FIELDS]');\r\n\r\n  const allowedRecipesBits = BigInt(`0x${fields[1]}`)\r\n    .toString(2)\r\n    .padStart(Object.keys(newState.allowedRecipes).length, '0')\r\n    .split('')\r\n    .map((b) => !!parseInt(b));\r\n  Object.keys(newState.allowedRecipes)\r\n    .sort((a, b) => {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    })\r\n    .forEach((key, i) => {\r\n      newState.allowedRecipes[key] = !!allowedRecipesBits[i];\r\n    });\r\n\r\n  const productionItemsStrings = fields[2].split(SEP1);\r\n  if (productionItemsStrings[0]) {\r\n    productionItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 3) throw new Error('INVALID DATA [productionItems]');\r\n      newState.productionItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        mode: getModeBySlug(values[1]),\r\n        value: values[2],\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputItemsStrings = fields[3].split(SEP1);\r\n  if (inputItemsStrings[0]) {\r\n    inputItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 4) throw new Error('INVALID DATA [inputItems]');\r\n      newState.inputItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        value: values[1],\r\n        weight: values[2],\r\n        unlimited: !!parseInt(values[3]),\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputResourcesStrings = fields[4].split(SEP1);\r\n  newState.inputResources.forEach((resourceOptions, i) => {\r\n    const values = inputResourcesStrings[i].split(SEP2);\r\n    if (values.length !== 3) throw new Error('INVALID DATA [inputResources]');\r\n    resourceOptions.value = values[0];\r\n    resourceOptions.weight = values[1];\r\n    resourceOptions.unlimited = !!parseInt(values[2]);\r\n  });\r\n\r\n  newState.allowHandGatheredItems = !!parseInt(fields[5]);\r\n\r\n  const weightingOptionsStrings = fields[6].split(SEP2);\r\n  if (weightingOptionsStrings.length !== 3) throw new Error('INVALID DATA [weightingOptions]');\r\n  newState.weightingOptions.resources = weightingOptionsStrings[0];\r\n  newState.weightingOptions.power = weightingOptionsStrings[1];\r\n  newState.weightingOptions.complexity = weightingOptionsStrings[2];\r\n  newState.weightingOptions.buildings = '0';\r\n\r\n  return newState;\r\n}\r\n","import { nanoid } from 'nanoid';\r\nimport { recipes, items } from '../../../data'\r\nimport { POINTS_ITEM_KEY } from '../../../utilities/production-solver';\r\nimport { FactoryOptions, getInitialState } from '../reducer';\r\n\r\nconst FACTORY_SETTINGS_VERSION = 'v3_U5';\r\n\r\nconst SEP0 = ',';\r\nconst SEP1 = '|';\r\nconst SEP2 = ':';\r\n\r\nfunction getItemBySlug(slug: string) {\r\n  if (slug === 'points') {\r\n    return POINTS_ITEM_KEY;\r\n  }\r\n  const itemEntry = Object.entries(items).find(([key, item]) => item.slug === slug);\r\n  if (itemEntry) {\r\n    return itemEntry[0];\r\n  }\r\n  throw new Error('INVALID ITEM SLUG');\r\n}\r\n\r\nfunction getModeBySlug(slug: string) {\r\n  if (slug === 'per_minute') return 'per-minute';\r\n  if (slug === 'maximize') return 'maximize';\r\n  const recipeEntry = Object.entries(recipes).find(([key, recipe]) => recipe.slug === slug);\r\n  if (recipeEntry) {\r\n    return recipeEntry[0];\r\n  }\r\n  throw new Error('INVALID RECIPE SLUG');\r\n}\r\n\r\nexport function decodeState_v3_U5(stateStr: string): FactoryOptions {\r\n  const newState: FactoryOptions = getInitialState();\r\n\r\n  const fields = stateStr.split(SEP0);\r\n  if (fields[0] !== FACTORY_SETTINGS_VERSION) throw new Error('VERSION MISMATCH');\r\n  if (fields.length !== 7) throw new Error('INVALID DATA [BAD FIELDS]');\r\n\r\n  const allowedRecipesBits = BigInt(`0x${fields[1]}`)\r\n    .toString(2)\r\n    .padStart(Object.keys(newState.allowedRecipes).length, '0')\r\n    .split('')\r\n    .map((b) => !!parseInt(b));\r\n  Object.keys(newState.allowedRecipes)\r\n    .sort((a, b) => {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    })\r\n    .forEach((key, i) => {\r\n      newState.allowedRecipes[key] = !!allowedRecipesBits[i];\r\n    });\r\n\r\n  const productionItemsStrings = fields[2].split(SEP1);\r\n  if (productionItemsStrings[0]) {\r\n    productionItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 3) throw new Error('INVALID DATA [productionItems]');\r\n      newState.productionItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        mode: getModeBySlug(values[1]),\r\n        value: values[2],\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputItemsStrings = fields[3].split(SEP1);\r\n  if (inputItemsStrings[0]) {\r\n    inputItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 4) throw new Error('INVALID DATA [inputItems]');\r\n      newState.inputItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        value: values[1],\r\n        weight: values[2],\r\n        unlimited: !!parseInt(values[3]),\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputResourcesStrings = fields[4].split(SEP1);\r\n  newState.inputResources.forEach((resourceOptions, i) => {\r\n    const values = inputResourcesStrings[i].split(SEP2);\r\n    if (values.length !== 3) throw new Error('INVALID DATA [inputResources]');\r\n    resourceOptions.value = values[0];\r\n    resourceOptions.weight = values[1];\r\n    resourceOptions.unlimited = !!parseInt(values[2]);\r\n  });\r\n\r\n  newState.allowHandGatheredItems = !!parseInt(fields[5]);\r\n\r\n  const weightingOptionsStrings = fields[6].split(SEP2);\r\n  if (weightingOptionsStrings.length !== 4) throw new Error('INVALID DATA [weightingOptions]');\r\n  newState.weightingOptions.resources = weightingOptionsStrings[0];\r\n  newState.weightingOptions.power = weightingOptionsStrings[1];\r\n  newState.weightingOptions.complexity = weightingOptionsStrings[2];\r\n  newState.weightingOptions.buildings = weightingOptionsStrings[3];\r\n\r\n  return newState;\r\n}\r\n","import { nanoid } from 'nanoid';\r\nimport { resources, recipes, items } from '../../data'\r\nimport { POINTS_ITEM_KEY } from '../../utilities/production-solver';\r\nimport { decodeState_v1_U5 } from './state-decoders/v1_U5';\r\nimport { decodeState_v2_U5 } from './state-decoders/v2_U5';\r\nimport { decodeState_v3_U5 } from './state-decoders/v3_U5';\r\n\r\nexport const FACTORY_SETTINGS_VERSION = 'v3_U5';\r\nexport const MAX_PRIORITY = 20;\r\n\r\n// TYPES\r\nexport type ProductionItemOptions = {\r\n  key: string,\r\n  itemKey: string,\r\n  mode: 'per-minute' | 'maximize' | string,\r\n  value: string,\r\n};\r\n\r\nexport type WeightingOptions = {\r\n  resources: string,\r\n  power: string,\r\n  complexity: string,\r\n  buildings: string,\r\n};\r\n\r\nexport type InputItemOptions = {\r\n  key: string,\r\n  itemKey: string,\r\n  value: string,\r\n  weight: string,\r\n  unlimited: boolean,\r\n};\r\n\r\nexport type RecipeMap = {\r\n  [key: string]: boolean,\r\n};\r\n\r\nexport type FactoryOptions = {\r\n  version: string,\r\n  key: string,\r\n  productionItems: ProductionItemOptions[],\r\n  inputItems: InputItemOptions[],\r\n  inputResources: InputItemOptions[],\r\n  allowHandGatheredItems: boolean,\r\n  weightingOptions: WeightingOptions,\r\n  allowedRecipes: RecipeMap,\r\n};\r\n\r\n\r\n// DEFAULTS\r\nfunction getDefaultProductionItem(): ProductionItemOptions {\r\n  return ({\r\n    key: nanoid(),\r\n    itemKey: '',\r\n    mode: 'per-minute',\r\n    value: '10',\r\n  });\r\n}\r\n\r\nfunction getDefaultInputItem(): InputItemOptions {\r\n  return ({\r\n    key: nanoid(),\r\n    itemKey: '',\r\n    value: '10',\r\n    weight: '0',\r\n    unlimited: false,\r\n  });\r\n}\r\n\r\nconst ORDERED_RESOURCES = [\r\n  'Desc_OreIron_C',\r\n  'Desc_OreCopper_C',\r\n  'Desc_Stone_C',\r\n  'Desc_Coal_C',\r\n  'Desc_OreGold_C',\r\n  'Desc_RawQuartz_C',\r\n  'Desc_Sulfur_C',\r\n  'Desc_LiquidOil_C',\r\n  'Desc_OreBauxite_C',\r\n  'Desc_OreUranium_C',\r\n  'Desc_NitrogenGas_C',\r\n  'Desc_Water_C',\r\n];\r\n\r\nfunction getInitialInputResources(): InputItemOptions[] {\r\n  return Object.entries(resources)\r\n    .map(([key, data]) => {\r\n      let value = '0';\r\n      let unlimited = false;\r\n      if (key === 'Desc_Water_C') {\r\n        unlimited = true;\r\n      } else {\r\n        value = String(data.maxExtraction);\r\n      }\r\n      return {\r\n        key: key,\r\n        itemKey: key,\r\n        value,\r\n        weight: String(data.relativeValue),\r\n        unlimited,\r\n      };\r\n    })\r\n    .sort((a, b) => {\r\n      let aIndex = ORDERED_RESOURCES.findIndex((r) => r === a.itemKey);\r\n      if (aIndex === -1) aIndex = Infinity;\r\n      let bIndex = ORDERED_RESOURCES.findIndex((r) => r === b.itemKey);\r\n      if (bIndex === -1) bIndex = Infinity;\r\n      return aIndex < bIndex ? -1 : 1;\r\n    });\r\n}\r\n\r\nfunction getInitialWeightingOptions(): WeightingOptions {\r\n  return {\r\n    resources: '1000',\r\n    power: '1',\r\n    complexity: '1',\r\n    buildings: '0',\r\n  };\r\n}\r\n\r\nfunction getInitialAllowedRecipes(): RecipeMap {\r\n  const recipeMap: RecipeMap = {};\r\n  Object.entries(recipes).forEach(([key, data]) => {\r\n    recipeMap[key] = !data.isAlternate;\r\n  });\r\n  return recipeMap;\r\n}\r\n\r\nexport function getInitialState(): FactoryOptions {\r\n  return {\r\n    version: FACTORY_SETTINGS_VERSION,\r\n    key: nanoid(),\r\n    productionItems: [],\r\n    inputItems: [],\r\n    inputResources: getInitialInputResources(),\r\n    allowHandGatheredItems: false,\r\n    weightingOptions: getInitialWeightingOptions(),\r\n    allowedRecipes: getInitialAllowedRecipes(),\r\n  };\r\n}\r\n\r\n\r\n// REDUCER\r\nexport type FactoryAction =\r\n  | { type: 'RESET_FACTORY' }\r\n  | { type: 'ADD_PRODUCTION_ITEM' }\r\n  | { type: 'DELETE_PRODUCTION_ITEM', key: string }\r\n  | { type: 'SET_PRODUCTION_ITEM', data: { key: string, itemKey: string } }\r\n  | { type: 'SET_PRODUCTION_ITEM_AMOUNT', data: { key: string, amount: string } }\r\n  | { type: 'SET_PRODUCTION_ITEM_MODE', data: { key: string, mode: string } }\r\n  | { type: 'ADD_INPUT_ITEM' }\r\n  | { type: 'DELETE_INPUT_ITEM', key: string }\r\n  | { type: 'UPDATE_INPUT_ITEM', data: InputItemOptions }\r\n  | { type: 'UPDATE_INPUT_RESOURCE', data: InputItemOptions }\r\n  | { type: 'SET_RESOURCES_TO_MAP_LIMITS' }\r\n  | { type: 'SET_RESOURCES_TO_0' }\r\n  | { type: 'SET_ALLOW_HAND_GATHERED_ITEMS', active: boolean }\r\n  | { type: 'UPDATE_WEIGHTING_OPTIONS', data: WeightingOptions }\r\n  | { type: 'SET_ALL_WEIGHTS_DEFAULT' }\r\n  | { type: 'SET_RECIPE_ACTIVE', key: string, active: boolean }\r\n  | { type: 'MASS_SET_RECIPES_ACTIVE', recipes: string[], active: boolean }\r\n  | { type: 'LOAD_FROM_QUERY_PARAM' };\r\n\r\nexport function reducer(state: FactoryOptions, action: FactoryAction): FactoryOptions {\r\n  switch (action.type) {\r\n    case 'RESET_FACTORY': {\r\n      return getInitialState();\r\n    }\r\n    case 'ADD_PRODUCTION_ITEM': {\r\n      const newProductionItems = [\r\n        ...state.productionItems,\r\n        getDefaultProductionItem(),\r\n      ];\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'DELETE_PRODUCTION_ITEM': {\r\n      const newProductionItems = state.productionItems\r\n        .filter((i) => i.key !== action.key);\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'SET_PRODUCTION_ITEM': {\r\n      const newProductionItems = state.productionItems\r\n        .map((item) => {\r\n          if (item.key === action.data.key) {\r\n            const newItem = { ...item };\r\n            newItem.itemKey = action.data.itemKey;\r\n            return newItem;\r\n          }\r\n          return item;\r\n        });\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'SET_PRODUCTION_ITEM_AMOUNT': {\r\n      const newProductionItems = state.productionItems\r\n        .map((item) => {\r\n          if (item.key === action.data.key) {\r\n            const newItem = { ...item };\r\n            newItem.value = action.data.amount;\r\n            return newItem;\r\n          }\r\n          return item;\r\n        });\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'SET_PRODUCTION_ITEM_MODE': {\r\n      const newProductionItems = state.productionItems\r\n        .map((item) => {\r\n          if (item.key === action.data.key) {\r\n            const newItem = { ...item };\r\n            newItem.mode = action.data.mode;\r\n            if (newItem.mode !== item.mode) {\r\n              if (newItem.mode === 'per-minute') {\r\n                newItem.value = '10';\r\n              } else if (newItem.mode === 'maximize') {\r\n                let nextPriority = MAX_PRIORITY;\r\n                while (nextPriority && nextPriority > 0) {\r\n                  // eslint-disable-next-line no-loop-func\r\n                  const priorityTaken = !!state.productionItems.find((i) => i.mode === 'maximize' && i.value === String(nextPriority));\r\n                  if (!priorityTaken) {\r\n                    break;\r\n                  }\r\n                  nextPriority--;\r\n                }\r\n                if (nextPriority > 0) {\r\n                  newItem.value = String(nextPriority);\r\n                } else {\r\n                  newItem.value = `${MAX_PRIORITY}`;\r\n                }\r\n              } else if (item.mode === 'per-minute' || item.mode === 'maximize') {\r\n                newItem.value = '1';\r\n              }\r\n            }\r\n            return newItem;\r\n          }\r\n          return item;\r\n        });\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'ADD_INPUT_ITEM': {\r\n      const newInputItems = [\r\n        ...state.inputItems,\r\n        getDefaultInputItem(),\r\n      ];\r\n      return { ...state, inputItems: newInputItems };\r\n    }\r\n    case 'DELETE_INPUT_ITEM': {\r\n      const newInputItems = state.inputItems\r\n        .filter((i) => i.key !== action.key);\r\n      return { ...state, inputItems: newInputItems };\r\n    }\r\n    case 'UPDATE_INPUT_ITEM': {\r\n      const newInputItems = state.inputItems\r\n        .map((i) => i.key === action.data.key ? action.data : i);\r\n      return { ...state, inputItems: newInputItems };\r\n    }\r\n    case 'UPDATE_INPUT_RESOURCE': {\r\n      const newInputResources = state.inputResources\r\n        .map((i) => i.key === action.data.key ? action.data : i);\r\n      return { ...state, inputResources: newInputResources };\r\n    }\r\n    case 'SET_RESOURCES_TO_MAP_LIMITS': {\r\n      const newInputResources = getInitialInputResources();\r\n      return { ...state, inputResources: newInputResources };\r\n    }\r\n    case 'SET_RESOURCES_TO_0': {\r\n      const newInputResources = state.inputResources\r\n        .map((data) => ({ ...data, value: '0', unlimited: false }));\r\n      return { ...state, inputResources: newInputResources };\r\n    }\r\n    case 'SET_ALLOW_HAND_GATHERED_ITEMS': {\r\n      return { ...state, allowHandGatheredItems: action.active };\r\n    }\r\n    case 'UPDATE_WEIGHTING_OPTIONS': {\r\n      const newWeightingOptions = { ...action.data };\r\n      return { ...state, weightingOptions: newWeightingOptions };\r\n    }\r\n    case 'SET_ALL_WEIGHTS_DEFAULT': {\r\n      const newWeightingOptions = getInitialWeightingOptions();\r\n      const newInputResources = state.inputResources\r\n        .map((i) => ({ ...i, weight: String(resources[i.itemKey].relativeValue) }));\r\n      return { ...state, weightingOptions: newWeightingOptions, inputResources: newInputResources };\r\n    }\r\n    case 'SET_RECIPE_ACTIVE': {\r\n      const newAllowedRecipes = { ...state.allowedRecipes };\r\n      newAllowedRecipes[action.key] = action.active;\r\n      return { ...state, allowedRecipes: newAllowedRecipes };\r\n    }\r\n    case 'MASS_SET_RECIPES_ACTIVE': {\r\n      const newAllowedRecipes = { ...state.allowedRecipes };\r\n      action.recipes.forEach((recipeKey) => {\r\n        newAllowedRecipes[recipeKey] = action.active;\r\n      });\r\n      return { ...state, allowedRecipes: newAllowedRecipes };\r\n    }\r\n    case 'LOAD_FROM_QUERY_PARAM': {\r\n      const params = new URLSearchParams(window.location.search);\r\n      const encodedState = params.get('f');\r\n      if (encodedState) {\r\n        try {\r\n          return decodeState(encodedState);\r\n        } catch (e) {\r\n          console.error(e);\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n// ENCODE/DECODE STATE\r\nfunction decodeState(stateStr: string): FactoryOptions {\r\n  const version = stateStr.substring(0, 5);\r\n  if (version === 'v1_U5') {\r\n    return decodeState_v1_U5(stateStr);\r\n  } else if (version === 'v2_U5') {\r\n    return decodeState_v2_U5(stateStr);\r\n  } else if (version === 'v3_U5') {\r\n    return decodeState_v3_U5(stateStr);\r\n  } else {\r\n    throw new Error('INVALID VERSION');\r\n  }\r\n}\r\n\r\nfunction getItemSlug(itemKey: string) {\r\n  if (itemKey === POINTS_ITEM_KEY) {\r\n    return 'points';\r\n  }\r\n  return items[itemKey].slug;\r\n}\r\n\r\nfunction getModeSlug(mode: string) {\r\n  if (mode === 'per-minute') return 'per_minute';\r\n  if (mode === 'maximize') return 'maximize';\r\n  const recipeKey = mode;\r\n  const recipeInfo = recipes[recipeKey];\r\n  if (recipeInfo) {\r\n    return recipeInfo.slug;\r\n  } else {\r\n    return 'null';\r\n  }\r\n}\r\n\r\nconst SEP0 = ',';\r\nconst SEP1 = '|';\r\nconst SEP2 = ':';\r\n\r\nexport function encodeState(state: FactoryOptions): string {\r\n  const fields: string[] = [];\r\n\r\n  fields.push(state.version);\r\n\r\n  const allowedRecipesBits = Object.keys((state.allowedRecipes))\r\n    .sort((a, b) => {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    })\r\n    .map((key) => state.allowedRecipes[key] ? '1' : '0')\r\n    .join('');\r\n  fields.push(BigInt(`0b${allowedRecipesBits}`).toString(16));\r\n\r\n  const productionItemsField: string[] = [];\r\n  state.productionItems.forEach((item) => {\r\n    if (!item.itemKey) return;\r\n    productionItemsField.push(`${getItemSlug(item.itemKey)}${SEP2}${getModeSlug(item.mode)}${SEP2}${item.value}`);\r\n  });\r\n  fields.push(productionItemsField.join(SEP1));\r\n\r\n  const inputItemsField: string[] = [];\r\n  state.inputItems.forEach((item) => {\r\n    if (!item.itemKey) return;\r\n    inputItemsField.push(`${getItemSlug(item.itemKey)}${SEP2}${item.value}${SEP2}${item.weight}${SEP2}${item.unlimited ? '1' : '0'}`);\r\n  });\r\n  fields.push(inputItemsField.join(SEP1));\r\n\r\n  const inputResourcesField: string[] = [];\r\n  state.inputResources.forEach((item) => {\r\n    inputResourcesField.push(`${item.value}${SEP2}${item.weight}${SEP2}${item.unlimited ? '1' : '0'}`);\r\n  });\r\n  fields.push(inputResourcesField.join(SEP1));\r\n\r\n  fields.push(`${state.allowHandGatheredItems ? '1' : '0'}`);\r\n\r\n  fields.push(`${state.weightingOptions.resources}${SEP2}${state.weightingOptions.power}${SEP2}${state.weightingOptions.complexity}${SEP2}${state.weightingOptions.buildings}`);\r\n\r\n  return fields.join(SEP0);\r\n}\r\n","import React, { createContext, useContext, useReducer, useState, useEffect, useMemo, useCallback } from 'react';\r\nimport _ from 'lodash';\r\nimport seedrandom from 'seedrandom';\r\nimport { usePrevious } from '../../hooks/usePrevious';\r\nimport { ProductionSolver, SolverResults } from '../../utilities/production-solver';\r\nimport { reducer, encodeState, FactoryOptions, FactoryAction, getInitialState } from './reducer';\r\nimport { useLocalStorageValue } from '@mantine/hooks';\r\n\r\nexport type ProductionContextType = {\r\n  state: FactoryOptions,\r\n  dispatch: React.Dispatch<FactoryAction>,\r\n  calculating: boolean,\r\n  solverResults: SolverResults | null,\r\n  calculate: () => void,\r\n  autoCalculate: boolean,\r\n  setAutoCalculate: (value: boolean) => void,\r\n  ficsitTip: string,\r\n  engineerId: string,\r\n};\r\n\r\nconst ONE_HOUR = 1000 * 60 * 60;\r\nconst seed = Math.floor(new Date().getTime() / (0.5 * ONE_HOUR));\r\nconst rng = seedrandom(String(seed));\r\n\r\nconst TIPS = [\r\n  'Pet the lizard doggo!',\r\n  'Get back to work!',\r\n  'Update 5 now available!',\r\n  'Arachnophobia mode enabled.',\r\n  'FICSIT does not waste.',\r\n  'Linear algebra!',\r\n  'Do not pet the spiders.',\r\n  'BEAMS.',\r\n  'Just 5 more minutes...',\r\n  'Thanks, Jace. Helps a lot!',\r\n];\r\n\r\nconst TIP_INDEX = Math.floor(rng() * TIPS.length);\r\nconst TIP = `FICSIT Tip #${TIP_INDEX}: ${TIPS[TIP_INDEX]}`;\r\n\r\nconst ID = Math.floor(Math.random() * 1e7).toString().padStart(7, '0');\r\n\r\nconst _handleCalculateFactory = _.debounce(async (\r\n    state: FactoryOptions,\r\n    setSolverResults: React.Dispatch<React.SetStateAction<SolverResults | null>>,\r\n    setCalculating: React.Dispatch<React.SetStateAction<boolean>>,\r\n  ) => {\r\n    setCalculating(true);\r\n    try {\r\n      const solver = new ProductionSolver(state);\r\n      const results = await solver.exec();\r\n      setSolverResults((prevState) => {\r\n        if (!prevState || prevState.timestamp < results.timestamp) {\r\n          console.log(`Computed in: ${results.computeTime}ms`);\r\n          return results;\r\n        }\r\n        return prevState;\r\n      });\r\n    } catch (e: any) {\r\n      setSolverResults({\r\n        productionGraph: null,\r\n        report: null,\r\n        timestamp: performance.now(),\r\n        computeTime: 0,\r\n        error: e.message,\r\n      });\r\n    } finally {\r\n      setCalculating(false);\r\n    }\r\n  }, 300, { leading: true, trailing: true });\r\n\r\n\r\n\r\n// CONTEXT\r\nexport const ProductionContext = createContext<ProductionContextType | null>(null);\r\nProductionContext.displayName = 'ProductionContext';\r\n\r\n\r\n// HELPER HOOK\r\nexport function useProductionContext() {\r\n  const ctx = useContext(ProductionContext);\r\n  if (!ctx) {\r\n    throw new Error('ProductionContext is null');\r\n  }\r\n  return ctx;\r\n}\r\n\r\n\r\n// PROVIDER\r\ntype PropTypes = { children: React.ReactNode };\r\nexport const ProductionProvider = ({ children }: PropTypes) => {\r\n  const [state, dispatch] = useReducer(reducer, getInitialState());\r\n  const [loadedFromQuery, setLoadedFromQuery] = useState(false);\r\n  const [firstCalculationDone, setFirstCalculationDone] = useState(false);\r\n  const [autoCalculate, setAutoCalculate] = useLocalStorageValue<'false' | 'true'>({ key: 'auto-calculate', defaultValue: 'true' });\r\n  const [calculating, setCalculating] = useState(false);\r\n  const [solverResults, setSolverResults] = useState<SolverResults | null>(null);\r\n  const [engineerId] = useLocalStorageValue<string>({ key: 'engineer-id', defaultValue: ID });\r\n  const prevState = usePrevious(state);\r\n\r\n  const autoCalculateBool = autoCalculate === 'true' ? true : false;\r\n\r\n  const handleCalculateFactory = useCallback(() => {\r\n    _handleCalculateFactory(state, setSolverResults, setCalculating)\r\n  }, [state]);\r\n\r\n  const handleSetAutoCalculate = (checked: boolean) => {\r\n    setAutoCalculate(checked ? 'true' : 'false');\r\n    if (checked) {\r\n      handleCalculateFactory();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loadedFromQuery) {\r\n      if (!firstCalculationDone) {\r\n        handleCalculateFactory();\r\n        setFirstCalculationDone(true);\r\n      } else if (autoCalculateBool && prevState !== state) {\r\n        handleCalculateFactory();\r\n      }\r\n    }\r\n  }, [autoCalculateBool, firstCalculationDone, handleCalculateFactory, loadedFromQuery, prevState, state]);\r\n\r\n  useEffect(() => {\r\n    if (!loadedFromQuery) {\r\n      dispatch({ type: 'LOAD_FROM_QUERY_PARAM' });\r\n      setLoadedFromQuery(true);\r\n    }\r\n  }, [loadedFromQuery]);\r\n\r\n  useEffect(() => {\r\n    if (prevState !== state) {\r\n      const encodedState = encodeState(state);\r\n      window.history.replaceState(null, '', window.location.pathname + '?f=' + encodedState);\r\n    }\r\n  }, [prevState, state]);\r\n\r\n  const ctxValue = useMemo(() => {\r\n    return {\r\n      state,\r\n      dispatch,\r\n      calculating,\r\n      solverResults,\r\n      calculate: handleCalculateFactory,\r\n      autoCalculate: autoCalculateBool,\r\n      setAutoCalculate: handleSetAutoCalculate,\r\n      ficsitTip: TIP,\r\n      engineerId,\r\n    };\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [autoCalculateBool, calculating, handleCalculateFactory, solverResults, state]);\r\n\r\n  return (\r\n    <ProductionContext.Provider value={ctxValue}>\r\n      {children}\r\n    </ProductionContext.Provider>\r\n  );\r\n}\r\n","import { useRef, useEffect } from 'react';\r\n\r\nexport function usePrevious<T>(value: T) {\r\n  const ref = useRef<T>();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n  return ref.current;\r\n}\r\n","import React, { createContext, useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useMantineTheme } from '@mantine/core';\r\n\r\nexport type DrawerContextType = {\r\n  rootNode: HTMLDivElement | null,\r\n};\r\n\r\n\r\n// CONTEXT\r\nexport const DrawerContext = createContext<DrawerContextType | null>(null);\r\nDrawerContext.displayName = 'DrawerContext';\r\n\r\n\r\n// HELPER HOOK\r\nexport function useDrawerContext() {\r\n  const ctx = useContext(DrawerContext);\r\n  if (!ctx) {\r\n    throw new Error('DrawerContext is null');\r\n  }\r\n  return ctx;\r\n}\r\n\r\n\r\n// PROVIDER\r\ntype Props = {\r\n  children: React.ReactNode,\r\n};\r\nexport const DrawerProvider = (props: Props) => {\r\n  const { children } = props;\r\n  const [rootNode, setRootNode] = useState<HTMLDivElement | null>(null);\r\n  const theme = useMantineTheme();\r\n\r\n  function setRef(ref: HTMLDivElement | null) {\r\n    setRootNode((prevState) => {\r\n      if (prevState !== ref) return ref;\r\n      return prevState;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <DrawerContext.Provider value={{ rootNode }}>\r\n      <DrawerRoot ref={setRef} topOffset={theme.other.headerHeight} />\r\n      {children}\r\n    </DrawerContext.Provider>\r\n  );\r\n}\r\n\r\nconst DrawerRoot = styled.div<{ topOffset: string }>`\r\n  position: fixed;\r\n  top: ${({ topOffset }) => topOffset};\r\n  left: 0px;\r\n  bottom: 0px;\r\n  right: 0px;\r\n  z-index: ${({ theme }) => theme.other.drawerZIndex};\r\n  margin: 0;\r\n  padding: 0;\r\n  pointer-events: none;\r\n`;\r\n","import React, { forwardRef, useEffect, useLayoutEffect, useRef } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\ninterface Props {\r\n  children: React.ReactNode,\r\n  rootNode?: HTMLElement | null,\r\n  createRoot?: boolean,\r\n  key?: string,\r\n  style?: Partial<CSSStyleDeclaration>,\r\n}\r\n\r\nconst Portal = forwardRef<HTMLElement, Props>((props, ref) => {\r\n  const { children, rootNode, createRoot, key, style } = props;\r\n  const target = useRef<HTMLElement | null>(document.createElement('div'));\r\n\r\n  if (!createRoot) {\r\n    target.current = rootNode || null;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (createRoot && target.current) {\r\n      if (style) {\r\n        Object.entries(style).forEach(([key, value]) => {\r\n          target.current!.style[key as any] = value as any;\r\n        });\r\n      }\r\n      document.body.append(target.current);\r\n    }\r\n\r\n    return () => {\r\n      if (createRoot && target.current) {\r\n        target.current.remove();\r\n      }\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    if (ref) {\r\n      if (typeof ref === 'function') {\r\n        ref(target.current);\r\n      } else {\r\n        ref.current = target.current;\r\n      }\r\n    }\r\n  }, [ref, target]);\r\n\r\n  if (!target.current) return null;\r\n  return createPortal(children, target.current, key);\r\n});\r\n\r\nexport default Portal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { UnstyledButton, Paper, Text, Container } from '@mantine/core';\r\nimport { useLocalStorageValue } from '@mantine/hooks';\r\nimport { ChevronsLeft, ChevronsRight } from 'react-feather';\r\nimport { useDrawerContext } from '../../contexts/drawer';\r\nimport Portal from '../../components/Portal';\r\n\r\ninterface Props {\r\n  open?: boolean,\r\n  onToggle?: (newState: boolean) => void,\r\n  children: React.ReactNode,\r\n}\r\n\r\nconst Drawer = (props: Props) => {\r\n  const { open, onToggle, children } = props;\r\n  const [fullyClosed, setFullyClosed] = useState(!open);\r\n  const [tooltipDismissed, setTooltipDismissed] = useLocalStorageValue<'false' | 'true'>({ key: 'tooltip-dismissed', defaultValue: 'false' });\r\n  const ctx = useDrawerContext();\r\n\r\n  const showTooltip = tooltipDismissed === 'false';\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      setTooltipDismissed('true');\r\n    }\r\n  }, [open, setTooltipDismissed]);\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      setFullyClosed(false);\r\n    }\r\n  }, [open]);\r\n\r\n  function handleTransitionEnd() {\r\n    if (!open) {\r\n      setFullyClosed(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Portal rootNode={ctx.rootNode}>\r\n      <DrawerDimmer open={!!open || showTooltip} onClick={() => { !!open && onToggle?.(!open); }} />\r\n      <DrawerContainer open={!!open} onTransitionEnd={handleTransitionEnd}>\r\n        <DrawerToggle onClick={() => { onToggle?.(!open); }}>\r\n          <ToggleLabel>\r\n            <ToggleLabelText>{open ? 'Close' : 'Open'} Control Panel</ToggleLabelText>\r\n            <ToggleLabelIcon>\r\n              {\r\n                open\r\n                  ? <ChevronsLeft />\r\n                  : <ChevronsRight />\r\n              }\r\n            </ToggleLabelIcon>\r\n          </ToggleLabel>\r\n          {\r\n            showTooltip && (\r\n              <Tooltip>\r\n                <TooltipText>\r\n                  Click here to get started!\r\n                </TooltipText>\r\n                <TooltipConfirmContainer>\r\n                  <TooltipConfirm onClick={(e) => { setTooltipDismissed('true'); e.stopPropagation(); }}>\r\n                    Dismiss\r\n                  </TooltipConfirm>\r\n                </TooltipConfirmContainer>\r\n              </Tooltip>\r\n            )\r\n          }\r\n        </DrawerToggle>\r\n        <DrawerContent className='custom-scrollbar' aria-hidden={!open} fullyClosed={fullyClosed} fluid>\r\n          {children}\r\n        </DrawerContent>\r\n      </DrawerContainer>\r\n    </Portal>\r\n  )\r\n};\r\n\r\nexport default Drawer;\r\n\r\nconst DrawerDimmer = styled.div<{ open: boolean }>`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  bottom: 0px;\r\n  right: 0px;\r\n  margin: 0;\r\n  padding: 0;\r\n  background: #000;\r\n  opacity: ${({ open }) => open ? 0.7 : 0.0 };\r\n  transition: opacity 550ms;\r\n  pointer-events: ${({ open }) => open ? 'auto' : 'none' };\r\n`;\r\n\r\nconst DrawerContainer = styled.div<{ open: boolean }>`\r\n  position: relative;\r\n  top: 0px;\r\n  left: ${({ open, theme }) => (open ? '0px' : `-${theme.other.drawerWidth}`)};\r\n  width: ${({ theme }) => theme.other.drawerWidth};\r\n  height: 100%;\r\n  background: ${({ theme }) => theme.colors.background[0]};\r\n  transition: left 550ms;\r\n  transition-timing-function: cubic-bezier(.68, -0.21, .38, 1.26);\r\n  pointer-events: auto;\r\n`;\r\n\r\nconst DrawerToggle = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  top: 0px;\r\n  bottom: 0px;\r\n  right: -25px;\r\n  width: 25px;\r\n  background: ${({ theme }) => theme.colors.primary[6]};\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.primary[7]};\r\n  }\r\n`;\r\n\r\nconst ToggleLabel = styled(UnstyledButton)`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 0 0 auto;\r\n  right: -25px;\r\n  width: 30px;\r\n  height: 160px;\r\n  border-radius: 2px;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  background: ${({ theme }) => theme.colors.primary[6]};\r\n  color: ${({ theme }) => theme.white};\r\n  overflow: visible;\r\n  white-space: nowrap;\r\n\r\n  ${DrawerToggle}:hover & {\r\n    background: ${({ theme }) => theme.colors.primary[7]};\r\n  }\r\n\r\n  ::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: -24px;\r\n    right: 2px;\r\n    width: 50px;\r\n    height: 26px;\r\n    background: ${({ theme }) => theme.colors.primary[6]};\r\n    transform: rotate(50deg);\r\n    z-index: 1;\r\n\r\n    ${DrawerToggle}:hover & {\r\n      background: ${({ theme }) => theme.colors.primary[7]};\r\n    }\r\n  }\r\n\r\n  ::after {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: -24px;\r\n    right: 2px;\r\n    width: 50px;\r\n    height: 26px;\r\n    background: ${({ theme }) => theme.colors.primary[6]};\r\n    transform: rotate(-50deg);\r\n    z-index: 1;\r\n\r\n    ${DrawerToggle}:hover & {\r\n      background: ${({ theme }) => theme.colors.primary[7]};\r\n    }\r\n  }\r\n`;\r\n\r\nconst ToggleLabelText = styled.span`\r\n  position: absolute;\r\n  left: -16px;\r\n  z-index: 2;\r\n  writing-mode: vertical-rl;\r\n  text-orientation: mixed;\r\n`;\r\n\r\nconst ToggleLabelIcon = styled.span`\r\n  position: absolute;\r\n  left: 5px;\r\n  z-index: 2;\r\n`;\r\n\r\nconst Tooltip = styled(Paper)`\r\n  @keyframes lookAtMe {\r\n    from {\r\n      left: 84px;\r\n    }\r\n\r\n    to {\r\n      left: 80px;\r\n    }\r\n  }\r\n\r\n  animation: 300ms infinite alternate lookAtMe;\r\n\r\n  position: absolute;\r\n  left: 80px;\r\n  padding: 20px;\r\n  z-index: 3;\r\n  background: ${({ theme }) => theme.colors.info[6]};\r\n  border-radius: 2px;\r\n  pointer-events: none;\r\n\r\n  ::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: calc(50% - 10px);\r\n    left: -10px;\r\n    width: 20px;\r\n    height: 20px;\r\n    background: ${({ theme }) => theme.colors.info[6]};\r\n\r\n    transform: rotate(45deg);\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nconst TooltipText = styled(Text)`\r\n  width: 180px;\r\n  height: 40px;\r\n`;\r\n\r\nconst TooltipConfirmContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst TooltipConfirm = styled(UnstyledButton)`\r\n  pointer-events: auto;\r\n  color: ${({ theme }) => theme.white};\r\n  text-decoration: underline;\r\n`;\r\n\r\nconst DrawerContent = styled(Container)<{ fullyClosed: boolean }>`\r\n  visibility: ${({ fullyClosed }) => fullyClosed ? 'hidden' : 'visible'};\r\n  position: absolute;\r\n  top: 0px;\r\n  bottom: 0px;\r\n  left: 0px;\r\n  right: 0px;\r\n  padding: 10px;\r\n  padding-bottom: 30px;\r\n  overflow: auto;\r\n  overscroll-behavior: contain;\r\n`;\r\n","// import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Paper } from '@mantine/core';\r\n\r\nconst Card = styled(Paper)`\r\n  margin-bottom: 20px;\r\n  border-left: 5px solid ${({ theme }) => theme.colors.primary[6]};\r\n`;\r\n\r\nexport default Card;\r\n","// import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Text } from '@mantine/core';\r\nimport Card from '../Card';\r\n\r\nexport const Section = styled(Card)`\r\n  background: ${({ theme }) => theme.colors.background[1]};\r\n  box-shadow: 0px 0px 24px -6px #0F1011;\r\n  border: 3px solid ${({ theme }) => theme.colors.background[3]};\r\n  padding: 20px;\r\n`;\r\n\r\nexport const SectionDescription = styled(Text)`\r\n  margin-bottom: 20px;\r\n`;\r\n","import React from 'react';\r\nimport { Button, ButtonProps } from '@mantine/core';\r\nimport { Trash2 } from 'react-feather';\r\n\r\nconst TrashButton = (props: ButtonProps<React.ElementType<any>>) => {\r\n  return (\r\n    <Button { ...props} color='danger' style={{ ...(props?.style || {}), width: '36px', height: '36px', padding: '0px', flex: '0 0 auto' }}>\r\n      <Trash2 size={20} />\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default TrashButton;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button, Select, TextInput, Group, Divider, Title } from '@mantine/core';\r\nimport { items, recipes, resources } from '../../../../data';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\nimport { MAX_PRIORITY } from '../../../../contexts/production/reducer';\r\nimport { POINTS_ITEM_KEY } from '../../../../utilities/production-solver';\r\nimport { Section, SectionDescription } from '../../../../components/Section';\r\nimport TrashButton from '../../../../components/TrashButton';\r\n\r\nconst itemOptions = Object.keys(items)\r\n  .filter((key) => items[key].producedFromRecipes.length !== 0 && !resources[key])\r\n  .map((key) => ({\r\n    value: key,\r\n    label: items[key].name,\r\n  }))\r\n  .sort((a, b) => {\r\n    return a.label > b.label ? 1 : -1;\r\n  });\r\n\r\nitemOptions.unshift({\r\n  value: POINTS_ITEM_KEY,\r\n  label: 'AWESOME Sink Points (x1000)'\r\n});\r\n\r\nconst baseModeOptions = [\r\n  { value: 'per-minute', label: 'Items Per Min' },\r\n  { value: 'maximize', label: 'Maximize Output' },\r\n];\r\n\r\nconst priorityOptions = Array(MAX_PRIORITY)\r\n  .fill('')\r\n  .map((_, i) => ({ value: `${i + 1}`, label: `Priority: ${i + 1}` }))\r\n  .reverse();\r\n\r\nconst ProductionTab = () => {\r\n  const ctx = useProductionContext();\r\n\r\n  function renderItemInputs() {\r\n    return ctx.state.productionItems.map((data) => {\r\n      const modeOptions = [...baseModeOptions];\r\n      if (data.itemKey) {\r\n        const itemInfo = items[data.itemKey];\r\n        const recipeList = itemInfo?.producedFromRecipes || [];\r\n        recipeList.forEach((recipeKey) => {\r\n          const recipeInfo = recipes[recipeKey];\r\n          const target = recipeInfo?.products.find((p) => p.itemClass === data.itemKey);\r\n          if (target) {\r\n            const name = itemInfo.name === recipeInfo.name ? 'Base Recipe' : recipeInfo.name.replace('Alternate: ', '');\r\n            modeOptions.push({ value: recipeKey, label: `${name} [${target.perMinute}/min]` });\r\n          }\r\n        });\r\n      }\r\n      return (\r\n        <ItemContainer key={data.key}>\r\n          <Row>\r\n            <Select\r\n              placeholder='Select an item'\r\n              label='Item'\r\n              clearable\r\n              searchable\r\n              data={itemOptions}\r\n              value={data.itemKey ? data.itemKey : ''}\r\n              onChange={(value) => {\r\n                ctx.dispatch({\r\n                  type: 'SET_PRODUCTION_ITEM',\r\n                  data: { key: data.key, itemKey: (value as any) },\r\n                });\r\n              }}\r\n              style={{ flex: '1 1 auto' }}\r\n            />\r\n            <TrashButton onClick={() => { ctx.dispatch({ type: 'DELETE_PRODUCTION_ITEM', key: data.key }); }} style={{ position: 'relative', top: '13px' }} />\r\n          </Row>\r\n          <Row>\r\n            {\r\n              data.mode === 'maximize'\r\n                ? (\r\n                  <Select\r\n                    label='Priority'\r\n                    data={priorityOptions}\r\n                    value={data.value}\r\n                    onChange={(value) => {\r\n                      ctx.dispatch({\r\n                        type: 'SET_PRODUCTION_ITEM_AMOUNT',\r\n                        data: { key: data.key, amount: (value as any) },\r\n                      });\r\n                    }}\r\n                    style={{ width: '160px' }}\r\n                  />\r\n                )\r\n                : (\r\n                  <TextInput\r\n                    label='Amount'\r\n                    className='no-spinner'\r\n                    type='number'\r\n                    min='0'\r\n                    step='1'\r\n                    value={data.value}\r\n                    onChange={(e) => {\r\n                      ctx.dispatch({\r\n                        type: 'SET_PRODUCTION_ITEM_AMOUNT',\r\n                        data: { key: data.key, amount: e.currentTarget.value },\r\n                      });\r\n                    }}\r\n                    style={{ width: '160px' }}\r\n                  />\r\n                )\r\n            }\r\n            <Select\r\n              label='Mode'\r\n              data={modeOptions}\r\n              value={data.mode}\r\n              onChange={(value) => {\r\n                ctx.dispatch({\r\n                  type: 'SET_PRODUCTION_ITEM_MODE',\r\n                  data: { key: data.key, mode: (value as any) },\r\n                });\r\n              }}\r\n              style={{ width: '280px' }}\r\n            />\r\n          </Row>\r\n          <Divider style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n        </ItemContainer>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Title order={3}>Production Goals</Title>\r\n        <SectionDescription>\r\n          Select the items you want to produce. When maximizing multiple outputs, higher priority items will be maximized first. When selecting a recipe as a target, the factory will be forced to use that recipe for the final output.\r\n        </SectionDescription>\r\n        {renderItemInputs()}\r\n        <Button onClick={() => { ctx.dispatch({ type: 'ADD_PRODUCTION_ITEM' }) }}>\r\n          + Add Product\r\n        </Button>\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductionTab;\r\n\r\nconst Row = styled(Group)`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Info } from 'react-feather';\r\nimport { Tooltip } from '@mantine/core';\r\n\r\ninterface Props {\r\n  label: string,\r\n  tooltip: string,\r\n}\r\n\r\nconst LabelWithTooltip = (props: Props) => {\r\n  const { label, tooltip } = props;\r\n  \r\n  return (\r\n    <Label>\r\n      {label}{' '}\r\n      <Tooltip\r\n        label={tooltip}\r\n        withArrow\r\n        color='dark'\r\n        width={230}\r\n        wrapLines\r\n        arrowSize={8}\r\n      >\r\n        <Info size={12} />\r\n      </Tooltip>\r\n    </Label>\r\n  );\r\n};\r\n\r\nexport default LabelWithTooltip;\r\n\r\nconst Label = styled.div`\r\n  position: relative;\r\n  cursor: pointer;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button, Select, TextInput, Checkbox, Group, Title, Divider, Text } from '@mantine/core';\r\nimport { items, resources } from '../../../../data';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\nimport TrashButton from '../../../../components/TrashButton';\r\nimport { Section, SectionDescription } from '../../../../components/Section';\r\nimport LabelWithTooltip from '../../../../components/LabelWithTooltip';\r\n\r\nconst itemOptions = Object.keys(items)\r\n  .filter((key) => items[key].producedFromRecipes.length !== 0 && items[key].usedInRecipes.length !== 0 && !resources[key])\r\n  .map((key) => ({\r\n    value: key,\r\n    label: items[key].name,\r\n  }))\r\n  .sort((a, b) => {\r\n    return a.label > b.label ? 1 : -1;\r\n  });\r\n\r\n\r\nconst InputsTab = () => {\r\n  const ctx = useProductionContext();\r\n\r\n  function renderItemInputs() {\r\n    return ctx.state.inputItems.map((data) => (\r\n      <ItemContainer key={data.key}>\r\n        <Row>\r\n          <Select\r\n            placeholder=\"Select an item\"\r\n            label='Item'\r\n            clearable\r\n            searchable\r\n            data={itemOptions}\r\n            value={data.itemKey ? data.itemKey : ''}\r\n            onChange={(value) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_ITEM',\r\n                data: { ...data, itemKey: (value as string) },\r\n              });\r\n            }}\r\n            style={{ flex: '1 1 auto' }}\r\n          />\r\n          <TrashButton onClick={() => { ctx.dispatch({ type: 'DELETE_INPUT_ITEM', key: data.key }); }} style={{ position: 'relative', top: '13px' }} />\r\n        </Row>\r\n        <Row>\r\n          <TextInput\r\n            label='Amount'\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            disabled={data.unlimited}\r\n            value={data.value}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_ITEM',\r\n                data: { ...data, value: e.currentTarget.value },\r\n              });\r\n            }}\r\n          />\r\n          <Checkbox\r\n            className='label'\r\n            label='Unlimited'\r\n            checked={data.unlimited}\r\n            onChange={() => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_ITEM',\r\n                data: { ...data, unlimited: !data.unlimited },\r\n              });\r\n            }}\r\n            style={{ position: 'relative', top: '13px' }}\r\n          />\r\n        </Row>\r\n        <Divider style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n      </ItemContainer>\r\n    ));\r\n  }\r\n\r\n  function renderWeightInputs() {\r\n    const weightingOptions = ctx.state.weightingOptions;\r\n    return (\r\n      <>\r\n        <Group grow>\r\n          <TextInput\r\n            label={<LabelWithTooltip label='Resource Efficiency' tooltip='This weighting prioritizes using as few resources as possible.' />}\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={weightingOptions.resources}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_WEIGHTING_OPTIONS',\r\n                data: { ...weightingOptions, resources: e.currentTarget.value },\r\n              });\r\n            }}\r\n          />\r\n          <TextInput\r\n            label={<LabelWithTooltip label='Power Efficiency' tooltip='This weighting prioritizes using as little power as possible.' />}\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={weightingOptions.power}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_WEIGHTING_OPTIONS',\r\n                data: { ...weightingOptions, power: e.currentTarget.value },\r\n              });\r\n            }}\r\n          />\r\n        </Group>\r\n        <Group grow style={{ marginTop: '10px' }}>\r\n          <TextInput\r\n            label={<LabelWithTooltip label='Complexity' tooltip='This weighting prioritizes reducing the number of inputs into each building. May not behave intuitively (WIP).' />}\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={weightingOptions.complexity}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_WEIGHTING_OPTIONS',\r\n                data: { ...weightingOptions, complexity: e.currentTarget.value },\r\n              });\r\n            }}\r\n          />\r\n          <TextInput\r\n            label={<LabelWithTooltip label='Buildings' tooltip='This weighting prioritizes using as few buildings as possible, discounting overclocking. May not be perfectly optimal, especially for smaller factories (WIP).' />}\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={weightingOptions.buildings}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_WEIGHTING_OPTIONS',\r\n                data: { ...weightingOptions, buildings: e.currentTarget.value },\r\n              });\r\n            }}\r\n          />\r\n        </Group>\r\n      </>\r\n    )\r\n  }\r\n\r\n  function renderResourceInputs() {\r\n    return ctx.state.inputResources.map((data) => (\r\n      <ItemContainer key={data.key}>\r\n        <Row>\r\n          <Text style={{ fontWeight: 'bold' }}>{items[data.itemKey].name}</Text>\r\n        </Row>\r\n        <Row>\r\n          <TextInput\r\n            label='Amount'\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={data.value}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_RESOURCE',\r\n                data: { ...data, value: e.currentTarget.value },\r\n              });\r\n            }}\r\n            disabled={data.unlimited}\r\n            style={{ flex: '1 1 auto' }}\r\n          />\r\n          <Checkbox\r\n            label='Unlimited'\r\n            checked={data.unlimited}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_RESOURCE',\r\n                data: { ...data, unlimited: e.currentTarget.checked },\r\n              });\r\n            }}\r\n            style={{ position: 'relative', top: '13px', flex: '1 1 auto' }}\r\n          />\r\n          <TextInput\r\n            label='Weight'\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={data.weight}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_RESOURCE',\r\n                data: { ...data, weight: e.currentTarget.value },\r\n              });\r\n            }}\r\n            style={{ flex: '0 0 100px' }}\r\n          />\r\n        </Row>\r\n        <Divider style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n      </ItemContainer>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Title order={3}>Input Items</Title>\r\n        <SectionDescription>\r\n          Select the items that you already have available and don't need to produce in this factory.\r\n        </SectionDescription>\r\n        {renderItemInputs()}\r\n        <Button onClick={() => { ctx.dispatch({ type: 'ADD_INPUT_ITEM' }) }}>\r\n          + Add Input\r\n        </Button>\r\n      </Section>\r\n      <Section>\r\n        <Title order={3}>Weighting Options</Title>\r\n        <SectionDescription>\r\n          Adjust the weights affecting the importance of various properties of the factory. A value of 0 indicates that that property is not considered during factory layout.\r\n        </SectionDescription>\r\n        {renderWeightInputs()}\r\n        <Button color='danger' onClick={() => { ctx.dispatch({ type: 'SET_ALL_WEIGHTS_DEFAULT' }) }} style={{ marginTop: '15px' }}>\r\n          Reset All Weights\r\n        </Button>\r\n      </Section>\r\n      <Section>\r\n        <Title order={3}>Raw Resources</Title>\r\n        <SectionDescription>\r\n          Select the raw resources that are available to your factory. The default values are set to the map limits. The weight value is a number representing how valuable that resource is when comparing recipes. The defaults are calculated automatically according to node rarity.\r\n        </SectionDescription>\r\n        <Group style={{ marginBottom: '15px' }}>\r\n          <Button color='danger' onClick={() => { ctx.dispatch({ type: 'SET_RESOURCES_TO_MAP_LIMITS' }) }}>\r\n            Set All To Maximum\r\n          </Button>\r\n          <Button color='danger' onClick={() => { ctx.dispatch({ type: 'SET_RESOURCES_TO_0' }) }}>\r\n            Set All To 0\r\n          </Button>\r\n        </Group>\r\n        <Checkbox\r\n          label='Allow hand-gathered resources (mycelia, flower petals, etc)'\r\n          checked={ctx.state.allowHandGatheredItems}\r\n          onChange={(e) => { ctx.dispatch({ type: 'SET_ALLOW_HAND_GATHERED_ITEMS', active: e.currentTarget.checked }) }}\r\n          style={{ marginBottom: '25px' }}\r\n          />\r\n        {renderResourceInputs()}\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsTab;\r\n\r\nconst Row = styled(Group)`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n","import React, { useState, useMemo, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { List, Checkbox, TextInput, Button, Group, Title, Grid, Col } from '@mantine/core';\r\nimport { Search } from 'react-feather';\r\nimport { recipes } from '../../../../data';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\nimport { Section, SectionDescription } from '../../../../components/Section';\r\n\r\nconst cleanAltNameRegex = /^Alternate: /;\r\nconst baseRecipes: { key: string, label: string }[] = [];\r\nconst altRecipes: { key: string, label: string }[] = [];\r\nObject.entries(recipes)\r\n  .forEach(([key, data]) => {\r\n    if (data.isAlternate) {\r\n      altRecipes.push({\r\n        key,\r\n        label: data.name.replace(cleanAltNameRegex, ''),\r\n      });\r\n    } else {\r\n      baseRecipes.push({\r\n        key,\r\n        label: data.name,\r\n      });\r\n    }\r\n  });\r\nbaseRecipes.sort((a, b) => (a.label > b.label ? 1 : -1));\r\naltRecipes.sort((a, b) => (a.label > b.label ? 1 : -1));\r\n\r\nconst RecipesTab = () => {\r\n  const ctx = useProductionContext();\r\n  const [searchValue, setSearchValue] = useState('');\r\n\r\n  const renderRecipeList = useCallback((recipeList: { key: string, label: string }[]) => {\r\n    return recipeList.map(({ key, label }) => ({\r\n      key,\r\n      label,\r\n      component: (\r\n        <List.Item key={key}>\r\n          <Checkbox\r\n            label={label}\r\n            checked={ctx.state.allowedRecipes[key]}\r\n            onChange={() => {\r\n              ctx.dispatch({\r\n                type: 'SET_RECIPE_ACTIVE',\r\n                key,\r\n                active: !ctx.state.allowedRecipes[key],\r\n              });\r\n            }}\r\n          />\r\n        </List.Item>\r\n      )\r\n    }));\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ctx.state, ctx.dispatch]);\r\n\r\n  const renderedBaseRecipes = useMemo(() => renderRecipeList(baseRecipes), [renderRecipeList]);\r\n  const renderedAltRecipes = useMemo(() => renderRecipeList(altRecipes), [renderRecipeList]);\r\n\r\n  function renderRecipeOptions(alternates: boolean) {\r\n    const renderedRecipes = alternates ? renderedAltRecipes : renderedBaseRecipes;\r\n    const filteredRecipes = renderedRecipes.filter(({ label }) => label.toLowerCase().includes(searchValue.toLowerCase()));\r\n    const filteredRecipeKeys = filteredRecipes.map(({ key }) => key);\r\n    return (\r\n      <>\r\n        <Group style={{ marginTop: '5px', marginBottom: '10px' }}>\r\n          <Button onClick={() => { ctx.dispatch({ type: 'MASS_SET_RECIPES_ACTIVE', recipes: filteredRecipeKeys, active: true }) }}>\r\n            Select All\r\n          </Button>\r\n          <Button onClick={() => { ctx.dispatch({ type: 'MASS_SET_RECIPES_ACTIVE', recipes: filteredRecipeKeys, active: false }) }}>\r\n            Select None\r\n          </Button>\r\n        </Group>\r\n        <List listStyleType='none' spacing={6}>\r\n          {filteredRecipes.map(({ component }) => component)}\r\n        </List>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Title order={3}>Recipes</Title>\r\n        <SectionDescription>\r\n          Select the recipes that you want to be considered in this factory.\r\n        </SectionDescription>\r\n        <TextInput\r\n          placeholder='Search...'\r\n          aria-label='search recipes'\r\n          icon={<Search size={16} />}\r\n          value={searchValue}\r\n          onChange={(e) => { setSearchValue(e.currentTarget.value); }}\r\n          style={{ marginBottom: '10px' }}\r\n        />\r\n        <Grid grow style={{ position: 'relative' }}>\r\n          <Col span={6}>\r\n            <Title order={3}>Alternate Recipes</Title>\r\n            {renderRecipeOptions(true)}\r\n          </Col>\r\n          <Col span={6}>\r\n            <Title order={3}>Base Recipes</Title>\r\n            {renderRecipeOptions(false)}\r\n          </Col>\r\n          <VDivider />\r\n        </Grid>\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipesTab;\r\n\r\nconst VDivider = styled.div`\r\n  position: absolute;\r\n  top: 20px;\r\n  bottom: 20px;\r\n  left: 255px;\r\n  width: 1px;\r\n  background: ${({ theme }) => theme.colors.background[3]};\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container, Tabs, Paper, Title, Divider, Group, Button, Switch } from '@mantine/core';\r\nimport { TrendingUp, Shuffle, Box } from 'react-feather';\r\nimport { useProductionContext } from '../../../contexts/production';\r\nimport ProductionTab from './ProductionTab';\r\nimport InputsTab from './InputsTab';\r\nimport RecipesTab from './RecipesTab';\r\n\r\nconst PlannerOptions = () => {\r\n  const ctx = useProductionContext();\r\n  \r\n  return (\r\n    <>\r\n      <Paper style={{ marginBottom: '20px', paddingTop: '10px' }}>\r\n        <Title order={2}>Control Panel</Title>\r\n        <Divider style={{ marginTop: '5px', marginBottom: '15px' }} />\r\n        <Group style={{ marginBottom: '15px' }}>\r\n          <Button\r\n            onClick={() => { ctx.calculate(); }}\r\n            disabled={ctx.autoCalculate}\r\n            style={{ marginRight: '15px' }}\r\n          >\r\n            Calculate\r\n          </Button>\r\n          <Button\r\n            color='danger'\r\n            onClick={() => { ctx.dispatch({ type: 'RESET_FACTORY' }) }}\r\n          >\r\n            Reset ALL Factory Options\r\n          </Button>\r\n        </Group>\r\n        <Switch\r\n          size='md'\r\n          label='Auto-calculate (turn this off if changing options is too slow)'\r\n          checked={ctx.autoCalculate}\r\n          onChange={(e) => { ctx.setAutoCalculate(e.currentTarget.checked); }}\r\n        />\r\n      </Paper>\r\n      <Tabs grow variant='outline'>\r\n        <Tabs.Tab label='Production' icon={<TrendingUp size={18} />}>\r\n          <TabContainer fluid>\r\n            <ProductionTab />\r\n          </TabContainer>\r\n        </Tabs.Tab>\r\n        <Tabs.Tab label='Inputs' icon={<Shuffle size={18} />}>\r\n          <TabContainer fluid>\r\n            <InputsTab />\r\n          </TabContainer>\r\n        </Tabs.Tab>\r\n        <Tabs.Tab label='Recipes' icon={<Box size={18} />}>\r\n          <TabContainer fluid>\r\n            <RecipesTab />\r\n          </TabContainer>\r\n        </Tabs.Tab>\r\n      </Tabs>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlannerOptions;\r\n\r\nconst TabContainer = styled(Container)`\r\n  padding: 15px 15px;\r\n  background: ${({ theme }) => theme.colors.background[1]}\r\n`;\r\n","import { MantineThemeOverride } from '@mantine/core';\r\n// import { gradientFromColor } from './utilities/color';\r\n\r\nconst defaultFont = \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\";\r\n\r\nconst baseSat = '77%';\r\nconst baseLight = '63%';\r\nconst selectSat = '58%';\r\nconst selectLight = '58%';\r\n\r\n\r\nexport const graphColors = {\r\n  // nodes\r\n  resource: { base: `hsl(31, ${baseSat}, ${baseLight})`, selected: `hsl(31, ${selectSat}, ${selectLight})` },\r\n  input: { base: `hsl(0, ${baseSat}, ${baseLight})`, selected: `hsl(0, ${selectSat}, ${selectLight})` },\r\n  handGathered: { base: `hsl(261, ${baseSat}, ${baseLight})`, selected: `hsl(261, ${selectSat}, ${selectLight})` },\r\n  sideProduct: { base: `hsl(311, ${baseSat}, ${baseLight})`, selected: `hsl(311, ${selectSat}, ${selectLight})` },\r\n  finalProduct: { base: `hsl(128, ${baseSat}, ${baseLight})`, selected: `hsl(128, ${selectSat}, ${selectLight})` },\r\n  recipe: { base: `hsl(197, ${baseSat}, ${baseLight})`, selected: `hsl(197, ${selectSat}, ${selectLight})` },\r\n  nuclear: { base: `hsl(50, ${baseSat}, ${baseLight})`, selected: `hsl(50, ${selectSat}, ${selectLight})` },\r\n\r\n  // edges\r\n  edge: { line: '#999999', label: '#eeeeee' },\r\n  incoming: { line: `hsl(31, ${baseSat}, ${baseLight})`, label: `hsl(31, ${baseSat}, ${baseLight})` },\r\n  outgoing: { line: `hsl(128, ${baseSat}, ${baseLight})`, label: `hsl(128, ${baseSat}, ${baseLight})` },\r\n}\r\n\r\nexport const theme: MantineThemeOverride = {\r\n  primaryColor: 'primary',\r\n  colors: {\r\n    'primary': [\"#fcebde\", \"#f9d8be\", \"#f7c59f\", \"#f4b17f\", \"#f19e60\", \"#ef8b40\", \"#ec7821\", \"#c4631c\", \"#94501e\", \"#673c1c\"],\r\n    'danger': [\"#fdb5b5\", \"#fda3a3\", \"#fc9191\", \"#fc7e7e\", \"#fb6c6c\", \"#fa5959\", \"#fa4747\", \"#f12929\", \"#dc1818\", \"#b21b1b\"],\r\n    'background': [\"#26282b\", \"#373b40\", \"#3f434a\", \"#50565e\", \"#6c7582\", \"#ffffff\", \"#ffffff\", \"#ffffff\", \"#b3b6ba\", \"#ffffff\"],\r\n    'info': Array(10).fill('#3065c7') as any,\r\n  },\r\n  white: '#eee',\r\n  fontFamily: defaultFont,\r\n  radius: { xs: 0, sm: 2, md: 4, lg: 8, xl: 16 },\r\n  headings: {\r\n    fontFamily: defaultFont,\r\n    fontWeight: 700,\r\n    sizes: {\r\n      h1: { fontSize: 36, lineHeight: 1.3 },\r\n      h2: { fontSize: 30, lineHeight: 1.35 },\r\n      h3: { fontSize: 22, lineHeight: 1.4 },\r\n      h4: { fontSize: 18, lineHeight: 1.45 },\r\n      h5: { fontSize: 16, lineHeight: 1.5 },\r\n      h6: { fontSize: 14, lineHeight: 1.5 },\r\n    }\r\n  },\r\n  other: {\r\n    headerHeight: '64px',\r\n    pageLeftMargin: '55px',\r\n    drawerWidth: '620px',\r\n    drawerZIndex: '10',\r\n    tooltipZIndex: '9999',\r\n    scrollbarTrackColor: '#212226',\r\n    scrollbarThumbColor: '#6c6c73',\r\n  },\r\n};\r\n\r\n\r\nexport const styles: any = {\r\n  AppShell: (theme: any) => ({\r\n    root: {\r\n      minHeight: '100vh',\r\n    }\r\n  }),\r\n  Paper: (theme: any) => ({\r\n    root: {\r\n      background: theme.colors.background[1],\r\n      padding: '15px',\r\n    }\r\n  }),\r\n  Text: (theme: any) => ({\r\n    root: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  Title: (theme: any) => ({\r\n    root: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  List: (theme: any) => ({\r\n    item: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  Anchor: (theme: any) => ({\r\n    root: {\r\n      color: theme.colors.primary[6],\r\n    }\r\n  }),\r\n  Select: (theme: any) => ({\r\n    label: {\r\n      color: theme.white,\r\n    },\r\n    item: {\r\n      borderRadius: '0px',\r\n    },\r\n    hovered: {\r\n      background: theme.colors.background[8],\r\n    },\r\n    selected: {\r\n      color: theme.white,\r\n      background: theme.colors.primary[5],\r\n    },\r\n  }),\r\n  TextInput: (theme: any) => ({\r\n    label: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  Checkbox: (theme: any) => ({\r\n    label: {\r\n      cursor: 'pointer',\r\n      color: theme.white,\r\n    },\r\n    input: {\r\n      cursor: 'pointer',\r\n    }\r\n  }),\r\n  Switch: (theme: any) => ({\r\n    label: {\r\n      cursor: 'pointer',\r\n      color: theme.white,\r\n    },\r\n    input: {\r\n      cursor: 'pointer',\r\n      background: theme.colors.background[1],\r\n      borderWidth: '2px',\r\n      '&:checked': {\r\n        background: theme.colors.primary[6],\r\n        borderColor: theme.colors.primary[6],\r\n      }\r\n    }\r\n  }),\r\n  Divider: (theme: any) => ({\r\n    horizontal: {\r\n      borderTopColor: theme.colors.background[3],\r\n    }\r\n  }),\r\n  Button: (theme: any) => ({\r\n    root: {\r\n      color: '#fff',\r\n      '&[disabled]': {\r\n        color: `${theme.white} !important`,\r\n        backgroundColor: `${theme.colors.primary[6]} !important`,\r\n        opacity: 0.5,\r\n      }\r\n    }\r\n  }),\r\n  Tabs: (theme: any) => ({\r\n    tabLabel: {\r\n      color: theme.white,\r\n      fontFamily: \"'M PLUS 1 Code', sans-serif\",\r\n      fontSize: '16px',\r\n    },\r\n    tabIcon: {\r\n      color: theme.white,\r\n    },\r\n    tabActive: {\r\n      background: `${theme.colors.background[1]} !important`,\r\n      borderBottomWidth: `0px !important`,\r\n    },\r\n    body: {\r\n      paddingTop: '0px',\r\n      background: theme.colors.background[0],\r\n      borderBottomLeftRadius: '2px',\r\n      borderBottomRightRadius: '2px',\r\n    },\r\n  }),\r\n  Tooltip: (theme: any) => ({\r\n    body: {\r\n      background: theme.colors.background[2],\r\n      border: '1px solid #aaa',\r\n    },\r\n    arrow: {\r\n      background: theme.colors.background[2],\r\n      borderBottom: '1px solid #aaa',\r\n      borderRight: '1px solid #aaa',\r\n    }\r\n  }),\r\n};\r\n","export function truncateFloat(n: number, places: number = 4) {\r\n  return n.toFixed(places).replace(/\\.?0+$/, '');\r\n}\r\n","import React, { forwardRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Title, Text, Divider, List, useMantineTheme, Paper } from '@mantine/core';\r\nimport { buildings, items, recipes } from '../../data';\r\nimport { truncateFloat } from '../../utilities/number';\r\nimport { NODE_TYPE } from '../../utilities/production-solver';\r\nimport { NodeData } from '../../containers/ProductionPlanner/PlannerResults/ProductionGraphTab';\r\nimport Portal from '../Portal';\r\n\r\ninterface Props {\r\n  currentNode: any | null,\r\n}\r\n\r\nconst GraphTooltip = forwardRef<HTMLDivElement, Props>((props, ref) => {\r\n  const { currentNode } = props;\r\n  const theme = useMantineTheme();\r\n\r\n  function renderInner() {\r\n    const data = currentNode.data() as NodeData;\r\n    if (data.type === NODE_TYPE.RECIPE) {\r\n      return renderRecipeInfo(data);\r\n    }\r\n    if (data.type === NODE_TYPE.RESOURCE) {\r\n      if (data.key === 'Desc_Water_C') {\r\n        return renderWaterExtractorInfo(data);\r\n      } else if (data.key === 'Desc_LiquidOil_C') {\r\n        return renderOilExtractorInfo(data);\r\n      } else if (data.key === 'Desc_NitrogenGas_C') {\r\n        return null;\r\n      }\r\n      return renderMinerInfo(data);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function renderRecipeInfo(data: NodeData) {\r\n    const recipeInfo = recipes[data.key];\r\n    const primaryProduct = recipeInfo.products[0];\r\n\r\n    const totalBuildings = Math.ceil(data.multiplier);\r\n    const clockPercentage = data.multiplier / totalBuildings * 100;\r\n    const itemsPerMinPerBuilding = primaryProduct.perMinute * data.multiplier / totalBuildings;\r\n\r\n    return (\r\n      <Tooltip>\r\n        <TooltipTitle order={3}>Recipe: [{recipeInfo.name}]</TooltipTitle>\r\n        <TooltipDivider />\r\n        <TooltipText>\r\n          <b>Buildings:</b> {totalBuildings}x {buildings[recipeInfo.producedIn].name}\r\n        </TooltipText>\r\n        <TooltipText>\r\n          <b>Clock speed:</b> {truncateFloat(clockPercentage)}% each\r\n        </TooltipText>\r\n        <TooltipText>\r\n          <b>Items per min:</b> {truncateFloat(itemsPerMinPerBuilding)} each\r\n        </TooltipText>\r\n        <TooltipDivider />\r\n        <TooltipText><b>Inputs:</b></TooltipText>\r\n        <List listStyleType='none' withPadding>\r\n          {\r\n            recipeInfo.ingredients.map((ingredient) => (\r\n              <List.Item>\r\n                <TooltipText>{items[ingredient.itemClass].name}: {truncateFloat(ingredient.perMinute * data.multiplier)} / min</TooltipText>\r\n              </List.Item>\r\n            ))\r\n          }\r\n        </List>\r\n        <TooltipText><b>Outputs:</b></TooltipText>\r\n        <List listStyleType='none' withPadding>\r\n          {\r\n            recipeInfo.products.map((product) => (\r\n              <List.Item>\r\n                <TooltipText>{items[product.itemClass].name}: {truncateFloat(product.perMinute * data.multiplier)} / min</TooltipText>\r\n              </List.Item>\r\n            ))\r\n          }\r\n        </List>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  function renderMinerInfo(data: NodeData) {\r\n    const itemInfo = items[data.key];\r\n    const baseNumMiners = data.multiplier / 60;\r\n    return (\r\n      <Tooltip>\r\n        <TooltipTitle order={3}>Resource: [{itemInfo.name}]</TooltipTitle>\r\n        <TooltipDivider />\r\n        <TooltipText><b>Miners required (assuming normal nodes):</b></TooltipText>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>100%</th>\r\n              <th>150%</th>\r\n              <th>200%</th>\r\n              <th>250%</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th>Mk. 1</th>\r\n              <td>{truncateFloat(baseNumMiners, 2)}x</td>\r\n              <td>{truncateFloat(baseNumMiners / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(baseNumMiners / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(baseNumMiners / 2.5, 2)}x</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Mk. 2</th>\r\n              <td>{truncateFloat(0.5 * baseNumMiners, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumMiners / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumMiners / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumMiners / 2.5, 2)}x</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Mk. 3</th>\r\n              <td>{truncateFloat(0.25 * baseNumMiners, 2)}x</td>\r\n              <td>{truncateFloat(0.25 * baseNumMiners / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(0.25 * baseNumMiners / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(0.25 * baseNumMiners / 2.5, 2)}x</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  function renderWaterExtractorInfo(data: NodeData) {\r\n    const itemInfo = items[data.key];\r\n    return (\r\n      <Tooltip>\r\n        <TooltipTitle order={3}>Resource: [{itemInfo.name}]</TooltipTitle>\r\n        <TooltipDivider />\r\n        <TooltipText><b>Extractors required:</b> {truncateFloat(data.multiplier / 120, 2)}x Water Extractor</TooltipText>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  function renderOilExtractorInfo(data: NodeData) {\r\n    const itemInfo = items[data.key];\r\n    const baseNumExtractors = data.multiplier / 120;\r\n    return (\r\n      <Tooltip>\r\n        <TooltipTitle order={3}>Resource: [{itemInfo.name}]</TooltipTitle>\r\n        <TooltipDivider />\r\n        <TooltipText><b>Extractors required:</b></TooltipText>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>100%</th>\r\n              <th>150%</th>\r\n              <th>200%</th>\r\n              <th>250%</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th>Impure</th>\r\n              <td>{truncateFloat(2.0 * baseNumExtractors, 2)}x</td>\r\n              <td>{truncateFloat(2.0 * baseNumExtractors / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(2.0 * baseNumExtractors / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(2.0 * baseNumExtractors / 2.5, 2)}x</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Normal</th>\r\n              <td>{truncateFloat(baseNumExtractors, 2)}x</td>\r\n              <td>{truncateFloat(baseNumExtractors / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(baseNumExtractors / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(baseNumExtractors / 2.5, 2)}x</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Pure</th>\r\n              <td>{truncateFloat(0.5 * baseNumExtractors, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumExtractors / 1.5, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumExtractors / 2.0, 2)}x</td>\r\n              <td>{truncateFloat(0.5 * baseNumExtractors / 2.5, 2)}x</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Portal ref={ref} createRoot style={{ zIndex: theme.other.tooltipZIndex, pointerEvents: 'none' }}>\r\n      {currentNode ? renderInner() : null}\r\n    </Portal>\r\n  );\r\n});\r\n\r\nexport default GraphTooltip;\r\n\r\nconst Tooltip = styled(Paper)`\r\n  position: relative;\r\n  bottom: 50px;\r\n  background: ${({ theme }) => theme.colors.background[2]};\r\n  border: 1px solid #aaa;\r\n  min-width: 300px;\r\n\r\n  ::before {\r\n    content: '';\r\n    position: absolute;\r\n    left: calc(50% - 10px);\r\n    bottom: -12px;\r\n    width: 20px;\r\n    height: 20px;\r\n    background: ${({ theme }) => theme.colors.background[2]};\r\n    border-bottom: 1px solid #aaa;\r\n    border-right: 1px solid #aaa;\r\n\r\n    transform: rotate(45deg);\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nconst TooltipTitle = styled(Title)`\r\n  font-size: 16px;\r\n`;\r\n\r\nconst TooltipText = styled(Text)`\r\n  font-size: 15px;\r\n`;\r\n\r\nconst TooltipDivider = styled(Divider)`\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  border-top-color: ${({ theme }) => theme.colors.background[4]};\r\n`;\r\n\r\nconst Table = styled.table`\r\n  color: ${({ theme }) => theme.white};\r\n  border-collapse: collapse;\r\n\r\n  & th, td {\r\n    padding: 10px;\r\n    text-align: left;\r\n    font-size: 15px;\r\n  }\r\n\r\n  & td {\r\n    border: 1px solid ${({ theme }) => theme.colors.background[4]};\r\n  }\r\n\r\n  & tr:nth-child(2n) td {\r\n    background: ${({ theme }) => theme.colors.background[3]};\r\n  }\r\n`;\r\n","import React, { useMemo, useRef, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { nanoid } from 'nanoid';\r\nimport Cytoscape, { Stylesheet } from 'cytoscape';\r\nimport klay from 'cytoscape-klay';\r\nimport GraphVisualizer from 'react-cytoscapejs';\r\nimport popper from 'cytoscape-popper';\r\nimport { Text, Container, Center, Group } from '@mantine/core';\r\nimport { AlertCircle } from 'react-feather';\r\nimport { ProductionGraph, GraphNode, GraphEdge, NODE_TYPE } from '../../../../utilities/production-solver';\r\nimport { items, recipes, buildings } from '../../../../data';\r\nimport { graphColors } from '../../../../theme';\r\nimport GraphTooltip from '../../../../components/GraphTooltip';\r\nimport { truncateFloat } from '../../../../utilities/number';\r\n\r\nCytoscape.use(popper);\r\nCytoscape.use(klay);\r\n\r\nif (process.env.NODE_ENV !== 'development') {\r\n  Cytoscape.warnings(false);\r\n}\r\n\r\nconst layout = {\r\n  name: 'klay',\r\n  padding: 40,\r\n  klay: {\r\n    direction: 'RIGHT',\r\n    edgeRouting: 'ORTHOGONAL',\r\n    nodePlacement: 'LINEAR_SEGMENTS',\r\n    edgeSpacingFactor: 0.2,\r\n    inLayerSpacingFactor: 0.7,\r\n    spacing: 90,\r\n    thoroughness: 10,\r\n  },\r\n};\r\n\r\nconst stylesheet: Stylesheet[] = [\r\n  {\r\n    // ====== BASE ====== //\r\n    selector: 'core',\r\n    style: {\r\n      'active-bg-color': '#000',\r\n      'active-bg-opacity': 0,\r\n      'active-bg-size': 0,\r\n      'selection-box-color': '#000',\r\n      'selection-box-border-color': '#000',\r\n      'selection-box-border-width': 0,\r\n      'selection-box-opacity': 0,\r\n      'outside-texture-bg-color': '#000',\r\n      'outside-texture-bg-opacity': 0,\r\n    },\r\n  },\r\n  {\r\n    selector: 'node',\r\n    style: {\r\n      'label': 'data(label)',\r\n      'text-valign': 'center',\r\n      'text-halign': 'center',\r\n      'height': '30px',\r\n      'width': '150px',\r\n      'text-max-width': '157px',\r\n      'padding-top': '20px',\r\n      'overlay-padding': 0,\r\n      'overlay-opacity': 0,\r\n      'text-wrap': 'wrap',\r\n      'font-size': '14px',\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge',\r\n    style: {\r\n      'label': 'data(label)',\r\n      'width': 1,\r\n      'curve-style': 'bezier',\r\n      'control-point-step-size': 100,\r\n      'target-arrow-shape': 'triangle-backcurve',\r\n      'arrow-scale': 1.2,\r\n      'overlay-padding': 0,\r\n      'overlay-opacity': 0,\r\n      'text-wrap': 'wrap',\r\n      'font-size': '14px',\r\n      'color': graphColors.edge.label,\r\n      'line-color': graphColors.edge.line,\r\n      'target-arrow-color': graphColors.edge.line,\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge.loop',\r\n    style: {\r\n      'loop-direction': '180deg',\r\n      'loop-sweep': '-40deg',\r\n      'edge-distances': 'node-position',\r\n      'source-endpoint': '-15% 50%',\r\n      'target-endpoint': '15% 50%',\r\n    },\r\n  },\r\n\r\n\r\n  // ====== NODES ====== //\r\n  {\r\n    selector: 'node.item-shape',\r\n    style: {\r\n      'shape': 'ellipse',\r\n      'height': '40px',\r\n      'width': '130px',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.recipe-shape',\r\n    style: {\r\n      'shape': 'round-rectangle',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.selected, node.grabbed',\r\n    style: {\r\n      'z-index': 100,\r\n      'height': '45px',\r\n      'width': '195px',\r\n      'text-max-width': '192px',\r\n      'font-size': '16px',\r\n      'font-weight': 'bold',\r\n      'border-width': 2,\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.item-shape.selected, node.item-shape.grabbed',\r\n    style: {\r\n      'height': '55px',\r\n      'width': '170px',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.resource',\r\n    style: { 'background-color': graphColors.resource.base },\r\n  },\r\n  {\r\n    selector: 'node.resource.selected, node.resource.grabbed',\r\n    style: { 'background-color': graphColors.resource.selected },\r\n  },\r\n  {\r\n    selector: 'node.input',\r\n    style: { 'background-color': graphColors.input.base },\r\n  },\r\n  {\r\n    selector: 'node.input.selected, node.input.grabbed',\r\n    style: { 'background-color': graphColors.input.selected },\r\n  },\r\n  {\r\n    selector: 'node.hand-gathered',\r\n    style: { 'background-color': graphColors.handGathered.base },\r\n  },\r\n  {\r\n    selector: 'node.hand-gathered.selected, node.hand-gathered.grabbed',\r\n    style: { 'background-color': graphColors.handGathered.selected },\r\n  },\r\n  {\r\n    selector: 'node.side-product',\r\n    style: { 'background-color': graphColors.sideProduct.base },\r\n  },\r\n  {\r\n    selector: 'node.side-product.selected, node.side-product.grabbed',\r\n    style: { 'background-color': graphColors.sideProduct.selected },\r\n  },\r\n  {\r\n    selector: 'node.final-product',\r\n    style: { 'background-color': graphColors.finalProduct.base },\r\n  },\r\n  {\r\n    selector: 'node.final-product.selected, node.final-product.grabbed',\r\n    style: { 'background-color': graphColors.finalProduct.selected },\r\n  },\r\n  {\r\n    selector: 'node.recipe',\r\n    style: { 'background-color': graphColors.recipe.base },\r\n  },\r\n  {\r\n    selector: 'node.recipe.selected, node.recipe.grabbed',\r\n    style: { 'background-color': graphColors.recipe.selected },\r\n  },\r\n  {\r\n    selector: 'node.nuclear',\r\n    style: { 'background-color': graphColors.nuclear.base },\r\n  },\r\n  {\r\n    selector: 'node.nuclear.selected, node.nuclear.grabbed',\r\n    style: { 'background-color': graphColors.nuclear.selected },\r\n  },\r\n\r\n  \r\n  // ====== EDGES ====== //\r\n  {\r\n    selector: 'edge.selected, edge.grabbed',\r\n    style: {\r\n      'width': 4,\r\n      'font-size': '14px',\r\n      'font-weight': 'bold',\r\n      'text-outline-width': 2,\r\n      'z-index': 100,\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge.selected-incoming, edge.grabbed-incoming',\r\n    style: {\r\n      'color': graphColors.incoming.label,\r\n      'line-color': graphColors.incoming.line,\r\n      'target-arrow-color': graphColors.incoming.line,\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge.selected-outgoing, edge.grabbed-outgoing',\r\n    style: {\r\n      'color': graphColors.outgoing.label,\r\n      'line-color': graphColors.outgoing.line,\r\n      'target-arrow-color': graphColors.outgoing.line,\r\n    },\r\n  },\r\n];\r\n\r\nconst NODE_COLOR_CLASS = {\r\n  [NODE_TYPE.FINAL_PRODUCT]: 'final-product',\r\n  [NODE_TYPE.SIDE_PRODUCT]: 'side-product',\r\n  [NODE_TYPE.INPUT_ITEM]: 'input',\r\n  [NODE_TYPE.HAND_GATHERED_RESOURCE]: 'hand-gathered',\r\n  [NODE_TYPE.RESOURCE]: 'resource',\r\n  [NODE_TYPE.RECIPE]: 'recipe',\r\n};\r\n\r\nfunction getNodeLabel(node: GraphNode) {\r\n  let label = '';\r\n  let amountText = '';\r\n  if (node.type === NODE_TYPE.RECIPE) {\r\n    const recipe = recipes[node.key];\r\n    label = recipe.name;\r\n    amountText = `${truncateFloat(node.multiplier)}x ${buildings[recipe.producedIn].name}`;\r\n  } else {\r\n    const item = items[node.key];\r\n    if (node.type === NODE_TYPE.SIDE_PRODUCT) {\r\n      label = `Side Product:\\n${item.name}`;\r\n    } else {\r\n      label = item.name;\r\n    }\r\n    amountText = `${truncateFloat(node.multiplier)} / min`;\r\n  }\r\n  return `${label}\\n${amountText}`;\r\n}\r\n\r\nfunction getNodeClasses(node: GraphNode) {\r\n  const classes = [];\r\n  if (node.type === NODE_TYPE.RECIPE) {\r\n    classes.push('recipe-shape');\r\n    const recipe = recipes[node.key];\r\n    if (recipe.producedIn === 'Desc_GeneratorNuclear_C') {\r\n      classes.push('nuclear');\r\n    } else {\r\n      classes.push(NODE_COLOR_CLASS[node.type]);\r\n    }\r\n  } else {\r\n    classes.push('item-shape');\r\n    classes.push(NODE_COLOR_CLASS[node.type]);\r\n  }\r\n  return classes;\r\n}\r\n\r\nfunction getEdgeLabel(edge: GraphEdge) {\r\n  const item = items[edge.key];\r\n  const label = item.name;\r\n  const amountText = `${truncateFloat(edge.productionRate)} / min`;\r\n  return `${label}\\n${amountText}`;\r\n}\r\n\r\nfunction _resizeListener(graphRef: React.RefObject<HTMLDivElement | null>) {\r\n  if (graphRef?.current) {\r\n    const bounds = graphRef.current.getBoundingClientRect();\r\n    graphRef.current.style.height = `${window.innerHeight - bounds.top - 40}px`;\r\n  }\r\n}\r\n\r\ninterface Props {\r\n  activeGraph: ProductionGraph | null,\r\n  errorMessage: string,\r\n}\r\n\r\ninterface PopperRef {\r\n  popper: any,\r\n  nodeId: string,\r\n}\r\n\r\nexport interface NodeData extends GraphNode {\r\n  label: string,\r\n}\r\n\r\nexport interface EdgeData extends GraphEdge {\r\n  source: string,\r\n  target: string,\r\n  label: string,\r\n}\r\n\r\nconst ProductionGraphTab = (props: Props) => {\r\n  const { activeGraph, errorMessage } = props;\r\n  const [doFirstRender, setDoFirstRender] = useState(false);\r\n  const graphRef = useRef<HTMLDivElement | null>(null);\r\n  const cyRef = useRef<Cytoscape.Core | null>(null);\r\n  const popupRef = useRef<HTMLDivElement | null>(null);\r\n  const popperRef = useRef<PopperRef | null>(null);\r\n  const [popupNode, setPopupNode] = useState<any | null>(null);\r\n\r\n  function setGraphRef(instance: HTMLDivElement | null) {\r\n    if (instance && !graphRef.current) {\r\n      graphRef.current = instance;\r\n      _resizeListener(graphRef);\r\n      setDoFirstRender(true);\r\n    }\r\n  }\r\n\r\n  function setCyRef(instance: Cytoscape.Core | null) {\r\n    if (instance && cyRef.current !== instance) {\r\n      cyRef.current = instance;\r\n      setCyListeners(cyRef.current);\r\n    }\r\n  }\r\n\r\n  function setCyListeners(cy: Cytoscape.Core) {\r\n    cy.on('select', 'node', function (e) {\r\n      e.target.addClass('selected');\r\n      e.target.outgoers('edge').addClass('selected').addClass('selected-outgoing');\r\n      e.target.incomers('edge').addClass('selected').addClass('selected-incoming');\r\n    });\r\n\r\n    cy.on('unselect', 'node', function (e) {\r\n      e.target.removeClass('selected');\r\n      e.target.outgoers('edge').removeClass('selected').removeClass('selected-outgoing');\r\n      e.target.incomers('edge').removeClass('selected').removeClass('selected-incoming');\r\n    });\r\n\r\n    cy.on('grab', 'node', function (e) {\r\n      e.target.addClass('grabbed');\r\n      e.target.outgoers('edge').addClass('grabbed').addClass('grabbed-outgoing');\r\n      e.target.incomers('edge').addClass('grabbed').addClass('grabbed-incoming');\r\n    });\r\n\r\n    cy.on('free', 'node', function (e) {\r\n      e.target.removeClass('grabbed');\r\n      e.target.outgoers('edge').removeClass('grabbed').removeClass('grabbed-outgoing');\r\n      e.target.incomers('edge').removeClass('grabbed').removeClass('grabbed-incoming');\r\n    });\r\n\r\n    cy.on('mouseover', 'node', function (e) {\r\n      const nodeId = e.target.id() as string;\r\n      if (popperRef.current?.nodeId === nodeId) return;\r\n      deactivatePopper(cy);\r\n      activatePopper(cy, e.target);\r\n    });\r\n\r\n    cy.on('mouseout', 'node', function (e) {\r\n      const nodeId = e.target.id() as string;\r\n      if (popperRef.current?.nodeId === nodeId) {\r\n        deactivatePopper(cy);\r\n      }\r\n    });\r\n  }\r\n\r\n  function activatePopper(cy: Cytoscape.Core, node: any) {\r\n    const popper = node.popper({\r\n      content: () => popupRef.current || undefined,\r\n      popper: {\r\n        placement: 'top',\r\n      }\r\n    });\r\n    popperRef.current = { popper, nodeId: node.id() };\r\n    node.on('position', () => { popper.update(); });\r\n    cy.on('pan zoom resize', () => { popper.update(); });\r\n    setPopupNode(node);\r\n  }\r\n\r\n  function deactivatePopper(cy: Cytoscape.Core) {\r\n    if (!popperRef.current) return;\r\n    const node = cy.getElementById(popperRef.current.nodeId);\r\n    node.off('position');\r\n    cy.off('pan zoom resize');\r\n    popperRef.current.popper.destroy();\r\n    popperRef.current = null;\r\n    setPopupNode(null);\r\n  }\r\n\r\n  useEffect(() => {\r\n    function resizeListener() {\r\n      _resizeListener(graphRef);\r\n    }\r\n    window.addEventListener('resize', resizeListener);\r\n    return () => {\r\n      window.removeEventListener('resize', resizeListener);\r\n    }\r\n  }, []);\r\n\r\n  const graphProps = useMemo<any>(() => {\r\n    if (activeGraph == null) {\r\n      return null;\r\n    }\r\n\r\n    const key = nanoid();\r\n    const elements: any[] = [];\r\n\r\n    Object.entries(activeGraph.nodes).forEach(([key, node]) => {\r\n      elements.push({\r\n        group: 'nodes',\r\n        data: {\r\n          ...node,\r\n          label: getNodeLabel(node),\r\n        },\r\n        classes: getNodeClasses(node),\r\n      });\r\n    });\r\n    activeGraph.edges.forEach((edge) => {\r\n      elements.push({\r\n        group: 'edges',\r\n        data: {\r\n          ...edge,\r\n          source: edge.from,\r\n          target: edge.to,\r\n          label: getEdgeLabel(edge),\r\n        },\r\n        classes: edge.from === edge.to ? ['loop'] : undefined,\r\n      });\r\n    });\r\n    \r\n    return { key, elements };\r\n  }, [activeGraph]);\r\n\r\n  return (\r\n    <>\r\n      <GraphContainer fluid ref={setGraphRef}>\r\n        {\r\n          doFirstRender && (\r\n            graphProps != null\r\n            ? (\r\n                <GraphVisualizer\r\n                  key={graphProps.key}\r\n                  elements={graphProps.elements}\r\n                  layout={layout}\r\n                  stylesheet={stylesheet}\r\n                  boxSelectionEnabled={false}\r\n                  wheelSensitivity={0.13}\r\n                  maxZoom={3.0}\r\n                  minZoom={0.1}\r\n                  style={{ position: 'absolute', height: '100%', width: '100%', overflow: 'hidden' }}\r\n                  cy={setCyRef}\r\n                />\r\n            )\r\n            : (\r\n              <Center style={{ position: 'absolute', height: '100%', width: '100%' }}>\r\n                <Group>\r\n                  <AlertCircle color=\"#eee\" size={75} />\r\n                  <Group direction='column' style={{ gap: '0px' }}>\r\n                    <Text size='xl'>\r\n                      Could not build graph\r\n                    </Text>\r\n                    {errorMessage\r\n                      ? (\r\n                        <Text size='sm'>\r\n                          {`ERROR: ${errorMessage}`}\r\n                        </Text>\r\n                      )\r\n                      : null}\r\n                  </Group>\r\n                </Group>\r\n              </Center>\r\n            )\r\n          )\r\n        }\r\n      </GraphContainer>\r\n      <GraphTooltip ref={popupRef} currentNode={popupNode} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductionGraphTab;\r\n\r\nconst GraphContainer = styled(Container)`\r\n  position: relative;\r\n  min-height: 600px;\r\n  min-width: 800px;\r\n  border: 1px solid #fff;\r\n  border-top-width: 0px;\r\n  margin: 0px;\r\n  padding: 0px;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Title, List, Divider, Text, Container, Group } from '@mantine/core';\r\nimport { buildings, items } from '../../../../data';\r\nimport { Report } from '../../../../utilities/production-solver';\r\nimport { AlertCircle } from 'react-feather';\r\n\r\nfunction formatFloat(n: number) {\r\n  return n.toLocaleString(undefined, { maximumFractionDigits: 3 });\r\n}\r\n\r\ninterface Props {\r\n  report: Report | null,\r\n}\r\n\r\nconst ReportTab = (props: Props) => {\r\n  const { report } = props;\r\n  function renderReport() {\r\n    return (\r\n      <>\r\n        <Title order={2}>Statistics</Title>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Points Produced</SmallerTitle>\r\n        <Text>{formatFloat(report!.pointsProduced)} per min</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Resource Usage Score</SmallerTitle>\r\n        <Text>{formatFloat(report!.resourceEfficiencyScore)}</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Total Build Area</SmallerTitle>\r\n        <Text>{formatFloat(report!.totalBuildArea)} m²</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Estimated Minimal Foundations</SmallerTitle>\r\n        <Text>{formatFloat(report!.estimatedFoundations)} foundations ({formatFloat(report!.estimatedFoundations * 8)} Concrete)</Text>\r\n        <SDivider />\r\n\r\n        <Title order={2} style={{ marginTop: '30px' }}>Power</Title>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Manufacturing</SmallerTitle>\r\n        <Text>{formatFloat(report!.powerUsageEstimate.production)} MW</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Resource Extraction</SmallerTitle>\r\n        <Text>{formatFloat(report!.powerUsageEstimate.extraction)} MW</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Generation</SmallerTitle>\r\n        <Text>{formatFloat(report!.powerUsageEstimate.generators)} MW</Text>\r\n        <SDivider />\r\n        <SmallerTitle order={3}>Total {report!.powerUsageEstimate.total < 0 ? 'Production' : 'Usage'}</SmallerTitle>\r\n        <Text>{formatFloat(Math.abs(report!.powerUsageEstimate.total))} MW</Text>\r\n        <SDivider />\r\n\r\n        <Title order={2} style={{ marginTop: '30px' }}>Buildings</Title>\r\n        <SDivider />\r\n        <List listStyleType='none'>\r\n          {renderBuildingsUsed()}\r\n          <List.Item>\r\n            <Title order={3} style={{ marginBottom: '8px' }}>Total</Title>\r\n            <ListWithLine withPadding listStyleType='none'>\r\n              {\r\n                Object.entries(report!.totalMaterialCost)\r\n                  .sort((a, b) => {\r\n                    if (a[1] > b[1]) return -1;\r\n                    if (a[1] < b[1]) return 1;\r\n                    return 0;\r\n                  })\r\n                  .map(([itemKey, count]) => (\r\n                    <List.Item key={itemKey}>\r\n                      <ItemLabel>{items[itemKey].name}</ItemLabel> <Count>x{formatFloat(count)}</Count>\r\n                    </List.Item>\r\n                  ))\r\n              }\r\n            </ListWithLine>\r\n          </List.Item>\r\n        </List>\r\n      </>\r\n    );\r\n  }\r\n\r\n  function renderBuildingsUsed() {\r\n    return Object.entries(report!.buildingsUsed)\r\n      .sort((a, b) => {\r\n        if (a[1].count > b[1].count) return -1;\r\n        if (a[1].count < b[1].count) return 1;\r\n        return 0;\r\n      })\r\n      .map(([buildingKey, usageInfo]) => (\r\n      <List.Item key={buildingKey} style={{ paddingBottom: '10px' }}>\r\n        <Title order={3} style={{ marginBottom: '8px' }}>\r\n          {buildings[buildingKey].name} <Count>x{formatFloat(usageInfo.count)}</Count>\r\n        </Title>\r\n        <ListWithLine withPadding listStyleType='none' style={{ marginBottom: '10px' }}>\r\n          {\r\n            Object.entries(usageInfo.materialCost)\r\n              .sort((a, b) => {\r\n                if (a[1] > b[1]) return -1;\r\n                if (a[1] < b[1]) return 1;\r\n                return 0;\r\n              })\r\n              .map(([itemKey, count]) => (\r\n                <List.Item key={itemKey}>\r\n                  <ItemLabel>{items[itemKey].name}</ItemLabel>  <Count>x{formatFloat(count)}</Count>\r\n                </List.Item>\r\n              ))\r\n          }\r\n        </ListWithLine>\r\n      </List.Item>\r\n    ))\r\n  }\r\n  \r\n  return (\r\n    <ReportContainer fluid>\r\n      {\r\n      !report\r\n        ? (\r\n          <Group style={{ height: '150px', justifyContent: 'flex-start' }}>\r\n            <AlertCircle color=\"#eee\" size={50} />\r\n            <Text style={{ fontSize: '32px' }}>\r\n              No data available\r\n            </Text>\r\n          </Group>\r\n        )\r\n        : renderReport()\r\n      }\r\n    </ReportContainer>\r\n  );\r\n};\r\n\r\nexport default ReportTab;\r\n\r\nconst ReportContainer = styled(Container)`\r\n  padding: 10px;\r\n  padding-bottom: 15px;\r\n`;\r\n\r\nconst SDivider = styled(Divider)`\r\n  margin: 10px 0px;\r\n`;\r\n\r\nconst SmallerTitle = styled(Title)`\r\n  font-size: 19px;\r\n`;\r\n\r\nconst ItemLabel = styled.span`\r\n  font-size: 17px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Count = styled.span`\r\n  font-size: 15px;\r\n  margin-left: 3px;\r\n`;\r\n\r\nconst ListWithLine = styled(List)`\r\n  position: relative;\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0px;\r\n    bottom: 0px;\r\n    left: 12px;\r\n    width: 3px;\r\n    background: ${({ theme }) => theme.colors.background[3]};\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Container, MantineTheme, Tabs, useMantineTheme } from '@mantine/core';\r\nimport { Share2, Edit } from 'react-feather';\r\nimport ProductionGraphTab from './ProductionGraphTab';\r\nimport ReportTab from './ReportTab';\r\nimport { SolverResults } from '../../../utilities/production-solver';\r\nimport Card from '../../../components/Card';\r\n\r\ninterface Props {\r\n  solverResults: SolverResults | null;\r\n}\r\n\r\nconst tabSx = (theme: MantineTheme) => ({\r\n  '&.mantine-Tabs-tabControl': {\r\n    minWidth: '200px',\r\n  },\r\n});\r\n\r\nconst PlannerResults = (props: Props) => {\r\n  const { solverResults } = props;\r\n  const theme = useMantineTheme();\r\n  return (\r\n    <Tabs variant='outline'>\r\n      <Tabs.Tab label='Production Graph' icon={<Share2 size={18} />} sx={tabSx}>\r\n        <Container fluid padding={0}>\r\n          <ProductionGraphTab activeGraph={solverResults?.productionGraph || null} errorMessage={solverResults?.error || ''} />\r\n        </Container>\r\n      </Tabs.Tab>\r\n      <Tabs.Tab label='Factory Report' icon={<Edit size={18} />} sx={tabSx}>\r\n        <Card style={{ paddingLeft: '10px', background: theme.colors.background[0] }}>\r\n          <ReportTab report={solverResults?.report || null} />\r\n        </Card>\r\n      </Tabs.Tab>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default PlannerResults;\r\n","import React from 'react';\r\nimport { Divider, Text, Title } from '@mantine/core';\r\nimport { useLocalStorageValue } from '@mantine/hooks';\r\nimport { useProductionContext } from '../../contexts/production';\r\nimport Drawer from '../Drawer';\r\nimport PlannerOptions from './PlannerOptions';\r\nimport PlannerResults from './PlannerResults';\r\nimport Card from '../../components/Card';\r\n\r\nconst Factory = () => {\r\n  const [drawerOpen, setDrawerOpen] = useLocalStorageValue<'false' | 'true'>({ key: 'drawer-open', defaultValue: 'false' });\r\n  const ctx = useProductionContext();\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ marginBottom: '25px' }}>\r\n        <Title order={2}>\r\n          Welcome back &lt;Engineer ID #{ctx.engineerId}&gt;\r\n        </Title>\r\n        <Text>\r\n          This tool has been created to increase the efficiency of your work towards Project Assembly.<br />\r\n          We hope that you will continue to be effective.\r\n        </Text>\r\n        <Divider style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n        <Text style={{ fontSize: '13px' }}>\r\n          {ctx.ficsitTip}\r\n        </Text>\r\n      </Card>\r\n      <PlannerResults solverResults={ctx.solverResults} />\r\n      <Drawer open={drawerOpen === 'true'} onToggle={(value) => { setDrawerOpen(value ? 'true' : 'false'); }}>\r\n        <PlannerOptions />\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Factory;\r\n","import React from 'react';\r\nimport { ProductionProvider } from '../../contexts/production';\r\nimport Factory from './Factory';\r\n\r\nconst ProductionPlanner = () => {\r\n  return (\r\n    <ProductionProvider>\r\n      <Factory />\r\n    </ProductionProvider>\r\n  );\r\n};\r\n\r\nexport default ProductionPlanner;\r\n","import React from 'react';\r\n\r\nconst PaypalButton = () => {\r\n  return (\r\n    <form action=\"https://www.paypal.com/donate\" method=\"post\" target=\"_blank\" style={{ opacity: '0.8' }}>\r\n      <input type=\"hidden\" name=\"business\" value=\"EN9ZT88D25SRS\" />\r\n      <input type=\"hidden\" name=\"no_recurring\" value=\"1\" />\r\n      <input type=\"hidden\" name=\"item_name\" value=\"Wow, I didn't expect anyone to click this button! It honestly means a lot! I will put this money towards a nice coffee :P\" />\r\n      <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\r\n      <input type=\"image\" src=\"https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif\" name=\"submit\" title=\"PayPal - The safer, easier way to pay online!\" alt=\"Donate with PayPal button\" />\r\n      <img alt=\"\" src=\"https://www.paypal.com/en_US/i/scr/pixel.gif\" width=\"1\" height=\"1\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PaypalButton;\r\n","import React from 'react';\r\nimport { Anchor, AnchorProps } from '@mantine/core';\r\n\r\nconst ExternalLink = (props: AnchorProps<React.ElementType<any>>) => {\r\n  return <Anchor target='_blank' rel='noopener noreferrer' {...props} />;\r\n};\r\n\r\nexport default ExternalLink;\r\n","import React from 'react';\r\nimport { Title, Text } from '@mantine/core';\r\nimport Card from '../../components/Card';\r\nimport ExternalLink from '../../components/ExternalLink';\r\n\r\ninterface Props {\r\n  children: React.ReactNode,\r\n}\r\n\r\ninterface State {\r\n  hasError: boolean,\r\n}\r\n\r\nclass ErrorBoundary extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromError() {\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch() {\r\n    // TODO: log to reporting service\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <Card>\r\n          <Title>Oh no...</Title>\r\n          <Text>\r\n            Something broke horribly... Sorry about that, but that's why it says BETA at the top :P<br />\r\n            If you don't mind, you can <ExternalLink href='https://github.com/lydianlights/yet-another-factory-planner/issues'>file an issue on github</ExternalLink> or <ExternalLink href='https://discord.gg/p7e9ZzRHCm'>contact me on discord</ExternalLink> letting me know what you were doing, that way I can fix this crash.<br />\r\n            In the meantime, refreshing the page should reset everything and let you get back to work :D\r\n          </Text>\r\n        </Card>\r\n      )\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppShell, Header, Container, useMantineTheme, Anchor } from '@mantine/core';\r\nimport SiteHeader from './SiteHeader';\r\nimport ProductionPlanner from '../ProductionPlanner';\r\nimport PaypalButton from '../../components/PaypalButton';\r\nimport ExternalLink from '../../components/ExternalLink';\r\nimport ErrorBoundary from '../ErrorBoundary';\r\n\r\nconst Main = () => {\r\n  const theme = useMantineTheme();\r\n  return (\r\n    <AppShell\r\n      padding='md'\r\n      header={<SHeader height={theme.other.headerHeight} padding='sm'><SiteHeader /></SHeader>}\r\n    >\r\n      <MainContainer fluid>\r\n        <ErrorBoundary>\r\n          <ProductionPlanner />\r\n        </ErrorBoundary>\r\n        <Footer>\r\n          <FooterContent>\r\n            Made with ♥ by <ExternalLink href='https://github.com/lydianlights'>LydianLights</ExternalLink> -\r\n            Questions or bugs? File an <ExternalLink href='https://github.com/lydianlights/yet-another-factory-planner/issues'>issue on github</ExternalLink> or <ExternalLink href='https://discord.gg/p7e9ZzRHCm'>check out the discord</ExternalLink>\r\n          </FooterContent>\r\n          <PaypalButton />\r\n        </Footer>\r\n      </MainContainer>\r\n    </AppShell>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n\r\nconst SHeader = styled(Header)`\r\n  position: fixed;\r\n  margin: 0px;\r\n  padding: 10px;\r\n  background: ${({ theme }) => theme.colors.primary[6]};\r\n  overflow: hidden;\r\n`;\r\n\r\nconst MainContainer = styled(Container)`\r\n  margin-left: ${({ theme }) => theme.other.pageLeftMargin};\r\n  margin-top: ${({ theme }) => theme.other.headerHeight};\r\n  padding-left: 0px;\r\n`;\r\n\r\nconst Footer = styled(Container)`\r\n  margin-top: 40px;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst FooterContent = styled(Container)`\r\n  padding: 10px 20px;\r\n  color: ${({ theme }) => theme.white};\r\n  /* background: rgba(0, 0, 0, 0.3); */\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/stripe-bg.ddc4de7e.png\";","import { createGlobalStyle } from \"styled-components\";\r\nimport bgImage from './assets/stripe-bg.png';\r\n\r\nconst GlobalStylesheet = createGlobalStyle<any>`\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: ${({ theme }) => theme.fontFamily};\r\n    background: url(${bgImage});\r\n  }\r\n\r\n  #root {\r\n    min-height: 100vh;\r\n  }\r\n  \r\n  html,\r\n  .custom-scrollbar {\r\n    scrollbar-color: ${({ theme }) => `${theme.other.scrollbarThumbColor} ${theme.other.scrollbarTrackColor}`};\r\n\r\n    & > * {\r\n      scrollbar-color: initial; // prevent inheritance\r\n    }\r\n\r\n    ::-webkit-scrollbar {\r\n      width: auto;\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n      background-color: ${({ theme }) => theme.other.scrollbarTrackColor};\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n      background-color: ${({ theme }) => theme.other.scrollbarThumbColor};\r\n    }\r\n\r\n    ::-webkit-scrollbar-corner {\r\n      background-color: ${({ theme }) => theme.other.scrollbarTrackColor};\r\n    }\r\n    \r\n    ::-webkit-scrollbar-button:single-button {\r\n      background-color: ${({ theme }) => theme.other.scrollbarTrackColor};\r\n      display: block;\r\n      height: auto;\r\n      width: auto;\r\n      background-size: 10px;\r\n      background-repeat: no-repeat;\r\n      background-position: center center;\r\n    }\r\n\r\n    // Up\r\n    ::-webkit-scrollbar-button:single-button:vertical:decrement {\r\n      background-image: url(\"data:image/svg+xml;base64,${btoa('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill=\"#eee\"><polygon points=\"50,20 100,75 0,75 Z\"/></svg>')}\");\r\n    }\r\n\r\n    // Down\r\n    ::-webkit-scrollbar-button:single-button:vertical:increment {\r\n      background-image: url(\"data:image/svg+xml;base64,${btoa('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill=\"#eee\"><polygon points=\"50,75 100,20 0,20 Z\"/></svg>')}\");\r\n    }\r\n\r\n    // Left\r\n    ::-webkit-scrollbar-button:single-button:horizontal:decrement {\r\n      background-image: url(\"data:image/svg+xml;base64,${btoa('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill=\"#eee\"><polygon points=\"20,50 75,100 75,0 Z\"/></svg>')}\");\r\n    }\r\n\r\n    // Right\r\n    ::-webkit-scrollbar-button:single-button:horizontal:increment {\r\n      background-image: url(\"data:image/svg+xml;base64,${btoa('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" fill=\"#eee\"><polygon points=\"75,50 20,100 20,0 Z\"/></svg>')}\");\r\n    }\r\n  }\r\n`;\r\n\r\nexport default GlobalStylesheet;\r\n","import React from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { MantineProvider, useMantineTheme } from '@mantine/core';\r\nimport Main from './containers/Main';\r\nimport { DrawerProvider } from './contexts/drawer';\r\nimport { theme, styles } from './theme';\r\nimport GlobalStylesheet from './global-stylesheet';\r\n\r\nfunction App() {\r\n  return (\r\n    <MantineProvider\r\n      theme={theme}\r\n      styles={styles}\r\n    >\r\n      <ThemeTransfer />\r\n    </MantineProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst ThemeTransfer = () => {\r\n  const mergedTheme = useMantineTheme();\r\n  return (\r\n    <ThemeProvider theme={mergedTheme}>\r\n      <GlobalStylesheet />\r\n      <DrawerProvider>\r\n        <Main />\r\n      </DrawerProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}